{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/manage-realms/settings/campaigns.tsx\";\nimport React, { useState } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { Add, FileCopyOutlined as Icon, Remove, Error } from \"@material-ui/icons/\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\n// import AddCampaignModal from \"./component/realm-add-campaign/AddCampaignModal\";\nimport { ActiveCell, AsyncTable, SuccessModal, LoadingModal, Pagination, TableLoader } from \"common-components\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 145px;\n  padding: 5px 20px;\n  border-radius: 3px;\n  background-color: #fafafa;\n  margin: 10px 0;\n`;\nconst P = styled.p`\n  font-size: 16px;\n  color: #777777;\n`;\nconst AddCamp = styled.button`\n  cursor: pointer;\n  border: none;\n  outline: none;\n  color: #1194f6;\n  font-size: 16px;\n  background: inherit;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst RemoveBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  cursor: pointer;\n  text-decoration: underline;\n  color: #444851;\n`;\nconst IdCont = styled.span`\n  width: 278px;\n  padding: 12px 0px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst RealmName = styled.p`\n  width: fit-content;\n  text-decoration: underline;\n  color: #444851;\n`;\nconst NoDiv = styled.div`\n  min-height: 400px;\n`;\nconst GridDiv = styled.div`\n  display: grid;\n  justify-items: center;\n  margin-top: 150px;\n`;\nconst NoCamp = styled.p`\n  font-size: 18px;\n  text-align: center;\n  color: #7c8a97;\n`;\nconst NoCampSub = styled.p`\n  font-size: 16px;\n  text-align: center;\n  color: #777777;\n  max-width: 355px;\n`;\nexport default function CampaignSettings(props) {\n  const data = props.data,\n        removeCampaign = props.removeCampaign,\n        realm = props.realm,\n        paginateList = props.paginateList,\n        paginateFn = props.paginateFn,\n        addCampaign = props.addCampaign,\n        campaignsOrig = props.campaignsOrig;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        copy = _useState4[0],\n        setCopy = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selected = _useState6[0],\n        setSelected = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        openDelete = _useState8[0],\n        setOpenDelete = _useState8[1];\n\n  const _useState9 = useState(\"warn\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        modalType = _useState10[0],\n        setModalType = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        openAdd = _useState12[0],\n        setOpenAdd = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        text = _useState14[0],\n        setText = _useState14[1];\n\n  const openFunc = () => {\n    setOpenAdd(!openAdd);\n  };\n\n  const removeFn = () => {\n    setModalType(\"loading\");\n    setText(\"One moment. We're removing the campaign...\");\n    setTimeout(async () => {\n      const data = await removeCampaign(selected.uuid);\n\n      if (data.status === 200) {\n        setModalType(\"success\");\n        setText(`You have removed \"${selected.name}\" from ${realm.name}`);\n      }\n    }, 2000);\n  };\n\n  const closeFn = () => {\n    setOpenDelete(false);\n    setTimeout(() => {\n      setModalType(\"warn\");\n    }, 800);\n  };\n\n  const addCamp = () => {\n    setOpenDelete(false);\n    setOpenAdd(true);\n    setTimeout(() => {\n      setModalType(\"warn\");\n    }, 800);\n  };\n\n  const campFn = async camps => {\n    setSelected(true);\n    setModalType(\"loading\");\n    setText(\"One moment. We're adding the campaigns...\");\n    setTimeout(() => {\n      setOpenAdd(false);\n      setOpenDelete(true);\n    }, 500);\n    const data = await addCampaign(camps);\n\n    if (data.status) {\n      setText(\"Successfully added campaigns\");\n      setModalType(\"success\");\n    }\n  };\n\n  return loading ? React.createElement(TableLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(P, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"You can associate a campaign to this realm right from this page.\"), React.createElement(AddCamp, {\n    onClick: openFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Add, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), \"Add Campaign\")), data.length > 0 ? React.createElement(AsyncTable, {\n    customHeight: 480,\n    withBorder: true,\n    headers: [\"Name\", \"Slug\", \"UUID\", \"Status\", \"\"],\n    tableData: data,\n    render: (samples, {\n      userCell,\n      row,\n      cell,\n      uuid,\n      icon\n    }) => samples.map(sample => React.createElement(TableRow, {\n      className: row,\n      key: sample.uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(RealmName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, sample.name)), React.createElement(TableCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, sample.slug), React.createElement(TableCell, {\n      className: uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(IdCont, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, sample.uuid), React.createElement(CopyToClipboard, {\n      text: sample.uuid,\n      onCopy: () => setCopy(true),\n      onPointerLeave: () => setCopy(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, copy ? React.createElement(LightTooltip, {\n      title: \"UUID Copied!\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: icon,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })) : React.createElement(LightTooltip, {\n      title: \"Copy UUID\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: icon,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })))), React.createElement(ActiveCell, {\n      className: cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, sample.active), React.createElement(TableCell, {\n      className: cell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(RemoveBtn, {\n      onClick: () => {\n        setSelected(sample);\n        setOpenDelete(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Remove, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), \"Remove\")))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }) : React.createElement(NoDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(GridDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Error, {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), React.createElement(NoCamp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"There are no campaigns associated with this realm.\"), React.createElement(NoCampSub, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Would you like to add a campaign? Just hit the \\u201CAdd Campaign\\u201D button.\"))), Boolean(paginateList.length) && React.createElement(Pagination, {\n    paginateFn: paginateFn,\n    totalItems: paginateList.length,\n    itemsPerPage: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), selected ? modalType === \"warn\" ? React.createElement(SuccessModal, {\n    open: openDelete,\n    warning: true,\n    btnText: \"YES, REMOVE\",\n    btnFn: removeFn,\n    closeFn: closeFn,\n    text: `Are you sure you want to remove \"${selected.name}\" from ${realm.name}?`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }) : modalType === \"loading\" ? React.createElement(LoadingModal, {\n    open: true,\n    text: text,\n    cancelFn: closeFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }) : React.createElement(SuccessModal, {\n    open: openDelete,\n    btnText: text === \"Successfully added campaigns\" ? \"ADD ANOTHER\" : \"ADD CAMPAIGN\",\n    btnFn: addCamp,\n    closeFn: closeFn,\n    text: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }) : null);\n}","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/manage-realms/settings/campaigns.tsx"],"names":["React","useState","Tooltip","Add","FileCopyOutlined","Icon","Remove","Error","CopyToClipboard","withStyles","styled","TableRow","TableCell","ActiveCell","AsyncTable","SuccessModal","LoadingModal","Pagination","TableLoader","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","Grid","div","P","p","AddCamp","button","RemoveBtn","IdCont","span","RealmName","NoDiv","GridDiv","NoCamp","NoCampSub","CampaignSettings","props","data","removeCampaign","realm","paginateList","paginateFn","addCampaign","campaignsOrig","loading","setLoading","copy","setCopy","selected","setSelected","openDelete","setOpenDelete","modalType","setModalType","openAdd","setOpenAdd","text","setText","openFunc","removeFn","setTimeout","uuid","status","name","closeFn","addCamp","campFn","camps","length","samples","userCell","row","cell","icon","map","sample","slug","active","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Tooltip, Dialog } from \"@material-ui/core\";\nimport {\n  GroupOutlined,\n  Add,\n  FileCopyOutlined as Icon,\n  Remove,\n  Error\n} from \"@material-ui/icons/\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport { mdiContentCopy } from \"@mdi/js\";\n\n// import AddCampaignModal from \"./component/realm-add-campaign/AddCampaignModal\";\nimport {\n  ActiveCell,\n  AsyncTable,\n  SuccessModal,\n  LoadingModal,\n  Pagination,\n  TableLoader\n} from \"common-components\";\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 145px;\n  padding: 5px 20px;\n  border-radius: 3px;\n  background-color: #fafafa;\n  margin: 10px 0;\n`;\n\nconst P = styled.p`\n  font-size: 16px;\n  color: #777777;\n`;\n\nconst AddCamp = styled.button`\n  cursor: pointer;\n  border: none;\n  outline: none;\n  color: #1194f6;\n  font-size: 16px;\n  background: inherit;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst RemoveBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  cursor: pointer;\n  text-decoration: underline;\n  color: #444851;\n`;\n\nconst IdCont = styled.span`\n  width: 278px;\n  padding: 12px 0px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst RealmName = styled.p`\n  width: fit-content;\n  text-decoration: underline;\n  color: #444851;\n`;\n\nconst NoDiv = styled.div`\n  min-height: 400px;\n`;\n\nconst GridDiv = styled.div`\n  display: grid;\n  justify-items: center;\n  margin-top: 150px;\n`;\n\nconst NoCamp = styled.p`\n  font-size: 18px;\n  text-align: center;\n  color: #7c8a97;\n`;\n\nconst NoCampSub = styled.p`\n  font-size: 16px;\n  text-align: center;\n  color: #777777;\n  max-width: 355px;\n`;\n\nexport default function CampaignSettings(props: any) {\n  const {\n    data,\n    removeCampaign,\n    realm,\n    paginateList,\n    paginateFn,\n    addCampaign,\n    campaignsOrig\n  } = props;\n  const [loading, setLoading] = useState<boolean>(false);\n  const [copy, setCopy] = useState<boolean>(false);\n  const [selected, setSelected] = useState<any>(null);\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\n  const [modalType, setModalType] = useState(\"warn\");\n  const [openAdd, setOpenAdd] = useState<boolean>(false);\n  const [text, setText] = useState<string>(\"\");\n\n  const openFunc = () => {\n    setOpenAdd(!openAdd);\n  };\n\n  const removeFn = () => {\n    setModalType(\"loading\");\n    setText(\"One moment. We're removing the campaign...\");\n    setTimeout(async () => {\n      const data = await removeCampaign(selected.uuid);\n      if (data.status === 200) {\n        setModalType(\"success\");\n        setText(`You have removed \"${selected.name}\" from ${realm.name}`);\n      }\n    }, 2000);\n  };\n\n  const closeFn = () => {\n    setOpenDelete(false);\n    setTimeout(() => {\n      setModalType(\"warn\");\n    }, 800);\n  };\n\n  const addCamp = () => {\n    setOpenDelete(false);\n    setOpenAdd(true);\n    setTimeout(() => {\n      setModalType(\"warn\");\n    }, 800);\n  };\n\n  const campFn = async (camps: any) => {\n    setSelected(true);\n    setModalType(\"loading\");\n    setText(\"One moment. We're adding the campaigns...\");\n    setTimeout(() => {\n      setOpenAdd(false);\n      setOpenDelete(true);\n    }, 500);\n    const data = await addCampaign(camps);\n    if (data.status) {\n      setText(\"Successfully added campaigns\");\n      setModalType(\"success\");\n    }\n  };\n\n  return loading ? (\n    <TableLoader />\n  ) : (\n    <>\n      <Grid>\n        <P>You can associate a campaign to this realm right from this page.</P>\n        <AddCamp onClick={openFunc}>\n          <Add />\n          Add Campaign\n        </AddCamp>\n        {/* <AddCampaignModal\n          open={openAdd}\n          openFunc={openFunc}\n          data={campaignsOrig}\n          addCampaign={campFn}\n        /> */}\n      </Grid>\n      {data.length > 0 ? (\n        <AsyncTable\n          customHeight={480}\n          withBorder\n          headers={[\"Name\", \"Slug\", \"UUID\", \"Status\", \"\"]}\n          tableData={data}\n          render={(samples: any, { userCell, row, cell, uuid, icon }: any) =>\n            samples.map((sample: any) => (\n              <TableRow className={row} key={sample.uuid}>\n                <TableCell className={userCell}>\n                  <RealmName>{sample.name}</RealmName>\n                </TableCell>\n                <TableCell className={userCell}>{sample.slug}</TableCell>\n                <TableCell className={uuid}>\n                  <IdCont>{sample.uuid}</IdCont>\n                  <CopyToClipboard\n                    text={sample.uuid}\n                    onCopy={() => setCopy(true)}\n                    onPointerLeave={() => setCopy(false)}\n                  >\n                    {copy ? (\n                      <LightTooltip title=\"UUID Copied!\" placement=\"top\">\n                        <Icon className={icon} rotate={360} />\n                      </LightTooltip>\n                    ) : (\n                      <LightTooltip title=\"Copy UUID\" placement=\"top\">\n                        <Icon className={icon} rotate={360} />\n                      </LightTooltip>\n                    )}\n                  </CopyToClipboard>\n                </TableCell>\n                <ActiveCell className={cell}>{sample.active}</ActiveCell>\n                <TableCell className={cell} align=\"right\">\n                  <RemoveBtn\n                    onClick={() => {\n                      setSelected(sample);\n                      setOpenDelete(true);\n                    }}\n                  >\n                    <Remove />\n                    Remove\n                  </RemoveBtn>\n                </TableCell>\n              </TableRow>\n            ))\n          }\n        />\n      ) : (\n        <NoDiv>\n          <GridDiv>\n            <Error style={{ color: \"red\" }} />\n            <NoCamp>There are no campaigns associated with this realm.</NoCamp>\n            <NoCampSub>\n              Would you like to add a campaign? Just hit the “Add Campaign”\n              button.\n            </NoCampSub>\n          </GridDiv>\n        </NoDiv>\n      )}\n      {Boolean(paginateList.length) && (\n        <Pagination\n          paginateFn={paginateFn}\n          totalItems={paginateList.length}\n          itemsPerPage={5}\n        />\n      )}\n      {selected ? (\n        modalType === \"warn\" ? (\n          <SuccessModal\n            open={openDelete}\n            warning\n            btnText={\"YES, REMOVE\"}\n            btnFn={removeFn}\n            closeFn={closeFn}\n            text={`Are you sure you want to remove \"${selected.name}\" from ${realm.name}?`}\n          />\n        ) : modalType === \"loading\" ? (\n          <LoadingModal open={true} text={text} cancelFn={closeFn} />\n        ) : (\n          <SuccessModal\n            open={openDelete}\n            btnText={\n              text === \"Successfully added campaigns\"\n                ? \"ADD ANOTHER\"\n                : \"ADD CAMPAIGN\"\n            }\n            btnFn={addCamp}\n            closeFn={closeFn}\n            text={text}\n          />\n        )\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}