{"ast":null,"code":"import _objectWithoutProperties from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/manage-realms/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { HeaderButton, HeaderContainer, HeaderLink, SearchBar, TableLoader, FilterToolBar, Pagination, InputField, Modal, LoadingModal, SuccessModal, TableNoResult } from 'common-components';\nimport { Divider, Paper, InputAdornment, Dialog } from '@material-ui/core';\nimport { Container, menus, BtnCont, Switch, SaveButton, CancelBtn, constCreate, MockRealm } from './contsVar';\nimport { Add } from '@material-ui/icons';\nimport ReamlTable from './RealmTable';\nimport SEO from 'utils/seo';\n\nconst Realms = ({\n  history\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        realms = _useState2[0],\n        setRealms = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        paginateList = _useState4[0],\n        setPaginateList = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(constCreate),\n        _useState8 = _slicedToArray(_useState7, 2),\n        create = _useState8[0],\n        setCreate = _useState8[1];\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const cancel = () => {\n    // api cancel\n    console.log(\"cancel api\");\n  };\n\n  const getData = () => {\n    setLoading(true);\n    setCreate(constCreate);\n    setTimeout(() => {\n      setRealms(MockRealm);\n      setPaginateList(MockRealm);\n      setLoading(false);\n    }, 2000); // get('/identity/realm/list/', { order_by: '-datetime_modified' })\n    //   .then(res => {\n    //     setRealms(res.data)\n    //     setPaginateList(res.data)\n    //     setLoading(false)\n    //   })\n    //   .catch(err => console.log(err))\n  };\n\n  const paginate = (from, to) => {\n    setRealms(paginateList.slice(from, to));\n  };\n\n  const FilterApplyButton = params => {\n    setLoading(true);\n\n    var parameter = _objectSpread({}, params.sortby !== ' ' && {\n      order_by: params.sortby\n    }, {}, params.active !== ' ' && {\n      is_active: params.active\n    }, {}, params.company !== ' ' && {\n      company: params.company\n    }, {}, params.campaign !== ' ' && {\n      campaigns: params.campaign\n    }, {}, params.roles !== ' ' && {\n      groups: params.roles\n    }, {}, params.hasCompany !== ' ' && {\n      no_company: !params.hasCompany\n    });\n\n    setTimeout(() => {\n      const tempData = [{\n        \"uuid\": \"994dceb8-5062-11e7-a132-02420a000304\",\n        \"leader\": null,\n        \"slug\": \"external_rec\",\n        \"datetime_created\": \"2017-06-13T18:03:26.715623Z\",\n        \"datetime_modified\": \"2019-11-05T09:18:19.641105Z\",\n        \"name\": \"arman locas\",\n        \"active\": false\n      }];\n      setRealms(tempData);\n      setPaginateList(tempData);\n      setLoading(false);\n    }, 2000); // get('/identity/realm/list/', parameter).then(res => {\n    //   setRealms(res.data)\n    //   setPaginateList(res.data)\n    //   setLoading(false)\n    // })\n  };\n\n  const handleClose = () => {\n    setCreate(constCreate);\n  };\n\n  const handleChange = e => {\n    if (e.target.value) {\n      setCreate(_objectSpread({}, create, {\n        name: e.target.value,\n        nameErr: ''\n      }));\n    } else {\n      setCreate(_objectSpread({}, create, {\n        name: e.target.value,\n        nameErr: 'A realm name is required'\n      }));\n    }\n  };\n\n  const handleCreate = () => {\n    setCreate(_objectSpread({}, create, {\n      load: true\n    }));\n    setTimeout(() => {\n      setCreate(_objectSpread({}, create, {\n        load: false,\n        done: true\n      }));\n    }, 1500); // post('/identity/realm/create/', {\n    //   name: create.name,\n    //   active: create.active,\n    //   slug: slugify(create.name)\n    // })\n    //   .then(() => {\n    //     setCreate({ ...create, load: false, done: true })\n    //   })\n    //   .catch(err => {\n    //     try {\n    //       if (err.response.data) {\n    //         setCreate({\n    //           ...create,\n    //           load: false,\n    //           nameErr: 'realm with this name/slug already exists.'\n    //         })\n    //       }\n    //     } catch {\n    //       console.log(err)\n    //     }\n    //   })\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: \"Manage Realms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(HeaderLink, {\n    menu: menus,\n    title: \"Realms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), realms.length !== 0 && React.createElement(HeaderButton, {\n    openFunction: () => setCreate(_objectSpread({}, create, {\n      open: true\n    })),\n    buttonText: \"New realm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, !loading && realms.length === 0 ? React.createElement(TableNoResult, {\n    headerText: \"Realms\",\n    mainMessage: \"No realm have been created\",\n    subMessage: \"Would you like to creat one? Just hit the \\u201CNew Realm\\u201D button.\",\n    renderButton: // <SaveButton onClick={() => setCreate({ ...create, open: true })}>\n    React.createElement(SaveButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), \"New Realm\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    title: \"realm\",\n    userData: realms,\n    headers: ['name', 'uuid'],\n    active: true,\n    link: true,\n    loading: loading,\n    pathnameData: {\n      firstLink: `/manage/realms/edit/`,\n      fetchData: ['uuid'],\n      lastLink: ``\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(FilterToolBar, {\n    FilterApplyButton: FilterApplyButton,\n    sortBy: true,\n    activeStatus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), loading ? React.createElement(TableLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(ReamlTable, {\n    realms: realms,\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), Boolean(paginateList.length) && React.createElement(Pagination, {\n    paginateFn: paginate,\n    totalItems: paginateList.length,\n    paginateList: paginateList,\n    itemsPerPage: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))))), React.createElement(Dialog, {\n    open: create.load,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(LoadingModal, {\n    text: 'One moment. We’re adding the realm…',\n    cancelFn: () => {\n      // cancel()\n      setCreate(_objectSpread({}, create, {\n        load: false\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: create.done,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(SuccessModal, {\n    text: `You have created the “${create.name}” Realm`,\n    btnText: 'CREATE ANOTHER',\n    closeFn: getData,\n    btnFn: () => {\n      const open = constCreate.open,\n            rest = _objectWithoutProperties(constCreate, [\"open\"]);\n\n      setCreate(_objectSpread({}, rest, {\n        open: true\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    open: create.open,\n    title: \"Create new realm\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(InputField, {\n    label: \"Realm name\",\n    required: true,\n    fullWidth: true,\n    value: create.name,\n    onChange: handleChange,\n    onBlur: handleChange,\n    error: create.nameErr ? true : false,\n    helperText: create.nameErr ? create.nameErr : ' ',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    label: \"Active\",\n    disabled: true,\n    fullWidth: true,\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        color: \"primary\",\n        checked: create.active,\n        onChange: () => setCreate(_objectSpread({}, create, {\n          active: !create.active\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }), React.createElement(BtnCont, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(CancelBtn, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(SaveButton, {\n    disabled: !create.name || create.nameErr,\n    onClick: handleCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Create\"))));\n};\n\nexport { Realms };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/manage-realms/index.js"],"names":["React","useState","useEffect","HeaderButton","HeaderContainer","HeaderLink","SearchBar","TableLoader","FilterToolBar","Pagination","InputField","Modal","LoadingModal","SuccessModal","TableNoResult","Divider","Paper","InputAdornment","Dialog","Container","menus","BtnCont","Switch","SaveButton","CancelBtn","constCreate","MockRealm","Add","ReamlTable","SEO","Realms","history","realms","setRealms","paginateList","setPaginateList","loading","setLoading","create","setCreate","getData","cancel","console","log","setTimeout","paginate","from","to","slice","FilterApplyButton","params","parameter","sortby","order_by","active","is_active","company","campaign","campaigns","roles","groups","hasCompany","no_company","tempData","handleClose","handleChange","e","target","value","name","nameErr","handleCreate","load","done","display","flexDirection","justifyContent","alignItems","paddingBottom","length","open","width","firstLink","fetchData","lastLink","Boolean","rest","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  HeaderButton,\n  HeaderContainer,\n  HeaderLink,\n  SearchBar,\n  TableLoader,\n  FilterToolBar,\n  Pagination,\n  InputField,\n  Modal,\n  LoadingModal,\n  SuccessModal,\n  TableNoResult\n} from 'common-components'\nimport { Divider, Paper, InputAdornment, Dialog } from '@material-ui/core'\nimport {\n  Container,\n  menus,\n  BtnCont,\n  Switch,\n  SaveButton,\n  CancelBtn,\n  constCreate,\n  MockRealm\n} from './contsVar'\nimport { Add } from '@material-ui/icons'\nimport ReamlTable from './RealmTable'\nimport SEO from 'utils/seo'\n\n\nconst Realms = ({ history }) => {\n  const [realms, setRealms] = useState([])\n  const [paginateList, setPaginateList] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [create, setCreate] = useState(constCreate)\n\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const cancel = () => {\n    // api cancel\n    console.log(\"cancel api\")\n  }\n  const getData = () => {\n    setLoading(true)\n    setCreate(constCreate)\n    setTimeout(() => {\n      setRealms(MockRealm)\n      setPaginateList(MockRealm)\n      setLoading(false)\n    }, 2000)\n\n    // get('/identity/realm/list/', { order_by: '-datetime_modified' })\n    //   .then(res => {\n    //     setRealms(res.data)\n    //     setPaginateList(res.data)\n    //     setLoading(false)\n    //   })\n    //   .catch(err => console.log(err))\n  }\n\n  const paginate = (from, to) => {\n    setRealms(paginateList.slice(from, to))\n  }\n\n  const FilterApplyButton = params => {\n    setLoading(true)\n    var parameter = {\n      ...(params.sortby !== ' ' && { order_by: params.sortby }),\n      ...(params.active !== ' ' && { is_active: params.active }),\n      ...(params.company !== ' ' && { company: params.company }),\n      ...(params.campaign !== ' ' && { campaigns: params.campaign }),\n      ...(params.roles !== ' ' && { groups: params.roles }),\n      ...(params.hasCompany !== ' ' && { no_company: !params.hasCompany })\n    }\n\n    setTimeout(() => {\n      const tempData = [{\n        \"uuid\": \"994dceb8-5062-11e7-a132-02420a000304\",\n        \"leader\": null,\n        \"slug\": \"external_rec\",\n        \"datetime_created\": \"2017-06-13T18:03:26.715623Z\",\n        \"datetime_modified\": \"2019-11-05T09:18:19.641105Z\",\n        \"name\": \"arman locas\",\n        \"active\": false\n      }]\n      setRealms(tempData)\n      setPaginateList(tempData)\n      setLoading(false)\n    }, 2000)\n\n    // get('/identity/realm/list/', parameter).then(res => {\n    //   setRealms(res.data)\n    //   setPaginateList(res.data)\n    //   setLoading(false)\n    // })\n  }\n\n  const handleClose = () => {\n    setCreate(constCreate)\n  }\n\n  const handleChange = e => {\n    if (e.target.value) {\n      setCreate({ ...create, name: e.target.value, nameErr: '' })\n    } else {\n      setCreate({\n        ...create,\n        name: e.target.value,\n        nameErr: 'A realm name is required'\n      })\n    }\n  }\n  const handleCreate = () => {\n\n    setCreate({ ...create, load: true })\n    setTimeout(() => {\n      setCreate({ ...create, load: false, done: true })\n    }, 1500)\n\n    // post('/identity/realm/create/', {\n    //   name: create.name,\n    //   active: create.active,\n    //   slug: slugify(create.name)\n    // })\n    //   .then(() => {\n    //     setCreate({ ...create, load: false, done: true })\n    //   })\n    //   .catch(err => {\n    //     try {\n    //       if (err.response.data) {\n    //         setCreate({\n    //           ...create,\n    //           load: false,\n    //           nameErr: 'realm with this name/slug already exists.'\n    //         })\n    //       }\n    //     } catch {\n    //       console.log(err)\n    //     }\n    //   })\n  }\n\n  return (\n    <>\n      <SEO title=\"Manage Realms\" />\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingBottom: 30\n      }}>\n        <HeaderLink menu={menus} title=\"Realms\" />\n        {realms.length !== 0 && (\n          <HeaderButton\n            openFunction={() => setCreate({ ...create, open: true })}\n            buttonText=\"New realm\"\n          />\n        )}\n      </div>\n      <Paper  >\n        {!loading && realms.length === 0 ?\n          <TableNoResult\n            headerText=\"Realms\"\n            mainMessage=\"No realm have been created\"\n            subMessage=\"Would you like to creat one? Just hit the “New Realm” button.\"\n            renderButton={\n              // <SaveButton onClick={() => setCreate({ ...create, open: true })}>\n              <SaveButton >\n\n                <Add />\n                New Realm\n              </SaveButton>\n            }\n          />\n          :\n          <Container>\n            <div style={{ width: '100%' }}>\n              <SearchBar\n                title=\"realm\"\n                userData={realms}\n                headers={['name', 'uuid']}\n                active={true}\n                link={true}\n                loading={loading}\n                pathnameData={{\n                  firstLink: `/manage/realms/edit/`,\n                  fetchData: ['uuid'],\n                  lastLink: ``\n                }}\n              />\n              <Divider />\n              <FilterToolBar\n                FilterApplyButton={FilterApplyButton}\n                sortBy={true}\n                activeStatus={true}\n              />\n              {loading ? (\n                <TableLoader />\n              ) : (\n                  <>\n                    <ReamlTable realms={realms} history={history} />\n                    {Boolean(paginateList.length) && (\n                      <Pagination\n                        paginateFn={paginate}\n                        totalItems={paginateList.length}\n                        paginateList={paginateList}\n                        itemsPerPage={6}\n                      />\n                    )}\n                  </>\n                )}\n            </div>\n          </Container>\n        }\n      </Paper>\n\n      <Dialog open={create.load}>\n        <LoadingModal\n          text={'One moment. We’re adding the realm…'}\n          cancelFn={() => {\n            // cancel()\n            setCreate({ ...create, load: false })\n          }}\n        />\n      </Dialog>\n      <Dialog open={create.done}>\n        <SuccessModal\n          text={`You have created the “${create.name}” Realm`}\n          btnText={'CREATE ANOTHER'}\n          closeFn={getData}\n          btnFn={() => {\n            const { open, ...rest } = constCreate\n            setCreate({ ...rest, open: true })\n          }}\n        />\n      </Dialog>\n      <Modal open={create.open} title=\"Create new realm\" onClose={handleClose}>\n        <InputField\n          label=\"Realm name\"\n          required\n          fullWidth\n          value={create.name}\n          onChange={handleChange}\n          onBlur={handleChange}\n          error={create.nameErr ? true : false}\n          helperText={create.nameErr ? create.nameErr : ' '}\n        />\n        <InputField\n          label=\"Active\"\n          disabled\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Switch\n                  color=\"primary\"\n                  checked={create.active}\n                  onChange={() =>\n                    setCreate({ ...create, active: !create.active })\n                  }\n                />\n              </InputAdornment>\n            )\n          }}\n        />\n        <BtnCont>\n          <CancelBtn onClick={handleClose}>Cancel</CancelBtn>\n          <SaveButton\n            disabled={!create.name || create.nameErr}\n            onClick={handleCreate}\n          >\n            Create\n          </SaveButton>\n        </BtnCont>\n      </Modal>\n    </>\n  );\n};\n\nexport { Realms };\n"]},"metadata":{},"sourceType":"module"}