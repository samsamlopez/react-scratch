{"ast":null,"code":"import _objectWithoutProperties from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/panel-tabs/index.tsx\";\nimport React from 'react';\nimport { Box, Tab, Typography } from '@material-ui/core';\nimport { Cont, TabsStyled } from './styles';\n\nconst PanelTabs = ({\n  labels,\n  tab,\n  setTab\n}) => {\n  const handleChange = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  return React.createElement(Cont, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(TabsStyled, {\n    value: tab,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, labels.map((label, i) => React.createElement(Tab, {\n    label: label,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))));\n};\n\nconst Panel = (_ref) => {\n  let children = _ref.children,\n      value = _ref.value,\n      index = _ref.index,\n      other = _objectWithoutProperties(_ref, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Box, {\n    style: {\n      padding: 0\n    },\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children));\n};\n\nPanelTabs.defaultProps = {\n  labels: [],\n  tab: 0\n};\nPanel.defaultProps = {\n  value: 0,\n  index: 0\n};\nexport { PanelTabs, Panel };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/panel-tabs/index.tsx"],"names":["React","Box","Tab","Typography","Cont","TabsStyled","PanelTabs","labels","tab","setTab","handleChange","e","newValue","map","label","i","Panel","children","value","index","other","padding","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,QAAqC,mBAArC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,UAAjC;;AAQA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,GAAV;AAAeC,EAAAA;AAAf,CAAD,KAA6B;AACvE,QAAMC,YAAY,GAAG,CAACC,CAAD,EAA2BC,QAA3B,KAAgD;AACnEH,IAAAA,MAAM,CAACG,QAAD,CAAN;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEJ,GAAnB;AAAwB,IAAA,QAAQ,EAAEE,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KACV,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAED,KAAZ;AAAmB,IAAA,GAAG,EAAEC,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AASD,CAdD;;AAsBA,MAAMC,KAA2B,GAAG,UAA0C;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAC5E,SACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,MAAM,EAAEF,KAAK,KAAKC,KAHpB;AAIE,IAAA,EAAE,EAAG,4BAA2BA,KAAM,EAJxC;AAKE,uBAAkB,uBAAsBA,KAAM;AALhD,KAMMC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAA4B,IAAA,CAAC,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CARF,CADF;AAcD,CAfD;;AAiBAX,SAAS,CAACgB,YAAV,GAAyB;AACvBf,EAAAA,MAAM,EAAE,EADe;AAEvBC,EAAAA,GAAG,EAAE;AAFkB,CAAzB;AAKAQ,KAAK,CAACM,YAAN,GAAqB;AACnBJ,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,SAASb,SAAT,EAAoBU,KAApB","sourcesContent":["import React from 'react'\nimport { Box, Tab, Typography } from '@material-ui/core'\nimport { Cont, TabsStyled } from './styles'\n\ninterface PanelTabsProps {\n  labels: Array<string>\n  tab: number\n  setTab: Function\n}\n\nconst PanelTabs: React.FC<PanelTabsProps> = ({ labels, tab, setTab }) => {\n  const handleChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setTab(newValue)\n  }\n\n  return (\n    <Cont>\n      <TabsStyled value={tab} onChange={handleChange}>\n        {labels.map((label, i) => (\n          <Tab label={label} key={i} />\n        ))}\n      </TabsStyled>\n    </Cont>\n  )\n}\n\ninterface PanelProps {\n  children: React.ReactNode\n  value: number\n  index: number\n}\n\nconst Panel: React.FC<PanelProps> = ({ children, value, index, ...other }) => {\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box style={{ padding: 0 }} p={3}>\n        {children}\n      </Box>\n    </Typography>\n  )\n}\n\nPanelTabs.defaultProps = {\n  labels: [],\n  tab: 0\n} as Partial<PanelTabsProps>\n\nPanel.defaultProps = {\n  value: 0,\n  index: 0\n} as Partial<PanelProps>\n\nexport { PanelTabs, Panel }\n"]},"metadata":{},"sourceType":"module"}