{"ast":null,"code":"import _objectWithoutProperties from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/router/GatewayRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../auth/services/authService';\nexport default function GatewayRoute(props) {\n  let Component = props.component,\n      rest = _objectWithoutProperties(props, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    component: componentProps => {\n      return isAuth() ? React.createElement(Component, Object.assign({}, componentProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/router/GatewayRoute.tsx"],"names":["React","Route","Redirect","isAuth","GatewayRoute","props","Component","component","rest","componentProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,8BAAvB;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAAkC;AAAA,MAE/BC,SAF+B,GAERD,KAFQ,CAE1CE,SAF0C;AAAA,MAEjBC,IAFiB,4BAERH,KAFQ;;AAIhD,SAAO,oBAAC,KAAD,oBACAG,IADA;AAEJ,IAAA,SAAS,EAAGC,cAAD,IAAyB;AACnC,aAAON,MAAM,KAAK,oBAAC,SAAD,oBAAeM,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAL,GAAwC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArD;AACA,KAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAMA","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../auth/services/authService';\nexport default function GatewayRoute(props: any) {\n\n\tlet { component: Component, ...rest } = props;\n\n\treturn <Route \n\t\t\t\t{...rest} \n\t\t\t\tcomponent={(componentProps: any) => {\n\t\t\t\t\treturn isAuth() ? <Component {...componentProps}/> : <Redirect to=\"/\" />\n\t\t\t\t}}\n\t\t   />;\n}\n"]},"metadata":{},"sourceType":"module"}