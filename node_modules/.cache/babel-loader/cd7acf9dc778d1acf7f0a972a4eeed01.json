{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/gateway/components/Content.tsx\";\nimport React, { Fragment } from 'react';\nimport { List, ListItem, ListItemText, Divider } from '@material-ui/core';\n\nconst Content = ({\n  campaigns,\n  searchText\n}) => {\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Campaign\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), campaigns.map(campaign => React.createElement(Fragment, {\n    key: campaign.uuid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, searchText ? React.createElement(React.Fragment, null, campaign.name.match(new RegExp(searchText, 'i')) && React.createElement(React.Fragment, null, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: campaign.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))) : React.createElement(React.Fragment, null, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: campaign.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/gateway/components/Content.tsx"],"names":["React","Fragment","List","ListItem","ListItemText","Divider","Content","campaigns","searchText","map","campaign","uuid","name","match","RegExp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,EAAuCC,OAAvC,QAAsD,mBAAtD;;AAGA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AACrE,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGD,SAAS,CAACE,GAAV,CAAcC,QAAQ,IACrB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,GACT,0CACGE,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoB,IAAIC,MAAJ,CAAWN,UAAX,EAAuB,GAAvB,CAApB,KACC,0CACE,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEE,QAAQ,CAACE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFJ,CADS,GAYT,0CACE,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEF,QAAQ,CAACE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAbJ,CADD,CALH,CADF;AA+BD,CAhCD;;AAkCA,eAAeN,OAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport { List, ListItem, ListItemText, Divider } from '@material-ui/core'\nimport { ContentProps } from '../types'\n\nconst Content: React.FC<ContentProps> = ({ campaigns, searchText }) => {\n  return (\n    <List>\n      <ListItem>\n        <ListItemText primary={<strong>Campaign</strong>} />\n      </ListItem>\n      <Divider />\n      {campaigns.map(campaign => (\n        <Fragment key={campaign.uuid}>\n          {searchText ? (\n            <>\n              {campaign.name.match(new RegExp(searchText, 'i')) && (\n                <>\n                  <ListItem button>\n                    <ListItemText primary={campaign.name} />\n                  </ListItem>\n                  <Divider />\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              <ListItem button>\n                <ListItemText primary={campaign.name} />\n              </ListItem>\n              <Divider />\n            </>\n          )}\n        </Fragment>\n      ))}\n    </List>\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}