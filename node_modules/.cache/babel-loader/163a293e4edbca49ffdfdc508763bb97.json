{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/success-modal/index.tsx\";\nimport React from 'react';\nimport { Dialog } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport * as Styled from './style';\n\nconst SuccessModal = ({\n  open,\n  qty,\n  subtitle,\n  text,\n  btnText,\n  closeFn,\n  btnFn,\n  user,\n  warning\n}) => {\n  return React.createElement(Dialog, {\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, user ? React.createElement(Styled.Center, {\n    \"data-cy\": \"success-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Styled.Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Styled.CloseIconCont, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Styled.CloseIcon, {\n    onClick: closeFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Styled.CheckIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Styled.Great, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\xA1GREAT JOB!\"), React.createElement(Styled.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, text), React.createElement(Styled.P, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Don't forget to give the new user their password!\"), React.createElement(Styled.BtnCont, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Styled.NewUserBtn, {\n    onClick: btnFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Styled.NewUserText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Add, {\n    style: {\n      width: 18,\n      marginRight: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \" New User\")), React.createElement(Styled.BtnFn, {\n    onClick: closeFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Styled.BtnText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"GOT IT!\"))))) : React.createElement(Styled.Center, {\n    \"data-cy\": \"success-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Styled.Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Styled.CloseIconCont, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Styled.CloseIcon, {\n    onClick: closeFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), warning ? React.createElement(Styled.WarningIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : React.createElement(Styled.CheckIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Styled.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, text), qty ? React.createElement(Styled.P, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"You have purchased \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, qty, \" DIDS\"), \". \", subtitle) : warning ? React.createElement(Styled.P, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) : React.createElement(Styled.P, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"What do you want to do next?\"), React.createElement(Styled.BtnCont, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Styled.CloseBtn, {\n    onClick: closeFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Styled.CloseText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, warning ? 'Cancel' : 'Close')), btnFn || btnText ? React.createElement(Styled.BtnFn, {\n    onClick: btnFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Styled.BtnText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, btnText)) : null))));\n};\n\nSuccessModal.defaultProps = {\n  open: false,\n  qty: false,\n  subtitle: '',\n  text: '',\n  btnText: '',\n  user: false,\n  warning: false\n};\nexport { SuccessModal };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/success-modal/index.tsx"],"names":["React","Dialog","Add","Styled","SuccessModal","open","qty","subtitle","text","btnText","closeFn","btnFn","user","warning","width","marginRight","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Dialog } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport * as Styled from './style'\n\ninterface Props {\n  open: boolean\n  qty?: boolean\n  subtitle?: string\n  text?: string\n  btnText?: string\n  closeFn: () => void\n  btnFn: () => void\n  user?: boolean\n  warning?: boolean\n}\n\nconst SuccessModal: React.FC<Props> = ({\n  open,\n  qty,\n  subtitle,\n  text,\n  btnText,\n  closeFn,\n  btnFn,\n  user,\n  warning\n}) => {\n  return (\n    <Dialog open={open}>\n      {user ? (\n        <Styled.Center data-cy=\"success-modal\">\n          <Styled.Card>\n            <Styled.CloseIconCont>\n              <Styled.CloseIcon onClick={closeFn} />\n            </Styled.CloseIconCont>\n            <Styled.CheckIcon />\n            <Styled.Great>Â¡GREAT JOB!</Styled.Great>\n            <Styled.Text>{text}</Styled.Text>\n            <Styled.P>\n              Don't forget to give the new user their password!\n            </Styled.P>\n            <Styled.BtnCont>\n              <Styled.NewUserBtn onClick={btnFn}>\n                <Styled.NewUserText>\n                  <Add style={{ width: 18, marginRight: 4 }} /> New User\n                </Styled.NewUserText>\n              </Styled.NewUserBtn>\n              <Styled.BtnFn onClick={closeFn}>\n                <Styled.BtnText>GOT IT!</Styled.BtnText>\n              </Styled.BtnFn>\n            </Styled.BtnCont>\n          </Styled.Card>\n        </Styled.Center>\n      ) : (\n        <Styled.Center data-cy=\"success-modal\">\n          <Styled.Card>\n            <Styled.CloseIconCont>\n              <Styled.CloseIcon onClick={closeFn} />\n            </Styled.CloseIconCont>\n            {warning ? <Styled.WarningIcon /> : <Styled.CheckIcon />}\n            <Styled.Text>{text}</Styled.Text>\n            {qty ? (\n              <Styled.P>\n                You have purchased <b>{qty} DIDS</b>. {subtitle}\n              </Styled.P>\n            ) : warning ? (\n              <Styled.P />\n            ) : (\n              <Styled.P>What do you want to do next?</Styled.P>\n            )}\n            <Styled.BtnCont>\n              <Styled.CloseBtn onClick={closeFn}>\n                <Styled.CloseText>\n                  {warning ? 'Cancel' : 'Close'}\n                </Styled.CloseText>\n              </Styled.CloseBtn>\n              {btnFn || btnText ? (\n                <Styled.BtnFn onClick={btnFn}>\n                  <Styled.BtnText>{btnText}</Styled.BtnText>\n                </Styled.BtnFn>\n              ) : null}\n            </Styled.BtnCont>\n          </Styled.Card>\n        </Styled.Center>\n      )}\n    </Dialog>\n  )\n}\n\nSuccessModal.defaultProps = {\n  open: false,\n  qty: false,\n  subtitle: '',\n  text: '',\n  btnText: '',\n  user: false,\n  warning: false\n} as Partial<Props>\n\nexport { SuccessModal }\n"]},"metadata":{},"sourceType":"module"}