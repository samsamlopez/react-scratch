{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/metrics-card/index.tsx\";\nimport React from \"react\";\nimport { Typography, Divider } from \"@material-ui/core\";\nimport { PlayArrow } from \"@material-ui/icons\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { SeeChartButton } from \"../buttons\";\nimport styled from \"styled-components\";\n/**\n * ==============================================================================\n * <MetricsCard />\n * ------------------------------------------------------------------------------\n * @param {string}   title           Card Title\n * @param {string}   status          Type of change (increase,decrease,none)\n * @param {number}   percentage      Amount value of change\n * @param {string}   mode            Type of mode (bills,sales)\n * @param {array}    content         Content Data values\n * @return {ReactElement}\n * ==============================================================================\n */\n\nconst defaultProps = {\n  title: \"Text Title\",\n  status: \"increase\",\n  percentage: 90.2,\n  mode: \"bills\",\n  content: [{\n    tag: \"Last 90 days\",\n    value: 0.2\n  }, {\n    tag: \"Minimum\",\n    value: 0.21\n  }, {\n    tag: \"Average\",\n    value: 0.34\n  }, {\n    tag: \"Maximum\",\n    value: 0.84\n  }],\n  handleClick: () => console.log(\"Opening Chart...\")\n};\nconst theme = createMuiTheme({\n  shape: {\n    borderRadius: 0\n  }\n});\n\nconst MetricsCard = ({\n  title,\n  status,\n  percentage,\n  content,\n  mode,\n  handleClick\n}) => {\n  const renderPercentage = () => {\n    return React.createElement(React.Fragment, null, React.createElement(PercentContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, renderStatusArrow(), renderPercentValue()), React.createElement(Divider, {\n      style: {\n        marginTop: \"16px\",\n        height: \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  };\n\n  const renderListing = () => {\n    return React.createElement(ListContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, content.map((list, i) => {\n      return React.createElement(List, {\n        key: i,\n        style: {\n          marginTop: DynamicMargin(list)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ListText, {\n        style: {\n          color: TagColor(list)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, list.tag, \":\"), React.createElement(ListText, {\n        style: {\n          color: \"#7c8a97\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, TwoDecimal(list.value)));\n    }));\n  };\n\n  const renderPercentValue = () => {\n    return React.createElement(React.Fragment, null, React.createElement(Percentage, {\n      style: {\n        color: StatusControlStyle(\"color-percent\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, TwoDecimal(percentage), \"%\"));\n  };\n\n  const renderStatusArrow = () => {\n    return status === \"increase\" || status === \"decrease\" ? React.createElement(React.Fragment, null, React.createElement(PlayArrow, {\n      style: {\n        fontSize: \"34px\",\n        marginTop: StatusControlStyle(\"margin-top\"),\n        marginRight: \"19px\",\n        color: StatusControlStyle(\"color\"),\n        transform: StatusControlStyle(\"transform\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })) : null;\n  };\n\n  const StatusControlStyle = type => {\n    switch (type) {\n      case \"margin-top\":\n        {\n          return status === \"decrease\" ? \"1px\" : status === \"increase\" ? \"6px\" : \"0px\";\n        }\n        break;\n\n      case \"color\":\n        {\n          return status === \"decrease\" ? \"#ff504d\" : \"#a6c556\";\n        }\n        break;\n\n      case \"color-percent\":\n        {\n          return status === \"decrease\" ? \"#ff504d\" : status === \"increase\" ? \"#a6c556\" : \"#50555a\";\n        }\n        break;\n\n      case \"transform\":\n        {\n          return status === \"decrease\" ? \"rotate(-270deg)\" : \"rotate(-90deg)\";\n        }\n        break;\n\n      default:\n        return \"\";\n    }\n  };\n\n  const DynamicMargin = list => {\n    let index = IndexOf(list);\n\n    if (index === 0) {\n      return \"18px\";\n    } else if (index === 1) {\n      return \"6px\";\n    } else {\n      return \"4px\";\n    }\n  };\n\n  const TagColor = list => {\n    if (IndexOf(list) === 0) {\n      return \"#bbbbbb\";\n    } else {\n      return \"#50555a\";\n    }\n  };\n\n  const IndexOf = list => {\n    return content.indexOf(list);\n  };\n\n  const TwoDecimal = value => {\n    return value.toFixed(2);\n  };\n\n  const renderChartButton = () => {\n    return React.createElement(\"div\", {\n      style: {\n        width: \"inherit\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: `${mode === \"bills\" ? \"9px\" : \"17px\"}`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(SeeChartButton, {\n      mode: mode,\n      handleClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(MetricContainer, {\n    style: {\n      height: `${mode === \"bills\" ? \"306px\" : \"238px\"}`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      margin: \"19px 21px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, title), mode === \"bills\" && renderPercentage(), renderListing(), renderChartButton())));\n};\n\nMetricsCard.defaultProps = defaultProps;\nconst MetricContainer = styled.div`\n  min-height: 240px;\n  border-radius: 3px;\n  border: solid 1px #eeeeee;\n`;\nconst Title = styled(Typography)`\n  font-size: 16px !important;\n  font-weight: 500 !important;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  color: #50555a;\n  margin-bottom: -7px;\n`;\nconst Percentage = styled(Typography)`\n  font-size: 34px !important;\n  font-weight: 500 !important;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n`;\nconst PercentContainer = styled.div`\n  margin-top: 17px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst ListText = styled(Typography)`\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n`;\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst List = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nexport { MetricsCard };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/metrics-card/index.tsx"],"names":["React","Typography","Divider","PlayArrow","createMuiTheme","MuiThemeProvider","SeeChartButton","styled","defaultProps","title","status","percentage","mode","content","tag","value","handleClick","console","log","theme","shape","borderRadius","MetricsCard","renderPercentage","renderStatusArrow","renderPercentValue","marginTop","height","renderListing","map","list","i","DynamicMargin","color","TagColor","TwoDecimal","StatusControlStyle","fontSize","marginRight","transform","type","index","IndexOf","indexOf","toFixed","renderChartButton","width","display","flexDirection","alignItems","justifyContent","margin","MetricContainer","div","Title","Percentage","PercentContainer","ListText","ListContainer","List"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AACA,SAASC,SAAT,QAAqC,oBAArC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,0BAAjD;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;;;;;;;;;;;;AA2BA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,YADY;AAEnBC,EAAAA,MAAM,EAAE,UAFW;AAGnBC,EAAAA,UAAU,EAAE,IAHO;AAInBC,EAAAA,IAAI,EAAE,OAJa;AAKnBC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,GAAG,EAAE,cADP;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO,EAKP;AACED,IAAAA,GAAG,EAAE,SADP;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALO,EASP;AACED,IAAAA,GAAG,EAAE,SADP;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATO,EAaP;AACED,IAAAA,GAAG,EAAE,SADP;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbO,CALU;AAuBnBC,EAAAA,WAAW,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAvBA,CAArB;AA0BA,MAAMC,KAAK,GAAGf,cAAc,CAAC;AAC3BgB,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE;AADT;AADoB,CAAD,CAA5B;;AAMA,MAAMC,WAA4B,GAAG,CAAC;AACpCb,EAAAA,KADoC;AAEpCC,EAAAA,MAFoC;AAGpCC,EAAAA,UAHoC;AAIpCE,EAAAA,OAJoC;AAKpCD,EAAAA,IALoC;AAMpCI,EAAAA;AANoC,CAAD,KAO/B;AACJ,QAAMO,gBAA0B,GAAG,MAAM;AACvC,WACE,0CACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,iBAAiB,EADpB,EAEGC,kBAAkB,EAFrB,CADF,EAKE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,MADN;AAELC,QAAAA,MAAM,EAAE;AAFH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAcD,GAfD;;AAiBA,QAAMC,aAAuB,GAAG,MAAM;AACpC,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,OAAO,CAACgB,GAAR,CAAY,CAACC,IAAD,EAAgBC,CAAhB,KAA8B;AACzC,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEA,CADP;AAEE,QAAA,KAAK,EAAE;AACLL,UAAAA,SAAS,EAAEM,aAAa,CAACF,IAAD;AADnB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE;AACLG,UAAAA,KAAK,EAAEC,QAAQ,CAACJ,IAAD;AADV,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,IAAI,CAAChB,GALR,MANF,EAcE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE;AACLmB,UAAAA,KAAK,EAAE;AADF,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGE,UAAU,CAACL,IAAI,CAACf,KAAN,CALb,CAdF,CADF;AAwBD,KAzBA,CADH,CADF;AA8BD,GA/BD;;AAiCA,QAAMU,kBAA4B,GAAG,MAAM;AACzC,WACE,0CACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAE;AACLQ,QAAAA,KAAK,EAAEG,kBAAkB,CAAC,eAAD;AADpB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,UAAU,CAACxB,UAAD,CALb,MADF,CADF;AAWD,GAZD;;AAcA,QAAMa,iBAA2B,GAAG,MAAM;AACxC,WAAOd,MAAM,KAAK,UAAX,IAAyBA,MAAM,KAAK,UAApC,GACL,0CACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE;AACL2B,QAAAA,QAAQ,EAAE,MADL;AAELX,QAAAA,SAAS,EAAEU,kBAAkB,CAAC,YAAD,CAFxB;AAGLE,QAAAA,WAAW,EAAE,MAHR;AAILL,QAAAA,KAAK,EAAEG,kBAAkB,CAAC,OAAD,CAJpB;AAKLG,QAAAA,SAAS,EAAEH,kBAAkB,CAAC,WAAD;AALxB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,GAYH,IAZJ;AAaD,GAdD;;AAgBA,QAAMA,kBAA4B,GAAII,IAAD,IAAkB;AACrD,YAAQA,IAAR;AACE,WAAK,YAAL;AACE;AACE,iBAAO9B,MAAM,KAAK,UAAX,GACH,KADG,GAEHA,MAAM,KAAK,UAAX,GACA,KADA,GAEA,KAJJ;AAKD;AACD;;AACF,WAAK,OAAL;AACE;AACE,iBAAOA,MAAM,KAAK,UAAX,GAAwB,SAAxB,GAAoC,SAA3C;AACD;AACD;;AACF,WAAK,eAAL;AACE;AACE,iBAAOA,MAAM,KAAK,UAAX,GACH,SADG,GAEHA,MAAM,KAAK,UAAX,GACA,SADA,GAEA,SAJJ;AAKD;AACD;;AACF,WAAK,WAAL;AACE;AACE,iBAAOA,MAAM,KAAK,UAAX,GAAwB,iBAAxB,GAA4C,gBAAnD;AACD;AACD;;AACF;AACE,eAAO,EAAP;AA9BJ;AAgCD,GAjCD;;AAmCA,QAAMsB,aAAuB,GAAIF,IAAD,IAAmB;AACjD,QAAIW,KAAK,GAAGC,OAAO,CAACZ,IAAD,CAAnB;;AAEA,QAAIW,KAAK,KAAK,CAAd,EAAiB;AACf,aAAO,MAAP;AACD,KAFD,MAEO,IAAIA,KAAK,KAAK,CAAd,EAAiB;AACtB,aAAO,KAAP;AACD,KAFM,MAEA;AACL,aAAO,KAAP;AACD;AACF,GAVD;;AAYA,QAAMP,QAAkB,GAAIJ,IAAD,IAAmB;AAC5C,QAAIY,OAAO,CAACZ,IAAD,CAAP,KAAkB,CAAtB,EAAyB;AACvB,aAAO,SAAP;AACD,KAFD,MAEO;AACL,aAAO,SAAP;AACD;AACF,GAND;;AAQA,QAAMY,OAAiB,GAAIZ,IAAD,IAAmB;AAC3C,WAAOjB,OAAO,CAAC8B,OAAR,CAAgBb,IAAhB,CAAP;AACD,GAFD;;AAIA,QAAMK,UAAoB,GAAIpB,KAAD,IAAmB;AAC9C,WAAOA,KAAK,CAAC6B,OAAN,CAAc,CAAd,CAAP;AACD,GAFD;;AAIA,QAAMC,iBAA2B,GAAG,MAAM;AACxC,WACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE,KAHV;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,cAAc,EAAE,QALX;AAMLxB,QAAAA,SAAS,EAAG,GAAEd,IAAI,KAAK,OAAT,GAAmB,KAAnB,GAA2B,MAAO;AAN3C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,IAAtB;AAA4B,MAAA,WAAW,EAAEI,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD,GAfD;;AAiBA,SACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEG,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,MAAM,EAAG,GAAEf,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B,OAAQ;AAD3C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,KAAK,EAAE;AACLuC,MAAAA,MAAM,EAAE;AADH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ1C,KAAR,CALF,EAMGG,IAAI,KAAK,OAAT,IAAoBW,gBAAgB,EANvC,EAOGK,aAAa,EAPhB,EAQGiB,iBAAiB,EARpB,CALF,CADF,CADF;AAoBD,CA5LD;;AA8LAvB,WAAW,CAACd,YAAZ,GAA2BA,YAA3B;AAEA,MAAM4C,eAAe,GAAG7C,MAAM,CAAC8C,GAAI;;;;CAAnC;AAMA,MAAMC,KAAK,GAAG/C,MAAM,CAACN,UAAD,CAAa;;;;;;;;;;CAAjC;AAYA,MAAMsD,UAAU,GAAGhD,MAAM,CAACN,UAAD,CAAa;;;;;;;;CAAtC;AAUA,MAAMuD,gBAAgB,GAAGjD,MAAM,CAAC8C,GAAI;;;;;CAApC;AAOA,MAAMI,QAAQ,GAAGlD,MAAM,CAACN,UAAD,CAAa;;;;;;;;CAApC;AAUA,MAAMyD,aAAa,GAAGnD,MAAM,CAAC8C,GAAI;;;CAAjC;AAKA,MAAMM,IAAI,GAAGpD,MAAM,CAAC8C,GAAI;;;;CAAxB;AAMA,SAAS/B,WAAT","sourcesContent":["import React from \"react\";\nimport { Typography, Divider } from \"@material-ui/core\";\nimport { PlayArrow, BorderAll } from \"@material-ui/icons\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { SeeChartButton } from \"../buttons\";\nimport styled from \"styled-components\";\n\n/**\n * ==============================================================================\n * <MetricsCard />\n * ------------------------------------------------------------------------------\n * @param {string}   title           Card Title\n * @param {string}   status          Type of change (increase,decrease,none)\n * @param {number}   percentage      Amount value of change\n * @param {string}   mode            Type of mode (bills,sales)\n * @param {array}    content         Content Data values\n * @return {ReactElement}\n * ==============================================================================\n */\n\ninterface Content {\n  tag: string;\n  value: number;\n}\n\ninterface Props {\n  title: string;\n  status: string;\n  percentage: number;\n  mode: string;\n  content: Content[];\n  handleClick: (e: React.SyntheticEvent<HTMLButtonElement>) => void;\n}\n\nconst defaultProps = {\n  title: \"Text Title\",\n  status: \"increase\",\n  percentage: 90.2,\n  mode: \"bills\",\n  content: [\n    {\n      tag: \"Last 90 days\",\n      value: 0.2\n    },\n    {\n      tag: \"Minimum\",\n      value: 0.21\n    },\n    {\n      tag: \"Average\",\n      value: 0.34\n    },\n    {\n      tag: \"Maximum\",\n      value: 0.84\n    }\n  ],\n  handleClick: () => console.log(\"Opening Chart...\")\n};\n\nconst theme = createMuiTheme({\n  shape: {\n    borderRadius: 0\n  }\n});\n\nconst MetricsCard: React.FC<Props> = ({\n  title,\n  status,\n  percentage,\n  content,\n  mode,\n  handleClick\n}) => {\n  const renderPercentage: Function = () => {\n    return (\n      <>\n        <PercentContainer>\n          {renderStatusArrow()}\n          {renderPercentValue()}\n        </PercentContainer>\n        <Divider\n          style={{\n            marginTop: \"16px\",\n            height: \"2px\"\n          }}\n        />\n      </>\n    );\n  };\n\n  const renderListing: Function = () => {\n    return (\n      <ListContainer>\n        {content.map((list: Content, i: number) => {\n          return (\n            <List\n              key={i}\n              style={{\n                marginTop: DynamicMargin(list)\n              }}\n            >\n              <ListText\n                style={{\n                  color: TagColor(list)\n                }}\n              >\n                {list.tag}:\n              </ListText>\n\n              <ListText\n                style={{\n                  color: \"#7c8a97\"\n                }}\n              >\n                {TwoDecimal(list.value)}\n              </ListText>\n            </List>\n          );\n        })}\n      </ListContainer>\n    );\n  };\n\n  const renderPercentValue: Function = () => {\n    return (\n      <>\n        <Percentage\n          style={{\n            color: StatusControlStyle(\"color-percent\")\n          }}\n        >\n          {TwoDecimal(percentage)}%\n        </Percentage>\n      </>\n    );\n  };\n\n  const renderStatusArrow: Function = () => {\n    return status === \"increase\" || status === \"decrease\" ? (\n      <>\n        <PlayArrow\n          style={{\n            fontSize: \"34px\",\n            marginTop: StatusControlStyle(\"margin-top\"),\n            marginRight: \"19px\",\n            color: StatusControlStyle(\"color\"),\n            transform: StatusControlStyle(\"transform\")\n          }}\n        />\n      </>\n    ) : null;\n  };\n\n  const StatusControlStyle: Function = (type: String) => {\n    switch (type) {\n      case \"margin-top\":\n        {\n          return status === \"decrease\"\n            ? \"1px\"\n            : status === \"increase\"\n            ? \"6px\"\n            : \"0px\";\n        }\n        break;\n      case \"color\":\n        {\n          return status === \"decrease\" ? \"#ff504d\" : \"#a6c556\";\n        }\n        break;\n      case \"color-percent\":\n        {\n          return status === \"decrease\"\n            ? \"#ff504d\"\n            : status === \"increase\"\n            ? \"#a6c556\"\n            : \"#50555a\";\n        }\n        break;\n      case \"transform\":\n        {\n          return status === \"decrease\" ? \"rotate(-270deg)\" : \"rotate(-90deg)\";\n        }\n        break;\n      default:\n        return \"\";\n    }\n  };\n\n  const DynamicMargin: Function = (list: Content) => {\n    let index = IndexOf(list);\n\n    if (index === 0) {\n      return \"18px\";\n    } else if (index === 1) {\n      return \"6px\";\n    } else {\n      return \"4px\";\n    }\n  };\n\n  const TagColor: Function = (list: Content) => {\n    if (IndexOf(list) === 0) {\n      return \"#bbbbbb\";\n    } else {\n      return \"#50555a\";\n    }\n  };\n\n  const IndexOf: Function = (list: Content) => {\n    return content.indexOf(list);\n  };\n\n  const TwoDecimal: Function = (value: number) => {\n    return value.toFixed(2);\n  };\n\n  const renderChartButton: Function = () => {\n    return (\n      <div\n        style={{\n          width: \"inherit\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: `${mode === \"bills\" ? \"9px\" : \"17px\"}`\n        }}\n      >\n        <SeeChartButton mode={mode} handleClick={handleClick} />\n      </div>\n    );\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <MetricContainer\n        style={{\n          height: `${mode === \"bills\" ? \"306px\" : \"238px\"}`\n        }}\n      >\n        <div\n          style={{\n            margin: \"19px 21px\"\n          }}\n        >\n          <Title>{title}</Title>\n          {mode === \"bills\" && renderPercentage()}\n          {renderListing()}\n          {renderChartButton()}\n        </div>\n      </MetricContainer>\n    </MuiThemeProvider>\n  );\n};\n\nMetricsCard.defaultProps = defaultProps as Partial<Props>;\n\nconst MetricContainer = styled.div`\n  min-height: 240px;\n  border-radius: 3px;\n  border: solid 1px #eeeeee;\n`;\n\nconst Title = styled(Typography)`\n  font-size: 16px !important;\n  font-weight: 500 !important;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  color: #50555a;\n  margin-bottom: -7px;\n`;\n\nconst Percentage = styled(Typography)`\n  font-size: 34px !important;\n  font-weight: 500 !important;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n`;\n\nconst PercentContainer = styled.div`\n  margin-top: 17px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ListText = styled(Typography)`\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport { MetricsCard };\n"]},"metadata":{},"sourceType":"module"}