{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/did/did-landing/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport { HeaderLink, NavTabs, TableLoader, SearchBar, FilterToolBar, Pagination } from \"common-components\";\nimport HeaderContainer from \"../components/HeaderContainer/HeaderContainer\";\nimport DIDTable from \"../components/DIDTable/DIDTable\";\n\nconst ManageDID = ({\n  history\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        didData = _useState4[0],\n        setDidData = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        paginateList = _useState6[0],\n        setPaginateList = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        campaigns = _useState8[0],\n        setCamapaigns = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        companies = _useState10[0],\n        setCompanies = _useState10[1];\n\n  useEffect(() => {\n    fetchDIDs();\n  }, []);\n\n  const fetchDIDs = () => {\n    setLoading(true);\n    fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/dids`).then(response => response.json()).then(response => {\n      let newResponse = response.map(did => {\n        let uuid = did.uuid;\n        delete did.uuid;\n        did.uuid = uuid;\n        did.number = `+${did.number.toString()}`;\n        return did;\n      });\n      setDidData(newResponse);\n      setPaginateList(newResponse);\n      setLoading(false);\n    });\n    fetchCompanies();\n    fetchCampaigns();\n  };\n\n  const fetchCompanies = () => {\n    fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/companies`).then(response => response.json()).then(response => {\n      console.log(\"companies\", response);\n      setCompanies(response);\n    });\n  };\n\n  const fetchCampaigns = () => {\n    setLoading(true);\n    fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/campaigns`).then(response => response.json()).then(response => {\n      console.log(\"campaigns\", response);\n      setCamapaigns(response);\n    });\n  };\n\n  const paginate = (from, to) => {\n    setDidData(paginateList.slice(from, to));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(HeaderContainer, {\n    style: {\n      paddingBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(HeaderLink, {\n    menu: [{\n      title: \"Users\",\n      path: \"/manage/users\"\n    }, {\n      title: \"Campaigns\",\n      path: \"/manage/campaigns\"\n    }, {\n      title: \"Companies\",\n      path: \"/manage/companies\"\n    }, {\n      title: \"Locations\",\n      path: \"/manage/locations\"\n    }, {\n      title: \"Realms\",\n      path: \"/manage/realms\"\n    }, {\n      title: \"DID Pools\",\n      path: \"/manage/did-pool\"\n    }],\n    title: \"Dids\",\n    pathSensitive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(NavTabs, {\n    tabnames: [{\n      name: \"DID POOLS\",\n      active: false,\n      onClickFn: () => history.push(\"/manage/did-pool\")\n    }, {\n      name: \"SEARCH DIDS\",\n      active: true,\n      onClickFn: () => console.log(\"\")\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    title: \"dids\",\n    userData: didData,\n    headers: [\"number\", \"timezone\"],\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(FilterToolBar, {\n    FilterApplyButton: () => console.log(\"\"),\n    company: true,\n    campaign: true,\n    status: true,\n    sortBy: false,\n    realm: false,\n    activeStatus: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), loading ? React.createElement(TableLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      minHeight: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(DIDTable, {\n    didData: didData,\n    headers: [\"Number\", \"Time Zone\", \"Owned\", \"Pool\", \"CName\", \"CName Valid\", \"Status\", \"\"],\n    fetchDIDs: fetchDIDs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(Pagination, {\n    totalItems: paginateList.length,\n    itemsPerPage: 10,\n    paginateFn: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))));\n};\n\nexport default ManageDID;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/did/did-landing/index.tsx"],"names":["React","useState","useEffect","Paper","Divider","HeaderLink","NavTabs","TableLoader","SearchBar","FilterToolBar","Pagination","HeaderContainer","DIDTable","ManageDID","history","loading","setLoading","didData","setDidData","paginateList","setPaginateList","campaigns","setCamapaigns","companies","setCompanies","fetchDIDs","fetch","then","response","json","newResponse","map","did","uuid","number","toString","fetchCompanies","fetchCampaigns","console","log","paginate","from","to","slice","paddingBottom","title","path","name","active","onClickFn","push","minHeight","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport {\n  HeaderLink,\n  NavTabs,\n  TableLoader,\n  SearchBar,\n  FilterToolBar,\n  Pagination\n} from \"common-components\";\nimport HeaderContainer from \"../components/HeaderContainer/HeaderContainer\";\nimport DIDTable from \"../components/DIDTable/DIDTable\";\n\nconst ManageDID = ({ history }: any) => {\n  const [loading, setLoading] = useState(true);\n  const [didData, setDidData] = useState([]);\n  const [paginateList, setPaginateList] = useState([]);\n  const [campaigns, setCamapaigns] = useState([]);\n  const [companies, setCompanies] = useState([]);\n\n  useEffect(() => {\n    fetchDIDs();\n  }, []);\n\n  const fetchDIDs = () => {\n    setLoading(true);\n    fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/dids`)\n      .then((response: any) => response.json())\n      .then((response: any) => {\n        let newResponse = response.map((did: any) => {\n          let uuid = did.uuid;\n          delete did.uuid;\n          did.uuid = uuid;\n          did.number = `+${did.number.toString()}`;\n          return did;\n        });\n        setDidData(newResponse);\n        setPaginateList(newResponse);\n        setLoading(false);\n      });\n    fetchCompanies();\n    fetchCampaigns();\n  };\n  const fetchCompanies = () => {\n    fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/companies`)\n      .then((response: any) => response.json())\n      .then((response: any) => {\n        console.log(\"companies\", response);\n        setCompanies(response);\n      });\n  };\n  const fetchCampaigns = () => {\n    setLoading(true);\n    fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/campaigns`)\n      .then((response: any) => response.json())\n      .then((response: any) => {\n        console.log(\"campaigns\", response);\n        setCamapaigns(response);\n      });\n  };\n\n  const paginate = (from: number, to: number) => {\n    setDidData(paginateList.slice(from, to));\n  };\n\n  return (\n    <>\n      <HeaderContainer style={{ paddingBottom: 30 }}>\n        <HeaderLink\n          menu={[\n            {\n              title: \"Users\",\n              path: \"/manage/users\"\n            },\n            {\n              title: \"Campaigns\",\n              path: \"/manage/campaigns\"\n            },\n            {\n              title: \"Companies\",\n              path: \"/manage/companies\"\n            },\n            {\n              title: \"Locations\",\n              path: \"/manage/locations\"\n            },\n            {\n              title: \"Realms\",\n              path: \"/manage/realms\"\n            },\n            {\n              title: \"DID Pools\",\n              path: \"/manage/did-pool\"\n            }\n          ]}\n          title=\"Dids\"\n          pathSensitive={true}\n        />\n        <NavTabs\n          tabnames={[\n            {\n              name: \"DID POOLS\",\n              active: false,\n              onClickFn: () => history.push(\"/manage/did-pool\")\n            },\n            {\n              name: \"SEARCH DIDS\",\n              active: true,\n              onClickFn: () => console.log(\"\")\n            }\n          ]}\n        />\n      </HeaderContainer>\n      <Paper>\n        <SearchBar\n          title=\"dids\"\n          userData={didData}\n          headers={[\"number\", \"timezone\"]}\n          loading={loading}\n        />\n        <Divider />\n        <FilterToolBar\n          FilterApplyButton={() => console.log(\"\")}\n          company={true}\n          campaign={true}\n          status={true}\n          sortBy={false}\n          realm={false}\n          activeStatus={false}\n        />\n        {loading ? (\n          <TableLoader />\n        ) : (\n          <>\n            <div style={{ minHeight: 500 }}>\n              <DIDTable\n                didData={didData}\n                headers={[\n                  \"Number\",\n                  \"Time Zone\",\n                  \"Owned\",\n                  \"Pool\",\n                  \"CName\",\n                  \"CName Valid\",\n                  \"Status\",\n                  \"\"\n                ]}\n                fetchDIDs={fetchDIDs}\n              />\n              <Divider />\n            </div>\n            <Pagination\n              totalItems={paginateList.length}\n              itemsPerPage={10}\n              paginateFn={paginate}\n            />\n          </>\n        )}\n      </Paper>\n    </>\n  );\n};\n\nexport default ManageDID;\n"]},"metadata":{},"sourceType":"module"}