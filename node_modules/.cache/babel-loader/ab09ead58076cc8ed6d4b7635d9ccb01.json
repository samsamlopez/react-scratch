{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/modal/Modal.tsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst Modal = ({\n  open,\n  width,\n  height,\n  onClose,\n  title,\n  contentStyle,\n  children\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    maxWidth: \"xl\",\n    open: open,\n    PaperProps: {\n      square: true,\n      style: {\n        width: width ? width : 420,\n        height: height ? height : \"auto\"\n      }\n    },\n    onClose: () => {\n      onClose();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    style: {\n      backgroundColor: \"#5f7d98\",\n      color: \"#FFF\",\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontSize: 20,\n      fontWeight: 550\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, title)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => {\n      onClose();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))))), React.createElement(DialogContent, {\n    dividers: true,\n    style: _objectSpread({}, contentStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, children)));\n};\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  contentStyle: PropTypes.object,\n  children: PropTypes.element\n};\nModal.defaultProps = {\n  title: 'Test Title!',\n  open: false\n};\nexport default Modal;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/modal/Modal.tsx"],"names":["React","PropTypes","Dialog","DialogTitle","DialogContent","IconButton","CloseIcon","Modal","open","width","height","onClose","title","contentStyle","children","square","style","backgroundColor","color","padding","display","justifyContent","alignItems","fontSize","fontWeight","propTypes","bool","number","func","isRequired","string","object","element","defaultProps"],"mappings":"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","sourcesContent":["import React, { ReactPortal } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n\nconst Modal: React.FC<{\n    open: boolean\n    width: number\n    height: number\n    onClose: () => void\n    title: string\n    contentStyle: object\n    children: React.ReactNode\n}> = ({ open, width, height, onClose, title, contentStyle, children }) => {\n    return (\n        <div>\n            <Dialog\n                maxWidth=\"xl\"\n                open={open}\n                PaperProps={{\n                    square: true,\n                    style: {\n                        width: width ? width : 420,\n                        height: height ? height : \"auto\"\n                    }\n                }}\n                onClose={() => {\n                    onClose();\n                }}\n            >\n                <DialogTitle style={{\n                    backgroundColor: \"#5f7d98\",\n                    color: \"#FFF\",\n                    padding: 10\n                }}>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\"\n                        }}\n                    >\n                        <div style={{ width: 30 }}>&nbsp;</div>\n                        <div>\n                            <span style={{\n                                fontSize: 20,\n                                fontWeight: 550\n                            }} >\n                                {title}\n                            </span>\n                        </div>\n                        <div>\n                            <IconButton\n                                onClick={() => {\n                                    onClose();\n                                }}\n                            >\n                                <CloseIcon style={{ color: \"#FFF\" }} />\n                            </IconButton>\n                        </div>\n                    </div>\n                </DialogTitle>\n                <DialogContent dividers style={{ ...contentStyle }}>\n                    {children}\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\nModal.propTypes = {\n    open: PropTypes.bool,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    contentStyle: PropTypes.object,\n    children: PropTypes.element\n}\nModal.defaultProps = {\n    title: 'Test Title!',\n    open: false\n}\n\nexport default (Modal);\n"]},"metadata":{},"sourceType":"module"}