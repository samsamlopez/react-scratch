{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/auth/component/Signin.form.tsx\";\nimport React, { useState } from \"react\";\nimport { Collapse, FormControl, FormHelperText, InputLabel, Button } from \"@material-ui/core/\";\nimport { CustomInput, useStyles } from \"./styled/styledComponents\";\n\nfunction SignInForm(props) {\n  const _useState = useState({\n    formText: {\n      username: \"\",\n      password: \"\"\n    },\n    formError: {\n      username: false,\n      password: false\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    onSubmit: e => {\n      e.preventDefault();\n      alert(\"Login Function\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"80px\",\n      width: \"335px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    style: {\n      width: \"100%\",\n      marginTop: \"10px\"\n    },\n    error: state.formError.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: state.formError.username ? {\n      root: classes.inputLabelError\n    } : {\n      root: classes.inputLabel\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Username\"), React.createElement(CustomInput, {\n    required: true,\n    value: state.formText.username,\n    classes: {\n      root: classes.inputField,\n      underline: classes.inputUnderline\n    },\n    id: \"username\",\n    onChange: e => {\n      if (!e.target.value.length) {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: e.target.value,\n            password: state.formText.password\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: true,\n            password: state.formError.password\n          })\n        }));\n      } else {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: e.target.value,\n            password: state.formText.password\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: false,\n            password: state.formError.password\n          })\n        }));\n      }\n    },\n    onBlur: e => {\n      if (!e.target.value.length) {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: e.target.value,\n            password: state.formText.password\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: true,\n            password: state.formError.password\n          })\n        }));\n      } else {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: e.target.value,\n            password: state.formText.password\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: false,\n            password: state.formError.password\n          })\n        }));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    in: state.formError.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Username is required\")))), React.createElement(\"div\", {\n    style: {\n      height: \"80px\",\n      width: \"335px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    style: {\n      width: \"100%\",\n      marginTop: \"5px\"\n    },\n    error: state.formError.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: state.formError.password ? {\n      root: classes.inputLabelError\n    } : {\n      root: classes.inputLabel\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Password\"), React.createElement(CustomInput, {\n    type: \"password\",\n    required: true,\n    id: \"password\",\n    value: state.formText.password,\n    classes: {\n      root: classes.inputField,\n      underline: classes.inputUnderline\n    },\n    onChange: e => {\n      if (!e.target.value.length) {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: state.formText.username,\n            password: e.target.value\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: state.formError.username,\n            password: true\n          })\n        }));\n      } else {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: state.formText.username,\n            password: e.target.value\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: state.formError.username,\n            password: false\n          })\n        }));\n      }\n    },\n    onBlur: e => {\n      if (!e.target.value.length) {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: state.formText.username,\n            password: e.target.value\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: state.formError.username,\n            password: true\n          })\n        }));\n      } else {\n        setState(_objectSpread({}, state, {\n          formText: _objectSpread({}, state.formText, {\n            username: state.formText.username,\n            password: e.target.value\n          }),\n          formError: _objectSpread({}, state.formError, {\n            username: state.formError.username,\n            password: false\n          })\n        }));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    in: state.formError.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Password is required\")))), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"#607c98\",\n      color: \"#fff\",\n      width: \"96%\",\n      marginTop: \"20px\",\n      borderRadius: \"2px\",\n      position: \"relative\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    type: \"submit\",\n    \"data-cy\": \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Sign In\")));\n}\n\nexport default SignInForm;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/auth/component/Signin.form.tsx"],"names":["React","useState","Collapse","FormControl","FormHelperText","InputLabel","Button","CustomInput","useStyles","SignInForm","props","formText","username","password","formError","state","setState","classes","display","justifyContent","flexDirection","e","preventDefault","alert","height","width","marginTop","root","inputLabelError","inputLabel","inputField","underline","inputUnderline","target","value","length","backgroundColor","color","borderRadius","position","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  Button\n} from \"@material-ui/core/\";\nimport { CustomInput, useStyles } from \"./styled/styledComponents\";\n\ninterface StateType {\n  formText: {\n    username: string;\n    password: string;\n  };\n  formError: {\n    username: boolean;\n    password: boolean;\n  };\n}\n\ninterface PropType {\n  handleLoadingLogin: (bool: boolean) => void;\n  handleSnackbar: (bool: boolean, mess: string) => void;\n  logger: () => void;\n}\n\nfunction SignInForm(props: PropType) {\n  const [state, setState] = useState<StateType>({\n    formText: {\n      username: \"\",\n      password: \"\"\n    },\n    formError: {\n      username: false,\n      password: false\n    }\n  });\n  const classes: any = useStyles();\n  return (\n    <>\n      <form\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\"\n        }}\n        onSubmit={e => {\n          e.preventDefault();\n          alert(\"Login Function\");\n        }}\n      >\n        <div\n          style={{\n            height: \"80px\",\n            width: \"335px\"\n          }}\n        >\n          <FormControl\n            style={{ width: \"100%\", marginTop: \"10px\" }}\n            error={state.formError.username}\n          >\n            <InputLabel\n              classes={\n                state.formError.username\n                  ? {\n                      root: classes.inputLabelError\n                    }\n                  : { root: classes.inputLabel }\n              }\n            >\n              Username\n            </InputLabel>\n            <CustomInput\n              required\n              value={state.formText.username}\n              classes={{\n                root: classes.inputField,\n                underline: classes.inputUnderline\n              }}\n              id=\"username\"\n              onChange={(e: any) => {\n                if (!e.target.value.length) {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: e.target.value,\n                      password: state.formText.password\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: true,\n                      password: state.formError.password\n                    }\n                  });\n                } else {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: e.target.value,\n                      password: state.formText.password\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: false,\n                      password: state.formError.password\n                    }\n                  });\n                }\n              }}\n              onBlur={(e: any) => {\n                if (!e.target.value.length) {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: e.target.value,\n                      password: state.formText.password\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: true,\n                      password: state.formError.password\n                    }\n                  });\n                } else {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: e.target.value,\n                      password: state.formText.password\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: false,\n                      password: state.formError.password\n                    }\n                  });\n                }\n              }}\n            />\n            <Collapse in={state.formError.username}>\n              <FormHelperText>Username is required</FormHelperText>\n            </Collapse>\n          </FormControl>\n        </div>\n        <div\n          style={{\n            height: \"80px\",\n            width: \"335px\"\n          }}\n        >\n          <FormControl\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n            error={state.formError.password}\n          >\n            <InputLabel\n              classes={\n                state.formError.password\n                  ? {\n                      root: classes.inputLabelError\n                    }\n                  : { root: classes.inputLabel }\n              }\n            >\n              Password\n            </InputLabel>\n            <CustomInput\n              type=\"password\"\n              required\n              id=\"password\"\n              value={state.formText.password}\n              classes={{\n                root: classes.inputField,\n                underline: classes.inputUnderline\n              }}\n              onChange={(e: any) => {\n                if (!e.target.value.length) {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: state.formText.username,\n                      password: e.target.value\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: state.formError.username,\n                      password: true\n                    }\n                  });\n                } else {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: state.formText.username,\n                      password: e.target.value\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: state.formError.username,\n                      password: false\n                    }\n                  });\n                }\n              }}\n              onBlur={(e: any) => {\n                if (!e.target.value.length) {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: state.formText.username,\n                      password: e.target.value\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: state.formError.username,\n                      password: true\n                    }\n                  });\n                } else {\n                  setState({\n                    ...state,\n                    formText: {\n                      ...state.formText,\n                      username: state.formText.username,\n                      password: e.target.value\n                    },\n                    formError: {\n                      ...state.formError,\n                      username: state.formError.username,\n                      password: false\n                    }\n                  });\n                }\n              }}\n            />\n            <Collapse in={state.formError.password}>\n              <FormHelperText>Password is required</FormHelperText>\n            </Collapse>\n          </FormControl>\n        </div>\n        <Button\n          variant=\"contained\"\n          style={{\n            backgroundColor: \"#607c98\",\n            color: \"#fff\",\n            width: \"96%\",\n            marginTop: \"20px\",\n            borderRadius: \"2px\",\n            position: \"relative\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n          type=\"submit\"\n          data-cy=\"submit\"\n        >\n          Sign In\n        </Button>\n      </form>\n    </>\n  );\n}\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}