{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/users/users-new/steps/Step1.tsx\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { FormControl, InputLabel, Input, FormHelperText } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, useStyles, TitleTag } from \"../styles\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\nfunction Step1({\n  disabled,\n  setDisabled,\n  inputValues,\n  handleInputChange,\n  handleInputBlur,\n  inputErrors,\n  handleEmail,\n  handleDatePick\n}) {\n  const classes = useStyles(1);\n  let classProp = {\n    classes: {\n      underline: classes.underline\n    }\n  };\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    style: {\n      overflow: \"hidden\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TitleTag, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Personal Info\"), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    error: inputErrors.first_name_error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: {\n      focused: classes.focused,\n      error: classes.err\n    },\n    htmlFor: \"first_name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"First name\"), React.createElement(Input, {\n    \"data-cy\": \"first_name\",\n    classes: {\n      underline: classes.underline\n    },\n    autoComplete: \"off\",\n    required: true,\n    value: inputValues.first_name,\n    onBlur: handleInputBlur(\"first_name\"),\n    onChange: handleInputChange(\"first_name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    \"data-cy\": \"first_name_error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, inputErrors.first_name_error && \"Firstname is required\"))), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    error: inputErrors.last_name_error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: {\n      focused: classes.focused,\n      error: classes.err\n    },\n    htmlFor: \"first_name\",\n    required: true,\n    error: inputErrors.last_name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Last name\"), React.createElement(Input, {\n    \"data-cy\": \"last_name\",\n    classes: {\n      underline: classes.underline\n    },\n    autoComplete: \"off\",\n    required: true,\n    value: inputValues.last_name,\n    onChange: handleInputChange(\"last_name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    \"data-cy\": \"last_name_error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, inputErrors.last_name_error && \"Lastname is required\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    error: inputErrors.username_error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: {\n      focused: classes.focused,\n      error: classes.err\n    },\n    htmlFor: \"fname\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    \"data-cy\": \"username\",\n    classes: {\n      underline: classes.underline\n    },\n    autoComplete: \"off\",\n    required: true,\n    value: inputValues.username,\n    onChange: handleInputChange(\"username\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    \"data-cy\": \"username-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, inputErrors.username_error && \"Username is required\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    error: inputErrors.email_error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: {\n      focused: classes.focused,\n      error: classes.err\n    },\n    htmlFor: \"fname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    \"data-cy\": \"email\",\n    classes: {\n      underline: classes.underline\n    },\n    autoComplete: \"off\",\n    value: inputValues.email,\n    onChange: handleEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    \"data-cy\": \"re-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, inputErrors.email_error && \"Invalid email\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, Object.assign({\n    utils: DateFnsUtils\n  }, classProp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(DatePicker, {\n    fullWidth: true,\n    label: \"Hired Date\",\n    format: \"MM/dd/yyyy\",\n    value: inputValues.date,\n    onChange: handleDatePick,\n    InputProps: {\n      classes: {\n        underline: classes.inputField,\n        root: classes.inputField\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))));\n}\n\nexport { Step1 };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/users/users-new/steps/Step1.tsx"],"names":["React","Grid","FormControl","InputLabel","Input","FormHelperText","DateFnsUtils","DatePicker","useStyles","TitleTag","MuiPickersUtilsProvider","Step1","disabled","setDisabled","inputValues","handleInputChange","handleInputBlur","inputErrors","handleEmail","handleDatePick","classes","classProp","underline","overflow","first_name_error","focused","error","err","first_name","last_name_error","last_name","username_error","username","email_error","email","date","inputField","root"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText\n} from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DatePicker, useStyles, TitleTag } from \"../styles\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\ntype Props = {\n  disabled: any;\n  inputValues: any;\n  handleInputChange: any;\n  handleInputBlur: any;\n  inputErrors: any;\n  handleEmail: any;\n  handleDatePick: any;\n  setDisabled?: any;\n};\n\nfunction Step1({\n  disabled,\n  setDisabled,\n  inputValues,\n  handleInputChange,\n  handleInputBlur,\n  inputErrors,\n  handleEmail,\n  handleDatePick\n}: Props) {\n  const classes = useStyles(1);\n\n  let classProp = {\n    classes: {\n      underline: classes.underline\n    }\n  };\n\n  return (\n    <Grid container spacing={1} style={{ overflow: \"hidden\" }}>\n      <TitleTag>Personal Info</TitleTag>\n      <Grid item xs>\n        <FormControl fullWidth error={inputErrors.first_name_error}>\n          <InputLabel\n            classes={{ focused: classes.focused, error: classes.err }}\n            htmlFor=\"first_name\"\n            required\n          >\n            First name\n          </InputLabel>\n          <Input\n            data-cy=\"first_name\"\n            classes={{ underline: classes.underline }}\n            autoComplete=\"off\"\n            required\n            value={inputValues.first_name}\n            onBlur={handleInputBlur(\"first_name\")}\n            onChange={handleInputChange(\"first_name\")}\n          />\n          <FormHelperText data-cy=\"first_name_error\">\n            {inputErrors.first_name_error && \"Firstname is required\"}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs>\n        <FormControl fullWidth error={inputErrors.last_name_error}>\n          <InputLabel\n            classes={{ focused: classes.focused, error: classes.err }}\n            htmlFor=\"first_name\"\n            required\n            error={inputErrors.last_name}\n          >\n            Last name\n          </InputLabel>\n          <Input\n            data-cy=\"last_name\"\n            classes={{ underline: classes.underline }}\n            autoComplete=\"off\"\n            required\n            value={inputValues.last_name}\n            onChange={handleInputChange(\"last_name\")}\n          />\n          <FormHelperText data-cy=\"last_name_error\">\n            {inputErrors.last_name_error && \"Lastname is required\"}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControl fullWidth error={inputErrors.username_error}>\n          <InputLabel\n            classes={{ focused: classes.focused, error: classes.err }}\n            htmlFor=\"fname\"\n            required\n          >\n            Username\n          </InputLabel>\n          <Input\n            data-cy=\"username\"\n            classes={{ underline: classes.underline }}\n            autoComplete=\"off\"\n            required\n            value={inputValues.username}\n            onChange={handleInputChange(\"username\")}\n          />\n          <FormHelperText data-cy=\"username-error\">\n            {inputErrors.username_error && \"Username is required\"}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControl fullWidth error={inputErrors.email_error}>\n          <InputLabel\n            classes={{ focused: classes.focused, error: classes.err }}\n            htmlFor=\"fname\"\n          >\n            Email\n          </InputLabel>\n          <Input\n            data-cy=\"email\"\n            classes={{ underline: classes.underline }}\n            autoComplete=\"off\"\n            value={inputValues.email}\n            onChange={handleEmail}\n          />\n          <FormHelperText data-cy=\"re-email\">\n            {inputErrors.email_error && \"Invalid email\"}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={12}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils} {...classProp}>\n          <DatePicker\n            fullWidth\n            label=\"Hired Date\"\n            format=\"MM/dd/yyyy\"\n            value={inputValues.date}\n            onChange={handleDatePick}\n            InputProps={{\n              classes: {\n                underline: classes.inputField,\n                root: classes.inputField\n              }\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { Step1 };\n"]},"metadata":{},"sourceType":"module"}