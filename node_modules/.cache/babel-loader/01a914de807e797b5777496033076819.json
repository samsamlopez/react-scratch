{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/manage-did-pool/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Divider } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport SEO from 'utils/seo';\nimport { get } from 'utils/api';\nimport { HeaderLink, HeaderButton, NavTabs, SaveButton, TableNoResult, SearchBar, TableLoader, Pagination, FilterToolBar } from 'common-components';\nimport { menus, new_did_const } from './utils/const-var';\nimport { HeaderContainer, Container } from './utils/style';\nimport DIDPoolTable from './components/DIDPoolTable';\n\nconst DidPool = ({\n  history\n}) => {\n  const _useState = useState({\n    didPools: [],\n    ogPools: [{\n      test: 1\n    }],\n    paginateList: [],\n    open: false,\n    load: false,\n    done: false,\n    loading: true,\n    nameErr: '',\n    voiceErr: '',\n    companyErr: '',\n    campaignErr: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        companies = _useState4[0],\n        setCompanies = _useState4[1];\n\n  const _useState5 = useState({\n    fil: [],\n    og: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        campaigns = _useState6[0],\n        setCampaigns = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        voice = _useState8[0],\n        setVoice = _useState8[1];\n\n  const _useState9 = useState(new_did_const),\n        _useState10 = _slicedToArray(_useState9, 2),\n        data = _useState10[0],\n        setData = _useState10[1];\n\n  useEffect(() => {\n    get('http://5e00169a1fb99500141403ae.mockapi.io/api/v1/pools').then(res => {\n      setState(_objectSpread({}, state, {\n        didPools: res.data,\n        ogPools: res.data,\n        paginateList: res.data,\n        loading: false\n      }));\n    });\n    get('http://5e0015181fb99500141403a4.mockapi.io/mock/v1/companies', {\n      assignable: true\n    }).then(res => setCompanies(res.data));\n    get('http://5e0015181fb99500141403a4.mockapi.io/mock/v1/campaigns', {\n      assignable: true\n    }).then(res => setCampaigns(_objectSpread({}, campaigns, {\n      fil: res.data,\n      og: res.data\n    })));\n    get('http://5e00169a1fb99500141403ae.mockapi.io/api/v1/voice_provider/').then(res => setVoice(res.data));\n  }, []);\n\n  const paginate = (from, to) => {\n    setState(_objectSpread({}, state, {\n      didPools: state.paginateList.slice(from, to)\n    }));\n  };\n\n  const FilterApplyButton = () => {// setState({ ...state, loading: true })\n    // if (params.company === ' ' || params.campaign === ' ') {\n    //   get(`/did/company/all/campaign/all/pool/`).then((result: any) => {\n    //     setState({\n    //       ...state,\n    //       didPools: result.data,\n    //       paginateList: result.data,\n    //       loading: false\n    //     })\n    //   })\n    // } else {\n    //   Promise.all([\n    //     get(`/identity/company/${params.company}`),\n    //     get(`/identity/campaign/${params.campaign}`)\n    //   ]).then(res => {\n    //     get(\n    //       `/did/company/${res[0].data.slug}/campaign/${res[1].data.slug}/pool/`\n    //     ).then((result: any) => {\n    //       setState({\n    //         ...state,\n    //         didPools: result.data,\n    //         paginateList: result.data,\n    //         loading: false\n    //       })\n    //     })\n    //   })\n    // }\n  };\n\n  const handleClose = () => {\n    setState(_objectSpread({}, state, {\n      open: false,\n      done: false\n    }));\n    setData(new_did_const);\n  };\n\n  const handleNewDidPool = () => {\n    alert('new');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(SEO, {\n    title: \"Manage Did Pool\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(HeaderContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(HeaderLink, {\n    menu: menus,\n    title: \"DID Pools\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, state.ogPools.length === 0 ? null : React.createElement(HeaderButton, {\n    openFunction: () => setState(_objectSpread({}, state, {\n      open: true\n    })),\n    buttonText: \"New DID Pool\",\n    style: {\n      marginRight: 24\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(NavTabs, {\n    tabnames: [{\n      name: 'DID POOLS',\n      active: true,\n      onClickFn: () => history.push('/manage/did-pool')\n    }, {\n      name: 'SEARCH DIDS',\n      active: false,\n      onClickFn: () => history.push('/manage/dids')\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), React.createElement(Paper, {\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, !state.loading && state.ogPools.length === 0 ? React.createElement(TableNoResult, {\n    headerText: \"DID Pools\",\n    mainMessage: \"No did pool have been created\",\n    subMessage: \"Would you like to creat one? Just hit the \\u201CNew DID Pool\\u201D button.\",\n    renderButton: React.createElement(SaveButton, {\n      handleClick: () => setState(_objectSpread({}, state, {\n        open: true\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \"New DID Pool\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    title: \"DID Pool\",\n    userData: state.didPools,\n    headers: ['name', 'uuid'],\n    active: true,\n    link: true,\n    loading: state.loading,\n    pathnameData: {\n      firstLink: `/manage/did-pool/edit/`,\n      fetchData: ['uuid'],\n      lastLink: ``\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(FilterToolBar, {\n    FilterApplyButton: FilterApplyButton,\n    company: true,\n    campaign: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), state.loading ? React.createElement(TableLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(DIDPoolTable, {\n    state: state,\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), Boolean(state.paginateList.length) && React.createElement(Pagination, {\n    paginateFn: paginate,\n    totalItems: state.paginateList.length,\n    itemsPerPage: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))))));\n};\n\nexport default DidPool;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/manage-did-pool/index.tsx"],"names":["React","useState","useEffect","Paper","Divider","Add","SEO","get","HeaderLink","HeaderButton","NavTabs","SaveButton","TableNoResult","SearchBar","TableLoader","Pagination","FilterToolBar","menus","new_did_const","HeaderContainer","Container","DIDPoolTable","DidPool","history","didPools","ogPools","test","paginateList","open","load","done","loading","nameErr","voiceErr","companyErr","campaignErr","state","setState","companies","setCompanies","fil","og","campaigns","setCampaigns","voice","setVoice","data","setData","then","res","assignable","paginate","from","to","slice","FilterApplyButton","handleClose","handleNewDidPool","alert","display","length","marginRight","name","active","onClickFn","push","height","width","firstLink","fetchData","lastLink","Boolean"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Paper, Divider } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport SEO from 'utils/seo'\nimport { get } from 'utils/api'\nimport {\n  HeaderLink,\n  HeaderButton,\n  NavTabs,\n  SaveButton,\n  TableNoResult,\n  SearchBar,\n  TableLoader,\n  Pagination,\n  FilterToolBar\n} from 'common-components'\nimport { menus, new_did_const } from './utils/const-var'\nimport { DidPoolProps } from './utils/types'\nimport { HeaderContainer, Container } from './utils/style'\nimport DIDPoolTable from './components/DIDPoolTable'\n\nconst DidPool: React.FC<DidPoolProps> = ({ history }) => {\n  const [state, setState] = useState({\n    didPools: [],\n    ogPools: [{ test: 1 }],\n    paginateList: [],\n    open: false,\n    load: false,\n    done: false,\n    loading: true,\n    nameErr: '',\n    voiceErr: '',\n    companyErr: '',\n    campaignErr: ''\n  })\n  const [companies, setCompanies] = useState([])\n  const [campaigns, setCampaigns] = useState({\n    fil: [],\n    og: []\n  })\n  const [voice, setVoice] = useState([])\n  const [data, setData] = useState(new_did_const)\n\n  useEffect(() => {\n    get('http://5e00169a1fb99500141403ae.mockapi.io/api/v1/pools').then(\n      (res: any) => {\n        setState({\n          ...state,\n          didPools: res.data,\n          ogPools: res.data,\n          paginateList: res.data,\n          loading: false\n        })\n      }\n    )\n    get('http://5e0015181fb99500141403a4.mockapi.io/mock/v1/companies', {\n      assignable: true\n    }).then((res: any) => setCompanies(res.data))\n\n    get('http://5e0015181fb99500141403a4.mockapi.io/mock/v1/campaigns', {\n      assignable: true\n    }).then((res: any) =>\n      setCampaigns({ ...campaigns, fil: res.data, og: res.data })\n    )\n    get(\n      'http://5e00169a1fb99500141403ae.mockapi.io/api/v1/voice_provider/'\n    ).then((res: any) => setVoice(res.data))\n  }, [])\n\n  const paginate = (from: any, to: any) => {\n    setState({ ...state, didPools: state.paginateList.slice(from, to) })\n  }\n\n  const FilterApplyButton = () => {\n    // setState({ ...state, loading: true })\n    // if (params.company === ' ' || params.campaign === ' ') {\n    //   get(`/did/company/all/campaign/all/pool/`).then((result: any) => {\n    //     setState({\n    //       ...state,\n    //       didPools: result.data,\n    //       paginateList: result.data,\n    //       loading: false\n    //     })\n    //   })\n    // } else {\n    //   Promise.all([\n    //     get(`/identity/company/${params.company}`),\n    //     get(`/identity/campaign/${params.campaign}`)\n    //   ]).then(res => {\n    //     get(\n    //       `/did/company/${res[0].data.slug}/campaign/${res[1].data.slug}/pool/`\n    //     ).then((result: any) => {\n    //       setState({\n    //         ...state,\n    //         didPools: result.data,\n    //         paginateList: result.data,\n    //         loading: false\n    //       })\n    //     })\n    //   })\n    // }\n  }\n\n  const handleClose = () => {\n    setState({ ...state, open: false, done: false })\n    setData(new_did_const)\n  }\n\n  const handleNewDidPool = () => {\n    alert('new')\n  }\n\n  return (\n    <div>\n      <SEO title=\"Manage Did Pool\" />\n      <HeaderContainer>\n        <HeaderLink menu={menus} title=\"DID Pools\" />\n        <div style={{ display: 'flex' }}>\n          {state.ogPools.length === 0 ? null : (\n            <HeaderButton\n              openFunction={() => setState({ ...state, open: true })}\n              buttonText=\"New DID Pool\"\n              style={{ marginRight: 24 }}\n            />\n          )}\n          <NavTabs\n            tabnames={[\n              {\n                name: 'DID POOLS',\n                active: true,\n                onClickFn: () => history.push('/manage/did-pool')\n              },\n              {\n                name: 'SEARCH DIDS',\n                active: false,\n                onClickFn: () => history.push('/manage/dids')\n              }\n            ]}\n          />\n        </div>\n      </HeaderContainer>\n      <Paper style={{ height: 'auto' }}>\n        {!state.loading && state.ogPools.length === 0 ? (\n          <TableNoResult\n            headerText=\"DID Pools\"\n            mainMessage=\"No did pool have been created\"\n            subMessage=\"Would you like to creat one? Just hit the “New DID Pool” button.\"\n            renderButton={\n              <SaveButton\n                handleClick={() => setState({ ...state, open: true })}\n              >\n                <Add />\n                New DID Pool\n              </SaveButton>\n            }\n          />\n        ) : (\n          <Container>\n            <div style={{ width: '100%' }}>\n              <SearchBar\n                title=\"DID Pool\"\n                userData={state.didPools}\n                headers={['name', 'uuid']}\n                active={true}\n                link={true}\n                loading={state.loading}\n                pathnameData={{\n                  firstLink: `/manage/did-pool/edit/`,\n                  fetchData: ['uuid'],\n                  lastLink: ``\n                }}\n              />\n              <Divider />\n              <FilterToolBar\n                FilterApplyButton={FilterApplyButton}\n                company={true}\n                campaign={true}\n              />\n              {state.loading ? (\n                <TableLoader />\n              ) : (\n                <>\n                  <DIDPoolTable state={state} history={history} />\n                  <Divider />\n                  {Boolean(state.paginateList.length) && (\n                    <Pagination\n                      paginateFn={paginate}\n                      totalItems={state.paginateList.length}\n                      itemsPerPage={6}\n                    />\n                  )}\n                </>\n              )}\n            </div>\n          </Container>\n        )}\n      </Paper>\n      {/* <NewDidPool\n        state={state}\n        setState={setState}\n        companys={companys}\n        campaigns={campaigns}\n        setCampaigns={setCampaigns}\n        voice={voice}\n        data={data}\n        setData={setData}\n        handleNewDidPool={handleNewDidPool}\n        handleClose={handleClose}\n      /> */}\n    </div>\n  )\n}\n\nexport default DidPool\n"]},"metadata":{},"sourceType":"module"}