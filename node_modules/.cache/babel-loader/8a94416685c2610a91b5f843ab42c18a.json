{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/upload/index.tsx\";\nimport React, { useState, useRef } from \"react\";\nimport { Input, Divider, MuiThemeProvider } from \"@material-ui/core\";\nimport { mdiUpload } from \"@mdi/js\";\nimport Icon from \"@mdi/react\";\nimport { CustomText } from \"./custom-text\";\nimport { LabelText, HelperText, theme, useStyles } from \"./styles\";\n\nconst Upload = ({\n  accept,\n  getAudio,\n  helperText,\n  labelText,\n  limit,\n  style\n}) => {\n  const _useState = useState(\"No file chosen\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        filename = _useState2[0],\n        setFilename = _useState2[1];\n\n  const myInput = useRef();\n\n  const upload = e => {\n    try {\n      let extracted = e.target.files[0].name;\n      let name = extracted.length > limit ? extracted.substring(0, limit) : extracted;\n      name = extracted.length > limit ? `${name}...${extracted.split(\".\")[extracted.split(\".\").length - 1]}` : extracted;\n      setFilename(name);\n      getAudio && getAudio(e.target.files[0]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderUploadComponent = () => {\n    return React.createElement(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(LabelText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, labelText), React.createElement(Input, {\n      id: \"files\",\n      inputProps: {\n        accept: accept\n      },\n      onChange: e => upload(e),\n      type: \"file\",\n      className: classes.hidden,\n      inputRef: myInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        margin: \"5px 0 7px 0\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        cursor: \"pointer\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        textOverflow: \"ellipsis\"\n      },\n      onClick: () => myInput.current.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CustomText, {\n      size: \"16px\",\n      color: \"tableDataColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, filename), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-end\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiUpload,\n      title: \"Copy\",\n      size: 0.8,\n      rotate: 360,\n      style: {\n        marginBottom: \"3px\"\n      },\n      color: \"#1194f6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(CustomText, {\n      size: \"16px\",\n      color: \"activeInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Choose file\"))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(HelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, helperText));\n  };\n\n  const classes = useStyles({});\n  return React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, renderUploadComponent());\n};\n\nUpload.defaultProps = {\n  limit: 8,\n  accept: \"audio/*\",\n  labelText: \"Data File\",\n  helperText: \"\",\n  getAudio: () => null\n};\nexport { Upload };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/upload/index.tsx"],"names":["React","useState","useRef","Input","Divider","MuiThemeProvider","mdiUpload","Icon","CustomText","LabelText","HelperText","theme","useStyles","Upload","accept","getAudio","helperText","labelText","limit","style","filename","setFilename","myInput","upload","e","extracted","target","files","name","length","substring","split","console","log","renderUploadComponent","classes","hidden","margin","display","flexDirection","cursor","alignItems","justifyContent","textOverflow","current","click","marginBottom","width","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Input, Divider, MuiThemeProvider } from \"@material-ui/core\";\nimport { mdiUpload } from \"@mdi/js\";\nimport Icon from \"@mdi/react\";\nimport { CustomText } from \"./custom-text\";\n\nimport { LabelText, HelperText, theme, useStyles } from \"./styles\";\ninterface UploadProps {\n  accept: string;\n  getAudio: Function;\n  helperText?: string;\n  labelText?: string;\n  limit: number;\n  style?: object;\n}\n\nconst Upload: React.FC<UploadProps> = ({\n  accept,\n  getAudio,\n  helperText,\n  labelText,\n  limit,\n  style\n}) => {\n  const [filename, setFilename] = useState(\"No file chosen\");\n  const myInput: any = useRef();\n\n  const upload: Function = (e: any) => {\n    try {\n      let extracted = e.target.files[0].name;\n      let name =\n        extracted.length > limit ? extracted.substring(0, limit) : extracted;\n      name =\n        extracted.length > limit\n          ? `${name}...${extracted.split(\".\")[extracted.split(\".\").length - 1]}`\n          : extracted;\n\n      setFilename(name);\n      getAudio && getAudio(e.target.files[0]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderUploadComponent: Function = () => {\n    return (\n      <div style={style}>\n        <LabelText>{labelText}</LabelText>\n        <Input\n          id=\"files\"\n          inputProps={{\n            accept: accept\n          }}\n          onChange={e => upload(e)}\n          type=\"file\"\n          className={classes.hidden}\n          inputRef={myInput}\n        />\n        <label\n          style={{\n            margin: \"5px 0 7px 0\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            cursor: \"pointer\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            textOverflow: \"ellipsis\"\n          }}\n          onClick={() => myInput.current.click()}\n        >\n          <CustomText size=\"16px\" color=\"tableDataColor\">\n            {filename}\n          </CustomText>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"flex-end\"\n            }}\n          >\n            <Icon\n              path={mdiUpload}\n              title=\"Copy\"\n              size={0.8}\n              rotate={360}\n              style={{\n                marginBottom: \"3px\"\n              }}\n              color=\"#1194f6\"\n            />\n            <div style={{ width: \"3px\" }} />\n            <CustomText size=\"16px\" color=\"activeInput\">\n              Choose file\n            </CustomText>\n          </div>\n        </label>\n        <Divider />\n        <HelperText>{helperText}</HelperText>\n      </div>\n    );\n  };\n  const classes: any = useStyles({});\n  return (\n    <MuiThemeProvider theme={theme}>{renderUploadComponent()}</MuiThemeProvider>\n  );\n};\n\nUpload.defaultProps = {\n  limit: 8,\n  accept: \"audio/*\",\n  labelText: \"Data File\",\n  helperText: \"\",\n  getAudio: () => null\n} as Partial<UploadProps>;\n\nexport { Upload };\n"]},"metadata":{},"sourceType":"module"}