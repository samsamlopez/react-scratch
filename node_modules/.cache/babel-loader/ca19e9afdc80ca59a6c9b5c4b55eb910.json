{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/campaigns/CampaignTable.jsx\";\nimport React, { useState } from \"react\";\nimport { TableNoResult, SaveButton, TableLoader, AsyncTable, UnderlineCell, ActiveCell, EditButton } from \"common-components\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { LightTooltip } from \"../globalConstsVar\";\nimport { mdiContentCopy } from \"@mdi/js\";\nimport { Add, FileCopyOutlined as Icon } from \"@material-ui/icons\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nexport default function CampaignTable({\n  data,\n  loading,\n  history\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, !data.length > 0 && !loading ? renderNoData() : loading ? React.createElement(TableLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : DataTable(data, history));\n}\n\nfunction renderNoData() {\n  return React.createElement(TableNoResult, {\n    headerText: \"Campagaigns\",\n    mainMessage: \"No campaigns have been created\",\n    subMessage: \"Would you like to create one? Just hit the \\u201CNew Campaign button.\",\n    renderButton: React.createElement(SaveButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" \", React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \" New Campaign\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n}\n\nfunction DataTable(data, history) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        copy = _useState2[0],\n        setCopy = _useState2[1];\n\n  return React.createElement(AsyncTable, {\n    headers: [\"Name\", \"Slug\", \"UUID\", \"Status\", \"\"],\n    tableData: data,\n    render: (data, {\n      row,\n      cell,\n      icon,\n      uuid\n    }) => data.map(campaign => React.createElement(TableRow, {\n      key: campaign.uuid,\n      className: row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(UnderlineCell, {\n      className: cell,\n      onClick: () => history.push(`/manage/campaign/edit/${campaign.uuid}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, campaign.name), React.createElement(TableCell, {\n      className: cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, campaign.slug), React.createElement(TableCell, {\n      className: uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, campaign.uuid), \"\\xA0\", React.createElement(CopyToClipboard, {\n      text: campaign.uuid,\n      onCopy: () => setCopy(true),\n      onPointerLeave: () => setCopy(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, copy ? React.createElement(LightTooltip, {\n      title: \"UUID Copied!\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiContentCopy,\n      className: icon,\n      size: 1,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })) : React.createElement(LightTooltip, {\n      title: \"Copy UUID\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiContentCopy,\n      className: icon,\n      size: 1,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })))), React.createElement(ActiveCell, {\n      className: cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, campaign.active), React.createElement(TableCell, {\n      className: cell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(EditButton, {\n      text: \"Edit\",\n      onClickFunc: () => history.push(`/manage/campaign/edit/${campaign.uuid}`),\n      style: {\n        color: \"#444851\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/campaigns/CampaignTable.jsx"],"names":["React","useState","TableNoResult","SaveButton","TableLoader","AsyncTable","UnderlineCell","ActiveCell","EditButton","CopyToClipboard","LightTooltip","mdiContentCopy","Add","FileCopyOutlined","Icon","TableCell","TableRow","CampaignTable","data","loading","history","length","renderNoData","DataTable","copy","setCopy","row","cell","icon","uuid","map","campaign","push","name","slug","active","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TableNoResult,\n  SaveButton,\n  TableLoader,\n  AsyncTable,\n  UnderlineCell,\n  ActiveCell,\n  EditButton\n} from \"common-components\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { LightTooltip } from \"../globalConstsVar\";\nimport { mdiContentCopy } from \"@mdi/js\";\n\nimport { Add, FileCopyOutlined as Icon } from \"@material-ui/icons\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function CampaignTable({ data, loading, history }) {\n  return (\n    <div>\n      {!data.length > 0 && !loading ? (\n        renderNoData()\n      ) : loading ? (\n        <TableLoader />\n      ) : (\n        DataTable(data, history)\n      )}\n    </div>\n  );\n}\n\nfunction renderNoData() {\n  return (\n    <TableNoResult\n      headerText=\"Campagaigns\"\n      mainMessage=\"No campaigns have been created\"\n      subMessage=\"Would you like to create one? Just hit the â€œNew Campaign button.\"\n      renderButton={\n        <SaveButton>\n          {\" \"}\n          <Add /> New Campaign\n        </SaveButton>\n      }\n    />\n  );\n}\n\nfunction DataTable(data, history) {\n  const [copy, setCopy] = useState(false);\n  return (\n    <AsyncTable\n      headers={[\"Name\", \"Slug\", \"UUID\", \"Status\", \"\"]}\n      tableData={data}\n      render={(data, { row, cell, icon, uuid }) =>\n        data.map(campaign => (\n          <TableRow key={campaign.uuid} className={row}>\n            <UnderlineCell\n              className={cell}\n              onClick={() =>\n                history.push(`/manage/campaign/edit/${campaign.uuid}`)\n              }\n            >\n              {campaign.name}\n            </UnderlineCell>\n            <TableCell className={cell}>{campaign.slug}</TableCell>\n            <TableCell className={uuid}>\n              <span>{campaign.uuid}</span>\n              &nbsp;\n              <CopyToClipboard\n                text={campaign.uuid}\n                onCopy={() => setCopy(true)}\n                onPointerLeave={() => setCopy(false)}\n              >\n                {copy ? (\n                  <LightTooltip title=\"UUID Copied!\" placement=\"top\">\n                    <Icon\n                      path={mdiContentCopy}\n                      className={icon}\n                      size={1}\n                      rotate={360}\n                    />\n                  </LightTooltip>\n                ) : (\n                  <LightTooltip title=\"Copy UUID\" placement=\"top\">\n                    <Icon\n                      path={mdiContentCopy}\n                      className={icon}\n                      size={1}\n                      rotate={360}\n                    />\n                  </LightTooltip>\n                )}\n              </CopyToClipboard>\n            </TableCell>\n            <ActiveCell className={cell}>{campaign.active}</ActiveCell>\n            <TableCell className={cell} align=\"right\">\n              <EditButton\n                text=\"Edit\"\n                onClickFunc={() =>\n                  history.push(`/manage/campaign/edit/${campaign.uuid}`)\n                }\n                style={{\n                  color: \"#444851\"\n                }}\n              />\n            </TableCell>\n          </TableRow>\n        ))\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}