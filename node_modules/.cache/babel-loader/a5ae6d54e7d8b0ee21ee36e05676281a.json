{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/filter/index.tsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { Filter } from \"./ConstFilter\";\nimport styled from \"styled-components\"; // import {\n//   getCampaigns,\n//   getCompanies,\n//   getRoles,\n//   getRealms\n// } from '../../../actions/List'\n\nconst ApplyBtn = styled(Button)`\n  text-transform: none !important;\n`;\nconst useStyles = {\n  root: {\n    display: \"flex\"\n  },\n  inputField: {\n    fontSize: \"1rem\",\n    \"&:focussed\": {\n      color: \"red\"\n    },\n    \"&:before\": {\n      borderBottom: \"1px solid rgba(0,0,0,0.1)\"\n    },\n    \"&:after\": {\n      borderBottom: \"2px solid #1394f6\"\n    }\n  }\n};\n\nclass FilterToolBarComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFilter = (e, label) => {\n      if (label === \"Company\") {\n        this.setState({\n          Campaign: \" \"\n        });\n\n        if (this.state.campaignData !== null) {\n          this.setState({\n            campaignData: this.state.campaignDataO !== null || this.state.campaignDataO !== undefined ? this.state.campaignDataO.filter(camp => camp.company === e) : null\n          });\n        }\n\n        if (e === \" \") {\n          this.setState({\n            campaignData: this.state.campaignDataO\n          });\n        }\n      }\n\n      if (label === \"SortByUser\") {\n        label = \"SortBy\";\n      }\n\n      this.setState({\n        [label]: e\n      });\n    };\n\n    this.ApplyFilter = () => {\n      this.props.FilterApplyButton({\n        sortby: this.state.SortBy,\n        active: this.state.ActiveStatus === \" \" ? this.state.Status : this.state.ActiveStatus,\n        realm: this.state.Realm,\n        company: this.state.Company,\n        roles: this.state.Roles,\n        hasCompany: this.state.HasCompany,\n        campaign: this.state.Campaign\n      });\n    };\n\n    this.state = {\n      SortBy: \"-datetime_modified\",\n      ActiveStatus: \" \",\n      Realm: \" \",\n      Company: \" \",\n      HasCompany: \" \",\n      Campaign: \" \",\n      Roles: \" \",\n      FilterLabel: [],\n      companyData: null,\n      realmData: null,\n      campaignData: null,\n      rolesData: null,\n      campaignDataO: null,\n      Status: \" \"\n    };\n  }\n\n  componentDidMount() {\n    const filterArr = [];\n\n    if (this.props.sortBy) {\n      filterArr.push(\"Sort By\");\n    }\n\n    if (this.props.activeStatus) {\n      filterArr.push(\"Active Status\");\n    }\n\n    if (this.props.realm) {\n      filterArr.push(\"Realm\");\n    }\n\n    if (this.props.company) {\n      filterArr.push(\"Company\");\n    }\n\n    if (this.props.hasCompany) {\n      filterArr.push(\"Has Company\");\n    }\n\n    if (this.props.campaign) {\n      filterArr.push(\"Campaign\");\n    }\n\n    if (this.props.roles) {\n      filterArr.push(\"Roles\");\n    }\n\n    if (this.props.sortByUser) {\n      filterArr.push(\"Sort By User\");\n    }\n\n    if (this.props.status) {\n      filterArr.push(\"Status\");\n    }\n\n    this.setState({\n      FilterLabel: filterArr\n    }); // Promise.all([getRoles(), getCampaigns(), getCompanies(), getRealms()]).then(\n    //   res =>\n    //     this.setState({\n    //       rolesData: res[0],\n    //       campaignData: res[1],\n    //       campaignDataO: res[1],\n    //       companyData: res[2],\n    //       realmData: res[3]\n    //     })\n    // )\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        padding: \"0px 8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, Filter !== null && Filter.map((toolbar, i) => {\n      if (this.state.FilterLabel.includes(toolbar.Label)) {\n        return React.createElement(Grid, {\n          item: true // style={\n          //   this.state.FilterLabel.length === 4\n          //     ? { width: \"25%\" }\n          //     : this.state.FilterLabel.length === 3\n          //     ? { width: \"33%\" }\n          //     : this.state.FilterLabel.length === 2\n          //     ? { width: \"35%\" }\n          //     : this.state.FilterLabel.length === 5\n          //     ? { width: \"20%\" }\n          //     : this.state.FilterLabel.length === 6\n          //     ? { width: \"16%\" }\n          //     : { width: \"35%\" }\n          // }\n          ,\n          key: i,\n          xs: this.state.FilterLabel.length <= 3 ? 4 : this.state.FilterLabel.length == 4 ? 3 : this.state.FilterLabel.length == 5 || this.state.FilterLabel.length == 6 ? 2 : 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          margin: \"normal\",\n          disabled: this.state.Company !== \" \" ? toolbar.Label.replace(/\\s/g, \"\") === \"HasCompany\" ? true : false : false,\n          select: true,\n          value: toolbar.Label.replace(/\\s/g, \"\") === \"SortByUser\" ? this.state.SortBy : toolbar.Label.replace(/\\s/g, \"\") === \"SortBy\" ? this.state.SortBy : toolbar.Label.replace(/\\s/g, \"\") === \"ActiveStatus\" ? this.state.ActiveStatus : toolbar.Label.replace(/\\s/g, \"\") === \"Realm\" ? this.state.Realm : toolbar.Label.replace(/\\s/g, \"\") === \"Company\" ? this.state.Company : toolbar.Label.replace(/\\s/g, \"\") === \"HasCompany\" ? this.state.HasCompany : toolbar.Label.replace(/\\s/g, \"\") === \"Campaign\" ? this.state.Campaign : toolbar.Label.replace(/\\s/g, \"\") === \"Roles\" ? this.state.Roles : toolbar.Label.replace(/\\s/g, \"\") === \"Status\" ? this.state.Status : \"\",\n          label: toolbar.Label === \"Sort By User\" ? \"Sort By\" : toolbar.Label,\n          onChange: e => this.handleChangeFilter(e.target.value, toolbar.Label.replace(/\\s/g, \"\")),\n          style: {\n            width: \"100%\"\n          },\n          InputProps: {\n            classes: {\n              underline: classes.inputField,\n              root: classes.inputField\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, toolbar.Label.replace(/\\s/g, \"\") === \"Roles\" || toolbar.Label.replace(/\\s/g, \"\") === \"Company\" || toolbar.Label.replace(/\\s/g, \"\") === \"Campaign\" || toolbar.Label.replace(/\\s/g, \"\") === \"Realm\" ? React.createElement(MenuItem, {\n          key: i,\n          value: \" \",\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, \"All\") : null, toolbar.Label.replace(/\\s/g, \"\") === \"Roles\" && this.state.rolesData !== null && this.state.rolesData !== undefined ? this.state.rolesData.map((option, i) => React.createElement(MenuItem, {\n          key: i,\n          value: option.pk,\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, option.name)) : toolbar.Label.replace(/\\s/g, \"\") === \"Company\" && this.state.companyData !== null && this.state.companyData !== undefined ? this.state.companyData.map((option, i) => React.createElement(MenuItem, {\n          key: i,\n          value: option.uuid,\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, option.name)) : toolbar.Label.replace(/\\s/g, \"\") === \"Campaign\" && this.state.campaignData !== null && this.state.campaignData !== undefined ? this.state.campaignData.map((option, i) => React.createElement(MenuItem, {\n          key: i,\n          value: option.uuid,\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, option.name)) : toolbar.Label.replace(/\\s/g, \"\") === \"Realm\" && this.state.realmData !== null && this.state.realmData !== undefined ? this.state.realmData.map((option, i) => React.createElement(MenuItem, {\n          key: i,\n          value: option.uuid,\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, option.name)) : toolbar.options.map((option, i) => React.createElement(MenuItem, {\n          key: i,\n          value: `${option.value}`,\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, option.display))));\n      } else {\n        return null;\n      }\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      style: {\n        paddingTop: \"25px\",\n        width: \"70%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(ApplyBtn, {\n      variant: \"contained\",\n      style: {\n        width: \"100%\",\n        backgroundColor: \"#7C8A97\",\n        color: \"#eeeeee\"\n      },\n      onClick: () => this.ApplyFilter(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Apply\")))));\n  }\n\n}\n\nconst FilterToolBar = withStyles(useStyles)(FilterToolBarComp);\nFilterToolBar.defaultProps = {\n  sortBy: true,\n  activeStatus: true,\n  realm: true,\n  company: true\n};\nexport { FilterToolBar };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/filter/index.tsx"],"names":["React","Grid","TextField","MenuItem","withStyles","Button","Filter","styled","ApplyBtn","useStyles","root","display","inputField","fontSize","color","borderBottom","FilterToolBarComp","Component","constructor","props","handleChangeFilter","e","label","setState","Campaign","state","campaignData","campaignDataO","undefined","filter","camp","company","ApplyFilter","FilterApplyButton","sortby","SortBy","active","ActiveStatus","Status","realm","Realm","Company","roles","Roles","hasCompany","HasCompany","campaign","FilterLabel","companyData","realmData","rolesData","componentDidMount","filterArr","sortBy","push","activeStatus","sortByUser","status","render","classes","margin","alignItems","flexDirection","width","padding","map","toolbar","i","includes","Label","length","replace","target","value","underline","textAlign","option","pk","name","uuid","options","justifyContent","paddingTop","backgroundColor","FilterToolBar","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { Filter } from \"./ConstFilter\";\nimport styled from \"styled-components\";\n// import {\n//   getCampaigns,\n//   getCompanies,\n//   getRoles,\n//   getRealms\n// } from '../../../actions/List'\n\nconst ApplyBtn = styled(Button)`\n  text-transform: none !important;\n`;\n\nconst useStyles = {\n  root: {\n    display: \"flex\"\n  },\n  inputField: {\n    fontSize: \"1rem\",\n    \"&:focussed\": {\n      color: \"red\"\n    },\n    \"&:before\": {\n      borderBottom: \"1px solid rgba(0,0,0,0.1)\"\n    },\n    \"&:after\": {\n      borderBottom: \"2px solid #1394f6\"\n    }\n  }\n};\n\ninterface Props {\n  FilterApplyButton: ({}) => void;\n  sortBy?: boolean;\n  activeStatus?: boolean;\n  realm?: boolean;\n  company?: boolean;\n  hasCompany?: boolean;\n  campaign?: boolean;\n  roles?: boolean;\n  sortByUser?: boolean;\n  status?: boolean;\n  classes: any;\n}\n\ninterface State {\n  SortBy?: string;\n  ActiveStatus?: string;\n  Realm?: string;\n  Company?: string;\n  HasCompany?: string;\n  Campaign?: string;\n  Roles?: string;\n  FilterLabel?: any;\n  companyData?: any;\n  realmData?: any;\n  campaignData?: any;\n  rolesData?: any;\n  campaignDataO?: any;\n  Status?: string;\n}\n\nclass FilterToolBarComp extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      SortBy: \"-datetime_modified\",\n      ActiveStatus: \" \",\n      Realm: \" \",\n      Company: \" \",\n      HasCompany: \" \",\n      Campaign: \" \",\n      Roles: \" \",\n      FilterLabel: [],\n      companyData: null,\n      realmData: null,\n      campaignData: null,\n      rolesData: null,\n      campaignDataO: null,\n      Status: \" \"\n    };\n  }\n\n  handleChangeFilter = (e: any, label: any) => {\n    if (label === \"Company\") {\n      this.setState({ Campaign: \" \" });\n      if (this.state.campaignData !== null) {\n        this.setState({\n          campaignData:\n            this.state.campaignDataO !== null ||\n            this.state.campaignDataO !== undefined\n              ? this.state.campaignDataO.filter(\n                  (camp: any) => camp.company === e\n                )\n              : null\n        });\n      }\n      if (e === \" \") {\n        this.setState({\n          campaignData: this.state.campaignDataO\n        });\n      }\n    }\n    if (label === \"SortByUser\") {\n      label = \"SortBy\";\n    }\n    this.setState({\n      [label]: e\n    });\n  };\n\n  ApplyFilter = () => {\n    this.props.FilterApplyButton({\n      sortby: this.state.SortBy,\n      active:\n        this.state.ActiveStatus === \" \"\n          ? this.state.Status\n          : this.state.ActiveStatus,\n      realm: this.state.Realm,\n      company: this.state.Company,\n      roles: this.state.Roles,\n      hasCompany: this.state.HasCompany,\n      campaign: this.state.Campaign\n    });\n  };\n\n  componentDidMount() {\n    const filterArr = [];\n    if (this.props.sortBy) {\n      filterArr.push(\"Sort By\");\n    }\n    if (this.props.activeStatus) {\n      filterArr.push(\"Active Status\");\n    }\n    if (this.props.realm) {\n      filterArr.push(\"Realm\");\n    }\n    if (this.props.company) {\n      filterArr.push(\"Company\");\n    }\n    if (this.props.hasCompany) {\n      filterArr.push(\"Has Company\");\n    }\n    if (this.props.campaign) {\n      filterArr.push(\"Campaign\");\n    }\n    if (this.props.roles) {\n      filterArr.push(\"Roles\");\n    }\n    if (this.props.sortByUser) {\n      filterArr.push(\"Sort By User\");\n    }\n    if (this.props.status) {\n      filterArr.push(\"Status\");\n    }\n    this.setState({\n      FilterLabel: filterArr\n    });\n\n    // Promise.all([getRoles(), getCampaigns(), getCompanies(), getRealms()]).then(\n    //   res =>\n    //     this.setState({\n    //       rolesData: res[0],\n    //       campaignData: res[1],\n    //       campaignDataO: res[1],\n    //       companyData: res[2],\n    //       realmData: res[3]\n    //     })\n    // )\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <Grid container style={{ margin: 10 }}>\n          <Grid item xs={10}>\n            <Grid\n              container\n              spacing={4}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"row\",\n                width: \"100%\",\n                padding: \"0px 8px\"\n              }}\n            >\n              {Filter !== null &&\n                Filter.map((toolbar: any, i: number) => {\n                  if (this.state.FilterLabel.includes(toolbar.Label)) {\n                    return (\n                      <Grid\n                        item\n                        // style={\n                        //   this.state.FilterLabel.length === 4\n                        //     ? { width: \"25%\" }\n                        //     : this.state.FilterLabel.length === 3\n                        //     ? { width: \"33%\" }\n                        //     : this.state.FilterLabel.length === 2\n                        //     ? { width: \"35%\" }\n                        //     : this.state.FilterLabel.length === 5\n                        //     ? { width: \"20%\" }\n                        //     : this.state.FilterLabel.length === 6\n                        //     ? { width: \"16%\" }\n                        //     : { width: \"35%\" }\n                        // }\n                        key={i}\n                        xs={\n                          this.state.FilterLabel.length <= 3\n                            ? 4\n                            : this.state.FilterLabel.length == 4\n                            ? 3\n                            : this.state.FilterLabel.length == 5 ||\n                              this.state.FilterLabel.length == 6\n                            ? 2\n                            : 1\n                        }\n                      >\n                        <TextField\n                          margin=\"normal\"\n                          disabled={\n                            this.state.Company !== \" \"\n                              ? toolbar.Label.replace(/\\s/g, \"\") ===\n                                \"HasCompany\"\n                                ? true\n                                : false\n                              : false\n                          }\n                          select\n                          value={\n                            toolbar.Label.replace(/\\s/g, \"\") === \"SortByUser\"\n                              ? this.state.SortBy\n                              : toolbar.Label.replace(/\\s/g, \"\") === \"SortBy\"\n                              ? this.state.SortBy\n                              : toolbar.Label.replace(/\\s/g, \"\") ===\n                                \"ActiveStatus\"\n                              ? this.state.ActiveStatus\n                              : toolbar.Label.replace(/\\s/g, \"\") === \"Realm\"\n                              ? this.state.Realm\n                              : toolbar.Label.replace(/\\s/g, \"\") === \"Company\"\n                              ? this.state.Company\n                              : toolbar.Label.replace(/\\s/g, \"\") ===\n                                \"HasCompany\"\n                              ? this.state.HasCompany\n                              : toolbar.Label.replace(/\\s/g, \"\") === \"Campaign\"\n                              ? this.state.Campaign\n                              : toolbar.Label.replace(/\\s/g, \"\") === \"Roles\"\n                              ? this.state.Roles\n                              : toolbar.Label.replace(/\\s/g, \"\") === \"Status\"\n                              ? this.state.Status\n                              : \"\"\n                          }\n                          label={\n                            toolbar.Label === \"Sort By User\"\n                              ? \"Sort By\"\n                              : toolbar.Label\n                          }\n                          onChange={e =>\n                            this.handleChangeFilter(\n                              e.target.value,\n                              toolbar.Label.replace(/\\s/g, \"\")\n                            )\n                          }\n                          style={{ width: \"100%\" }}\n                          InputProps={{\n                            classes: {\n                              underline: classes.inputField,\n                              root: classes.inputField\n                            }\n                          }}\n                        >\n                          {toolbar.Label.replace(/\\s/g, \"\") === \"Roles\" ||\n                          toolbar.Label.replace(/\\s/g, \"\") === \"Company\" ||\n                          toolbar.Label.replace(/\\s/g, \"\") === \"Campaign\" ||\n                          toolbar.Label.replace(/\\s/g, \"\") === \"Realm\" ? (\n                            <MenuItem\n                              key={i}\n                              value=\" \"\n                              style={{ textAlign: \"left\" }}\n                            >\n                              All\n                            </MenuItem>\n                          ) : null}\n                          {toolbar.Label.replace(/\\s/g, \"\") === \"Roles\" &&\n                          this.state.rolesData !== null &&\n                          this.state.rolesData !== undefined\n                            ? this.state.rolesData.map(\n                                (option: any, i: number) => (\n                                  <MenuItem\n                                    key={i}\n                                    value={option.pk}\n                                    style={{ textAlign: \"left\" }}\n                                  >\n                                    {option.name}\n                                  </MenuItem>\n                                )\n                              )\n                            : toolbar.Label.replace(/\\s/g, \"\") === \"Company\" &&\n                              this.state.companyData !== null &&\n                              this.state.companyData !== undefined\n                            ? this.state.companyData.map(\n                                (option: any, i: number) => (\n                                  <MenuItem\n                                    key={i}\n                                    value={option.uuid}\n                                    style={{ textAlign: \"left\" }}\n                                  >\n                                    {option.name}\n                                  </MenuItem>\n                                )\n                              )\n                            : toolbar.Label.replace(/\\s/g, \"\") === \"Campaign\" &&\n                              this.state.campaignData !== null &&\n                              this.state.campaignData !== undefined\n                            ? this.state.campaignData.map(\n                                (option: any, i: number) => (\n                                  <MenuItem\n                                    key={i}\n                                    value={option.uuid}\n                                    style={{ textAlign: \"left\" }}\n                                  >\n                                    {option.name}\n                                  </MenuItem>\n                                )\n                              )\n                            : toolbar.Label.replace(/\\s/g, \"\") === \"Realm\" &&\n                              this.state.realmData !== null &&\n                              this.state.realmData !== undefined\n                            ? this.state.realmData.map(\n                                (option: any, i: number) => (\n                                  <MenuItem\n                                    key={i}\n                                    value={option.uuid}\n                                    style={{ textAlign: \"left\" }}\n                                  >\n                                    {option.name}\n                                  </MenuItem>\n                                )\n                              )\n                            : toolbar.options.map((option: any, i: number) => (\n                                <MenuItem\n                                  key={i}\n                                  value={`${option.value}`}\n                                  style={{ textAlign: \"left\" }}\n                                >\n                                  {option.display}\n                                </MenuItem>\n                              ))}\n                        </TextField>\n                      </Grid>\n                    );\n                  } else {\n                    return null;\n                  }\n                })}\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            xs={2}\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <Grid item style={{ paddingTop: \"25px\", width: \"70%\" }}>\n              <ApplyBtn\n                variant=\"contained\"\n                style={{\n                  width: \"100%\",\n                  backgroundColor: \"#7C8A97\",\n                  color: \"#eeeeee\"\n                }}\n                onClick={() => this.ApplyFilter()}\n              >\n                Apply\n              </ApplyBtn>\n            </Grid>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nconst FilterToolBar = withStyles(useStyles)(FilterToolBarComp);\n\nFilterToolBar.defaultProps = {\n  sortBy: true,\n  activeStatus: true,\n  realm: true,\n  company: true\n};\n\nexport { FilterToolBar };\n"]},"metadata":{},"sourceType":"module"}