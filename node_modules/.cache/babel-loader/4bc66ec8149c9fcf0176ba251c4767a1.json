{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/async-table/index.tsx\";\n// Reusable component for making tables\nimport React from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Checkbox, MuiThemeProvider } from '@material-ui/core';\nimport { useStyles, theme } from './styles';\n\nconst AsyncTable = ({\n  headers,\n  tableData,\n  render,\n  customHeight,\n  withBorder\n}) => {\n  const classes = useStyles();\n\n  const CheckBoxLabel = ({\n    clickFn,\n    state,\n    label\n  }) => {\n    return React.createElement(React.Fragment, null, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '0fr 1fr'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onClick: () => clickFn(),\n      color: \"primary\",\n      checked: state,\n      style: {\n        padding: '0 20px 0 7px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      onClick: () => clickFn(),\n      className: classes.overflowClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, label))));\n  };\n\n  const renderHeaders = () => {\n    return headers && React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      className: classes.headerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, headers.map((header, idx) => header.check ? React.createElement(TableCell, {\n      className: classes.header,\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(CheckBoxLabel, {\n      key: idx,\n      label: header.title,\n      state: header.state,\n      clickFn: header.clickFn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })) : React.createElement(TableCell, {\n      className: classes.header,\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.overflowClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, header)))));\n  };\n\n  const cellAdjust = () => {\n    return React.createElement(\"colgroup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].map(e => React.createElement(\"col\", {\n      key: e,\n      style: {\n        width: '7.69230769231%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })));\n  };\n\n  const renderTableBody = () => {\n    return React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, render(tableData, {\n      row: classes.row,\n      cell: classes.cell,\n      userCell: classes.userCell,\n      emailCell: classes.emailCell,\n      uuid: classes.uuid,\n      icon: classes.icon,\n      fixedCell: classes.fixedCell,\n      overflow: classes.overflowClass\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.rootClass,\n    style: {\n      minHeight: customHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    style: withBorder ? {\n      border: '.5px solid #eeeeee'\n    } : {\n      border: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, cellAdjust(), renderHeaders(), renderTableBody()));\n};\n\nAsyncTable.defaultProps = {\n  headers: [],\n  tableData: [],\n  render: () => null,\n  classes: [],\n  customHeight: 500,\n  withBorder: false\n};\nexport { AsyncTable };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/async-table/index.tsx"],"names":["React","Table","TableHead","TableBody","TableRow","TableCell","Checkbox","MuiThemeProvider","useStyles","theme","AsyncTable","headers","tableData","render","customHeight","withBorder","classes","CheckBoxLabel","clickFn","state","label","display","gridTemplateColumns","padding","overflowClass","renderHeaders","headerRow","map","header","idx","check","title","cellAdjust","e","width","renderTableBody","row","cell","userCell","emailCell","uuid","icon","fixedCell","overflow","rootClass","minHeight","table","border","defaultProps"],"mappings":"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","sourcesContent":["// Reusable component for making tables\n\nimport React from 'react'\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Checkbox,\n  MuiThemeProvider\n} from '@material-ui/core'\n\nimport { useStyles, theme } from './styles'\n\ninterface Props {\n  headers: any\n  tableData: any\n  render: Function\n  customHeight?: number | string\n  withBorder?: boolean\n}\ninterface CheckProps {\n  clickFn: Function\n  state: boolean\n  label: string\n}\ninterface HeaderProps {\n  clickFn: Function\n  state: boolean\n  title: string\n  check: boolean\n}\n\nconst AsyncTable: React.FC<Props> = ({\n  headers,\n  tableData,\n  render,\n  customHeight,\n  withBorder\n}) => {\n  const classes: any = useStyles()\n  const CheckBoxLabel = ({ clickFn, state, label }: CheckProps) => {\n    return (\n      <>\n        <MuiThemeProvider theme={theme}>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '0fr 1fr'\n            }}\n          >\n            <Checkbox\n              onClick={() => clickFn()}\n              color=\"primary\"\n              checked={state}\n              style={{\n                padding: '0 20px 0 7px'\n              }}\n            />\n            <p onClick={() => clickFn()} className={classes.overflowClass}>\n              {label}\n            </p>\n          </div>\n        </MuiThemeProvider>\n      </>\n    )\n  }\n\n  const renderHeaders: Function = () => {\n    return (\n      headers && (\n        <TableHead>\n          <TableRow className={classes.headerRow}>\n            {headers.map((header: HeaderProps, idx: number) =>\n              header.check ? (\n                <TableCell className={classes.header} key={idx}>\n                  <CheckBoxLabel\n                    key={idx}\n                    label={header.title}\n                    state={header.state}\n                    clickFn={header.clickFn}\n                  />\n                </TableCell>\n              ) : (\n                <TableCell className={classes.header} key={idx}>\n                  <span className={classes.overflowClass}>{header}</span>\n                </TableCell>\n              )\n            )}\n          </TableRow>\n        </TableHead>\n      )\n    )\n  }\n\n  const cellAdjust: Function = () => {\n    return (\n      <colgroup>\n        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].map(e => (\n          <col key={e} style={{ width: '7.69230769231%' }} />\n        ))}\n      </colgroup>\n    )\n  }\n\n  const renderTableBody: Function = () => {\n    return (\n      <TableBody>\n        {render(tableData, {\n          row: classes.row,\n          cell: classes.cell,\n          userCell: classes.userCell,\n          emailCell: classes.emailCell,\n          uuid: classes.uuid,\n          icon: classes.icon,\n          fixedCell: classes.fixedCell,\n          overflow: classes.overflowClass\n        })}\n      </TableBody>\n    )\n  }\n\n  return (\n    <div className={classes.rootClass} style={{ minHeight: customHeight }}>\n      <Table\n        className={classes.table}\n        style={\n          withBorder ? { border: '.5px solid #eeeeee' } : { border: 'none' }\n        }\n      >\n        {cellAdjust()}\n        {renderHeaders()}\n        {renderTableBody()}\n      </Table>\n    </div>\n  )\n}\n\nAsyncTable.defaultProps = {\n  headers: [],\n  tableData: [],\n  render: () => null,\n  classes: [],\n  customHeight: 500,\n  withBorder: false\n} as Partial<Props>\n\nexport { AsyncTable }\n"]},"metadata":{},"sourceType":"module"}