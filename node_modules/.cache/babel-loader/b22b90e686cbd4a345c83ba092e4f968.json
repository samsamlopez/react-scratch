{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/users/users-new/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal } from \"common-components\";\nimport { Step } from \"./steps\";\n\nconst NewUser = ({\n  open,\n  onClose\n}) => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        step = _useState2[0],\n        setStep = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        roles = _useState4[0],\n        setRoles = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        companies = _useState6[0],\n        setCompanies = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        disabled = _useState8[0],\n        setDisabled = _useState8[1];\n  /*\n     variables that gets input info of the new user\n  */\n\n\n  const _useState9 = useState({\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    date: new Date(),\n    role: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        info = _useState10[0],\n        setInfo = _useState10[1];\n\n  const _useState11 = useState(info),\n        _useState12 = _slicedToArray(_useState11, 2),\n        previous = _useState12[0],\n        setPrevious = _useState12[1];\n  /*\n    sets the error for the input fields\n  */\n\n\n  const _useState13 = useState({\n    first_name_error: false,\n    last_name_error: false,\n    username_error: false,\n    email_error: false\n  }),\n        _useState14 = _slicedToArray(_useState13, 2),\n        error = _useState14[0],\n        setError = _useState14[1];\n\n  const Info = {\n    add: info => addInfo(info)\n  };\n  const Error = {\n    add: error => addError(error)\n  };\n  const Steps = {\n    _init: () => {\n      switch (step) {\n        case 1:\n          if (check_step1()) {\n            setDisabled(1);\n          } else {\n            setDisabled(0);\n          }\n\n          break;\n\n        case 2:\n          {\n            if (info.role.length > 0) {\n              setDisabled(2);\n            } else {\n              setDisabled(0);\n            }\n          }\n          break;\n\n        default:\n          setDisabled(step);\n      }\n    }\n  };\n  /*\n    fetches the mock data and sets the needed payload data (roles,campaigns etc.)\n  */\n\n  useEffect(() => {\n    fetch(\"http://5e00169a1fb99500141403ae.mockapi.io/api/v1/roles\").then(roles => roles.json()).then(role => {\n      setRoles(role);\n    }).then(() => getCompanies());\n  }, []);\n\n  const getCompanies = () => {\n    fetch(\"http://5e0015181fb99500141403a4.mockapi.io/mock/v1/companies\").then(company => company.json()).then(company => {\n      setCompanies(company);\n    });\n  };\n\n  useEffect(() => {\n    Steps._init();\n  }, [info, step]);\n  let payload = {\n    roles,\n    companies\n  };\n  /*\n     config that will be pass down to <Step> child\n  */\n\n  const config = {\n    disabled: disabled,\n    setDisabled: setDisabled,\n    number: step,\n    setCurrentStep: setStep,\n    inputValues: info,\n    inputErrors: error,\n    payload: payload\n  };\n\n  function hasContent(value) {\n    return value.length > 0;\n  }\n\n  const handleSelect = type => ({\n    target: {\n      value\n    }\n  }) => {\n    Info.add({\n      role: value\n    });\n  };\n\n  const handleDatePick = value => {\n    Info.add({\n      date: value\n    });\n  };\n\n  const handleEmail = ({\n    target: {\n      value\n    }\n  }) => {\n    Info.add({\n      email: value\n    });\n\n    if (!value.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) && hasContent(value)) {\n      Error.add({\n        email_error: true\n      });\n    } else {\n      Error.add({\n        email_error: false\n      });\n    }\n  };\n  /*\n    handles the input values\n  */\n\n\n  const handleInputChange = type => value => {\n    let object = {\n      [`${type}`]: value.target.value\n    };\n    Info.add(object);\n  };\n\n  const addInfo = object => {\n    setPrevious(info);\n    setInfo(_objectSpread({}, info, {}, object));\n  };\n\n  const addError = error_object => {\n    setError(_objectSpread({}, error, {}, error_object));\n  };\n\n  const check_step1 = () => {\n    let first_name = info.first_name,\n        last_name = info.last_name,\n        username = info.username;\n    let first_name_error = false,\n        last_name_error = false,\n        username_error = false;\n\n    if (previous !== info) {\n      if (!hasContent(first_name) && hasContent(previous.first_name)) first_name_error = true;\n      if (!hasContent(last_name) && hasContent(previous.last_name)) last_name_error = true;\n      if (!hasContent(username) && hasContent(previous.username)) username_error = true;\n      Error.add({\n        first_name_error,\n        last_name_error,\n        username_error\n      });\n    }\n\n    return hasContent(first_name) && hasContent(last_name) && hasContent(username) && !error.email_error;\n  };\n\n  const handleInputBlur = type => value => {\n    check_step1();\n  };\n\n  const renderSteps = () => {\n    return React.createElement(Step, Object.assign({}, config, {\n      handleSelect: handleSelect,\n      handleDatePick: handleDatePick,\n      handleEmail: handleEmail,\n      handleInputBlur: handleInputBlur,\n      handleInputChange: handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    title: \"New User\",\n    height: 560,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, renderSteps());\n};\n\nexport { NewUser };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/users/users-new/index.tsx"],"names":["React","useState","useEffect","Modal","Step","NewUser","open","onClose","step","setStep","roles","setRoles","companies","setCompanies","disabled","setDisabled","first_name","last_name","username","email","date","Date","role","info","setInfo","previous","setPrevious","first_name_error","last_name_error","username_error","email_error","error","setError","Info","add","addInfo","Error","addError","Steps","_init","check_step1","length","fetch","then","json","getCompanies","company","payload","config","number","setCurrentStep","inputValues","inputErrors","hasContent","value","handleSelect","type","target","handleDatePick","handleEmail","match","handleInputChange","object","error_object","handleInputBlur","renderSteps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Modal } from \"common-components\";\nimport { Step } from \"./steps\";\n\ntype Props = {\n  open: boolean;\n  onClose: any;\n};\nconst NewUser = ({ open, onClose }: Props) => {\n  const [step, setStep] = useState(1);\n  const [roles, setRoles] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [disabled, setDisabled] = useState(0);\n\n  /*\n     variables that gets input info of the new user\n  */\n\n  const [info, setInfo] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    date: new Date(),\n    role: []\n  });\n\n  const [previous, setPrevious] = useState(info);\n\n  /*\n    sets the error for the input fields\n  */\n\n  const [error, setError] = useState({\n    first_name_error: false,\n    last_name_error: false,\n    username_error: false,\n    email_error: false\n  });\n\n  const Info = {\n    add: (info: any) => addInfo(info)\n  };\n\n  const Error = {\n    add: (error: any) => addError(error)\n  };\n  const Steps = {\n    _init: () => {\n      switch (step) {\n        case 1:\n          if (check_step1()) {\n            setDisabled(1);\n          } else {\n            setDisabled(0);\n          }\n          break;\n        case 2:\n          {\n            if (info.role.length > 0) {\n              setDisabled(2);\n            } else {\n              setDisabled(0);\n            }\n          }\n          break;\n\n        default:\n          setDisabled(step);\n      }\n    }\n  };\n\n  /*\n    fetches the mock data and sets the needed payload data (roles,campaigns etc.)\n  */\n\n  useEffect(() => {\n    fetch(\"http://5e00169a1fb99500141403ae.mockapi.io/api/v1/roles\")\n      .then((roles: any) => roles.json())\n      .then((role: any) => {\n        setRoles(role);\n      })\n      .then(() => getCompanies());\n  }, []);\n\n  const getCompanies = () => {\n    fetch(\"http://5e0015181fb99500141403a4.mockapi.io/mock/v1/companies\")\n      .then((company: any) => company.json())\n      .then((company: any) => {\n        setCompanies(company);\n      });\n  };\n\n  useEffect(() => {\n    Steps._init();\n  }, [info, step]);\n\n  let payload = { roles, companies };\n\n  /*\n     config that will be pass down to <Step> child\n  */\n\n  const config = {\n    disabled: disabled,\n    setDisabled: setDisabled,\n    number: step,\n    setCurrentStep: setStep,\n    inputValues: info,\n    inputErrors: error,\n    payload: payload\n  };\n\n  function hasContent(value: any) {\n    return value.length > 0;\n  }\n\n  const handleSelect = (type: any) => ({ target: { value } }: any) => {\n    Info.add({ role: value });\n  };\n\n  const handleDatePick = (value: any) => {\n    Info.add({ date: value });\n  };\n\n  const handleEmail = ({ target: { value } }: any) => {\n    Info.add({ email: value });\n    if (\n      !value.match(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      ) &&\n      hasContent(value)\n    ) {\n      Error.add({ email_error: true });\n    } else {\n      Error.add({ email_error: false });\n    }\n  };\n\n  /*\n    handles the input values\n  */\n\n  const handleInputChange = (type: any) => (value: any) => {\n    let object = { [`${type}`]: value.target.value };\n    Info.add(object);\n  };\n\n  const addInfo = (object: any) => {\n    setPrevious(info);\n    setInfo({ ...info, ...object });\n  };\n\n  const addError = (error_object: any) => {\n    setError({ ...error, ...error_object });\n  };\n\n  const check_step1 = () => {\n    let { first_name, last_name, username } = info;\n    let first_name_error = false,\n      last_name_error = false,\n      username_error = false;\n\n    if (previous !== info) {\n      if (!hasContent(first_name) && hasContent(previous.first_name))\n        first_name_error = true;\n      if (!hasContent(last_name) && hasContent(previous.last_name))\n        last_name_error = true;\n      if (!hasContent(username) && hasContent(previous.username))\n        username_error = true;\n      Error.add({ first_name_error, last_name_error, username_error });\n    }\n\n    return (\n      hasContent(first_name) &&\n      hasContent(last_name) &&\n      hasContent(username) &&\n      !error.email_error\n    );\n  };\n\n  const handleInputBlur = (type: string) => (value: any) => {\n    check_step1();\n  };\n\n  const renderSteps: Function = () => {\n    return (\n      <Step\n        {...config}\n        handleSelect={handleSelect}\n        handleDatePick={handleDatePick}\n        handleEmail={handleEmail}\n        handleInputBlur={handleInputBlur}\n        handleInputChange={handleInputChange}\n      />\n    );\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} title=\"New User\" height={560}>\n      {renderSteps()}\n    </Modal>\n  );\n};\n\nexport { NewUser };\n"]},"metadata":{},"sourceType":"module"}