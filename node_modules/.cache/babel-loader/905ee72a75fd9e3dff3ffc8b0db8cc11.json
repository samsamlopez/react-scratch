{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/users/users-new/steps/Step2.tsx\";\nimport React, { useState } from \"react\";\nimport { MenuItem, Checkbox, Grid } from \"@material-ui/core\";\nimport { KeyboardArrowUp, KeyboardArrowDown } from \"@material-ui/icons\";\nimport { InputField as SelectField } from \"common-components\";\nimport { getRoleInfo } from \"../RoleInfo\";\nimport { DescribeRole } from \"../components\";\nimport { CustomText } from \"../styles\";\nimport { useStyles, TitleTag } from \"../styles\";\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 300,\n      width: 250\n    }\n  }\n};\nconst divStyle = {\n  margin: \"0 4px\"\n};\n\nconst Step2 = ({\n  disabled,\n  setDisabled,\n  selectFn,\n  label,\n  roles,\n  selected\n}) => {\n  const _useState = useState(!false),\n        _useState2 = _slicedToArray(_useState, 2),\n        up = _useState2[0],\n        setUp = _useState2[1];\n\n  const classes = useStyles();\n  const selectStyle = {\n    margin: \"14px 0 26px 0\",\n    width: \"360px\"\n  };\n  const selectProps = {\n    SelectProps: {\n      IconComponent: () => React.createElement(KeyboardArrowDown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      MenuProps,\n      multiple: true,\n      onChange: selectFn(\"role\"),\n      value: selected,\n      renderValue: selected => selected.map(select => {\n        return roles.filter(rls => rls.pk === select).map(data => data.name);\n      }).join(\", \")\n    }\n  };\n  let description = getRoleInfo();\n  return React.createElement(React.Fragment, null, React.createElement(TitleTag, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Roles\"), React.createElement(SelectField, Object.assign({\n    \"data-cy\": \"roles\",\n    style: selectStyle,\n    label: \"User role*\",\n    select: true,\n    margin: \"normal\"\n  }, selectProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), roles.map(key => {\n    return React.createElement(MenuItem, {\n      key: key.id,\n      value: key.pk,\n      \"data-cy\": \"roles-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: selected.indexOf(key.pk) > -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(CustomText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, key.name));\n  })), roles && Boolean(selected.length) && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    onClick: () => setUp(!up),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      cursor: \"pointer\",\n      marginBottom: \"13px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(CustomText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, up ? \"Close\" : \"Info\"), up ? React.createElement(KeyboardArrowUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    style: divStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(DescribeRole, {\n    description: description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))));\n};\n\nexport { Step2 };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/users/users-new/steps/Step2.tsx"],"names":["React","useState","MenuItem","Checkbox","Grid","KeyboardArrowUp","KeyboardArrowDown","InputField","SelectField","getRoleInfo","DescribeRole","CustomText","useStyles","TitleTag","MenuProps","PaperProps","style","maxHeight","width","divStyle","margin","Step2","disabled","setDisabled","selectFn","label","roles","selected","up","setUp","classes","selectStyle","selectProps","SelectProps","IconComponent","multiple","onChange","value","renderValue","map","select","filter","rls","pk","data","name","join","description","key","id","indexOf","Boolean","length","display","flexDirection","cursor","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MenuItem, Checkbox, Grid, Typography } from \"@material-ui/core\";\nimport { KeyboardArrowUp, KeyboardArrowDown } from \"@material-ui/icons\";\nimport { InputField as SelectField } from \"common-components\";\nimport { getRoleInfo } from \"../RoleInfo\";\nimport { DescribeRole } from \"../components\";\nimport { CustomText,theme } from \"../styles\";\nimport { useStyles, TitleTag } from \"../styles\";\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 300,\n      width: 250\n    }\n  }\n};\n\ntype Props = {\n  disabled?: any;\n  setDisabled?: any;\n  selectFn: any;\n  label: any;\n  roles: any;\n  selected: any;\n};\n\nconst divStyle = {\n  margin: \"0 4px\"\n};\n\nconst Step2 = ({\n  disabled,\n  setDisabled,\n  selectFn,\n  label,\n  roles,\n  selected\n}: Props) => {\n  const [up, setUp] = useState(!false);\n  const classes = useStyles();\n  const selectStyle = { margin: \"14px 0 26px 0\", width: \"360px\" };\n  const selectProps = {\n    SelectProps: {\n      IconComponent: () => <KeyboardArrowDown />,\n      MenuProps,\n      multiple: true,\n      onChange: selectFn(\"role\"),\n      value: selected,\n      renderValue: (selected: any) =>\n        selected\n          .map((select: any) => {\n            return roles\n              .filter((rls: any) => rls.pk === select)\n              .map((data: any) => data.name);\n          })\n          .join(\", \")\n    }\n  };\n\n  let description = getRoleInfo();\n\n  return (\n    <>\n      <TitleTag>Roles</TitleTag>\n\n      <SelectField\n        data-cy=\"roles\"\n        style={selectStyle}\n        label=\"User role*\"\n        select={true}\n        margin=\"normal\"\n        {...selectProps}\n      >\n        {roles.map((key: any) => {\n          return (\n            <MenuItem key={key.id} value={key.pk} data-cy=\"roles-list\">\n              <Checkbox\n                color=\"primary\"\n                checked={selected.indexOf(key.pk) > -1}\n              />\n              <CustomText>{key.name}</CustomText>\n            </MenuItem>\n          );\n        })}\n      </SelectField>\n      {roles && Boolean(selected.length) && (\n        <>\n          <div\n            onClick={() => setUp(!up)}\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              cursor: \"pointer\",\n              marginBottom: \"13px\"\n            }}\n          >\n            <CustomText>{up ? \"Close\" : \"Info\"}</CustomText>\n            {up ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </div>\n        </>\n      )}\n      <Grid container spacing={1}>\n        <Grid item style={divStyle}>\n          <DescribeRole description={description} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport { Step2 };\n"]},"metadata":{},"sourceType":"module"}