{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/manage-companies/companies-landing/index.tsx\";\n//Material\nimport { Divider, Paper } from \"@material-ui/core\";\nimport React, { Component } from \"react\"; //api call\n\nimport { FilterToolBar, HeaderButton, HeaderLink, Pagination, SearchBar, TableLoader } from \"common-components\";\nimport { CompanyTable } from \"../components/table\";\nimport { mock } from \"../mock\"; //import AddCompanyForm from \"./Forms/AddCompanyForm\";\n\nimport SEO from \"utils/seo\";\n\nclass Companies extends Component {\n  constructor() {\n    super({});\n\n    this.handleUpdate = () => {\n      this.setState({\n        loading: true\n      }); //start mock\n\n      setTimeout(() => {\n        this.setState({\n          userData: mock,\n          filterlist: mock,\n          paginateList: mock,\n          loading: false\n        });\n      }, 2000); //end mock\n\n      /* get(\"/identity/company/list/\").then(res => {\n        this.setState({\n          userData: res.data,\n          filterlist: res.data,\n          paginateList: res.data,\n          loading: false\n        });\n      }); */\n    };\n\n    this.FilterApplyButton = params => {\n      this.setState({\n        loading: true\n      });\n\n      var parameter = _objectSpread({}, params.sortby !== \" \" && {\n        order_by: params.sortby\n      }, {}, params.active !== \" \" && {\n        active: params.active\n      }, {}, params.company !== \" \" && {\n        company: params.company\n      }, {}, params.campaign !== \" \" && {\n        campaigns: params.campaign\n      }, {}, params.roles !== \" \" && {\n        groups: params.roles\n      }, {}, params.hasCompany !== \" \" && {\n        no_company: !params.hasCompany\n      });\n      /* get(\"/identity/company/list/\", parameter).then(res => {\n        this.setState({\n          userData: res.data,\n          filterlist: res.data,\n          paginateList: res.data,\n          loading: false\n        });\n      }); */\n\n    };\n\n    this.openDrawerHandler = () => {\n      this.setState({\n        openDrawer: true\n      });\n    };\n\n    this.closeDrawerHandler = () => {\n      this.setState({\n        openDrawer: false\n      });\n    };\n\n    this.paginate = (from, to) => {\n      this.setState({\n        userData: this.state.paginateList.slice(from, to)\n      });\n    };\n\n    this.state = {\n      openDrawer: false,\n      loading: false,\n      userData: [],\n      filterlist: [],\n      paginateList: [],\n      innerLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleUpdate();\n  } //Needed this method for the filtertoolbar component\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(SEO, {\n      title: \"Manage Companies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingBottom: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(HeaderLink, {\n      menu: [{\n        title: \"Users\",\n        path: \"/manage/users\"\n      }, {\n        title: \"Campaigns\",\n        path: \"/manage/campaigns\"\n      }, {\n        title: \"Locations\",\n        path: \"/manage/locations\"\n      }, {\n        title: \"Realms\",\n        path: \"/manage/realms\"\n      }, {\n        title: \"DID Pools\",\n        path: \"/manage/did-pool\"\n      }, {\n        title: \"Dids\",\n        path: \"/manage/dids\"\n      }],\n      title: \"Companies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(HeaderButton, {\n      openFunction: this.openDrawerHandler,\n      buttonText: \"New Company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(Paper, {\n      style: {\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignContent: \"space-between\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      title: \"Company\",\n      userData: [],\n      headers: [\"name\", \"slug\", \"uuid\"],\n      active: true,\n      loading: true,\n      link: true,\n      pathnameData: {\n        firstLink: `/manage/companies/edit/`,\n        fetchData: [\"slug\", \"uuid\"],\n        lastLink: ``\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(FilterToolBar, {\n      FilterApplyButton: this.FilterApplyButton,\n      sortBy: true,\n      activeStatus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), this.state.loading ? React.createElement(TableLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(CompanyTable //DataNotFound={this.state.filterlist}\n    , {\n      userData: this.state.userData //handleUpdated={this.handleUpdate}\n      ,\n      innerLoading: this.state.innerLoading,\n      headers: [\"Name\", \"Slug\", \"Email\", \"Website\", \"UUID\", \"Active\", \" \"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), Boolean(this.state.paginateList.length) && React.createElement(Pagination, {\n      paginateFn: this.paginate,\n      totalItems: this.state.paginateList.length //paginateList={this.state.paginateList}\n      ,\n      itemsPerPage: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport { Companies };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/manage-companies/companies-landing/index.tsx"],"names":["Divider","Paper","React","Component","FilterToolBar","HeaderButton","HeaderLink","Pagination","SearchBar","TableLoader","CompanyTable","mock","SEO","Companies","constructor","handleUpdate","setState","loading","setTimeout","userData","filterlist","paginateList","FilterApplyButton","params","parameter","sortby","order_by","active","company","campaign","campaigns","roles","groups","hasCompany","no_company","openDrawerHandler","openDrawer","closeDrawerHandler","paginate","from","to","state","slice","innerLoading","componentDidMount","render","display","flexDirection","justifyContent","alignItems","paddingBottom","title","path","height","flexWrap","alignContent","width","firstLink","fetchData","lastLink","Boolean","length"],"mappings":"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","sourcesContent":["//Material\nimport { Divider, Paper } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\n//api call\nimport {\n  FilterToolBar,\n  HeaderButton,\n  HeaderLink,\n  Modal,\n  Pagination,\n  SearchBar,\n  TableLoader\n} from \"common-components\";\nimport { CompanyTable } from \"../components/table\";\nimport { mock } from \"../mock\";\n//import AddCompanyForm from \"./Forms/AddCompanyForm\";\nimport SEO from \"utils/seo\";\n\ninterface IProps {}\n\ninterface IState {\n  openDrawer: boolean;\n  loading: boolean;\n  userData: any;\n  filterlist: any;\n  paginateList: any;\n  innerLoading: boolean;\n}\n\nclass Companies extends Component<IProps, IState> {\n  constructor() {\n    super({});\n    this.state = {\n      openDrawer: false,\n      loading: false,\n      userData: [],\n      filterlist: [],\n      paginateList: [],\n      innerLoading: false\n    };\n  }\n  handleUpdate = () => {\n    this.setState({ loading: true });\n    //start mock\n    setTimeout(() => {\n      this.setState({\n        userData: mock,\n        filterlist: mock,\n        paginateList: mock,\n        loading: false\n      });\n    }, 2000);\n\n    //end mock\n\n    /* get(\"/identity/company/list/\").then(res => {\n      this.setState({\n        userData: res.data,\n        filterlist: res.data,\n        paginateList: res.data,\n        loading: false\n      });\n    }); */\n  };\n  componentDidMount() {\n    this.handleUpdate();\n  }\n  //Needed this method for the filtertoolbar component\n  FilterApplyButton = (params: any) => {\n    this.setState({ loading: true });\n    var parameter = {\n      ...(params.sortby !== \" \" && { order_by: params.sortby }),\n      ...(params.active !== \" \" && { active: params.active }),\n      ...(params.company !== \" \" && { company: params.company }),\n      ...(params.campaign !== \" \" && { campaigns: params.campaign }),\n      ...(params.roles !== \" \" && { groups: params.roles }),\n      ...(params.hasCompany !== \" \" && { no_company: !params.hasCompany })\n    };\n\n    /* get(\"/identity/company/list/\", parameter).then(res => {\n      this.setState({\n        userData: res.data,\n        filterlist: res.data,\n        paginateList: res.data,\n        loading: false\n      });\n    }); */\n  };\n\n  //Functions for creating new companies\n  openDrawerHandler = () => {\n    this.setState({ openDrawer: true });\n  };\n  closeDrawerHandler = () => {\n    this.setState({ openDrawer: false });\n  };\n  paginate = (from: number, to: number) => {\n    this.setState({\n      userData: this.state.paginateList.slice(from, to)\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <SEO title=\"Manage Companies\" />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingBottom: 30\n          }}\n        >\n          <HeaderLink\n            menu={[\n              {\n                title: \"Users\",\n                path: \"/manage/users\"\n              },\n              {\n                title: \"Campaigns\",\n                path: \"/manage/campaigns\"\n              },\n              {\n                title: \"Locations\",\n                path: \"/manage/locations\"\n              },\n              {\n                title: \"Realms\",\n                path: \"/manage/realms\"\n              },\n              {\n                title: \"DID Pools\",\n                path: \"/manage/did-pool\"\n              },\n              {\n                title: \"Dids\",\n                path: \"/manage/dids\"\n              }\n            ]}\n            title=\"Companies\"\n          />\n          <HeaderButton\n            openFunction={this.openDrawerHandler}\n            buttonText=\"New Company\"\n          />\n        </div>\n\n        <Paper style={{ height: \"auto\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              alignContent: \"space-between\",\n              height: \"auto\"\n            }}\n          >\n            <div style={{ width: \"100%\" }}>\n              <SearchBar\n                title=\"Company\"\n                userData={[]}\n                headers={[\"name\", \"slug\", \"uuid\"]}\n                active={true}\n                loading={true}\n                link={true}\n                pathnameData={{\n                  firstLink: `/manage/companies/edit/`,\n                  fetchData: [\"slug\", \"uuid\"],\n                  lastLink: ``\n                }}\n              />\n              <Divider />\n              {\n                <FilterToolBar\n                  FilterApplyButton={this.FilterApplyButton}\n                  sortBy={true}\n                  activeStatus={true}\n                />\n              }\n\n              {this.state.loading ? (\n                <TableLoader />\n              ) : (\n                <>\n                  <CompanyTable\n                    //DataNotFound={this.state.filterlist}\n                    userData={this.state.userData}\n                    //handleUpdated={this.handleUpdate}\n                    innerLoading={this.state.innerLoading}\n                    headers={[\n                      \"Name\",\n                      \"Slug\",\n                      \"Email\",\n                      \"Website\",\n                      \"UUID\",\n                      \"Active\",\n                      \" \"\n                    ]}\n                  />\n                  <div style={{ width: \"100%\" }}>\n                    <Divider />\n                    {Boolean(this.state.paginateList.length) && (\n                      <Pagination\n                        paginateFn={this.paginate}\n                        totalItems={this.state.paginateList.length}\n                        //paginateList={this.state.paginateList}\n                        itemsPerPage={6}\n                      />\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </Paper>\n\n        {/* <Modal\n          open={this.state.openDrawer}\n          // open={true}\n          closeDrawer={this.closeDrawerHandler}\n          title={<b>Create new company</b>}\n          onClose={this.closeDrawerHandler}\n        >\n          {/* <AddCompanyForm\n            handleUpdate={this.handleUpdate}\n            closeModal={this.closeDrawerHandler}\n            openModal={this.openDrawerHandler}\n          />\n        </Modal> */}\n      </>\n    );\n  }\n}\n\nexport { Companies };\n"]},"metadata":{},"sourceType":"module"}