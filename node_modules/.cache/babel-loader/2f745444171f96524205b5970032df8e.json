{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/manage-did-pool/components/DIDPoolTable.tsx\";\nimport React, { useState } from 'react';\nimport { AsyncTable, ActiveCell, UnderlineCell, EditButton } from 'common-components';\nimport { LightTooltip } from '../utils/style';\nimport { headers } from '../utils/const-var';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { FileCopyOutlined as Icon } from '@material-ui/icons';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst DIDPoolTable = ({\n  state,\n  history\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        copy = _useState2[0],\n        setCopy = _useState2[1];\n\n  return React.createElement(AsyncTable, {\n    headers: headers,\n    tableData: state.didPools,\n    render: (pools, {\n      row,\n      cell,\n      uuid,\n      icon\n    }) => pools.map(pool => React.createElement(TableRow, {\n      className: row,\n      key: pool.uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(UnderlineCell, {\n      className: cell,\n      onClick: () => history.push(`/manage/did-pool/edit/${pool.uuid}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, pool.name), React.createElement(TableCell, {\n      className: uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, pool.uuid), React.createElement(CopyToClipboard, {\n      text: pool.uuid,\n      onCopy: () => setCopy(true),\n      onPointerLeave: () => setCopy(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, copy ? React.createElement(LightTooltip, {\n      title: \"UUID Copied!\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: icon,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })) : React.createElement(LightTooltip, {\n      title: \"Copy UUID\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: icon,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })))), React.createElement(ActiveCell, {\n      className: cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, pool.active), React.createElement(ActiveCell, {\n      className: cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, pool.allow_inbound ? 'yes' : 'no'), React.createElement(TableCell, {\n      className: cell,\n      style: {\n        textDecoration: 'underline'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, pool.did_count), React.createElement(TableCell, {\n      className: cell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(EditButton, {\n      text: \"Edit\",\n      onClickFunc: () => history.push(`/manage/did-pool/edit/${pool.uuid}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\n\nexport default DIDPoolTable;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/manage-did-pool/components/DIDPoolTable.tsx"],"names":["React","useState","AsyncTable","ActiveCell","UnderlineCell","EditButton","LightTooltip","headers","TableCell","TableRow","FileCopyOutlined","Icon","CopyToClipboard","DIDPoolTable","state","history","copy","setCopy","didPools","pools","row","cell","uuid","icon","map","pool","push","name","active","allow_inbound","textDecoration","did_count"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  AsyncTable,\n  ActiveCell,\n  UnderlineCell,\n  EditButton\n} from 'common-components'\nimport { LightTooltip } from '../utils/style'\nimport { headers } from '../utils/const-var'\nimport { DidPoolTableProps } from '../utils/types'\nimport { TableCell, TableRow } from '@material-ui/core'\nimport { FileCopyOutlined as Icon } from '@material-ui/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst DIDPoolTable: React.FC<DidPoolTableProps> = ({ state, history }) => {\n  const [copy, setCopy] = useState(false)\n\n  return (\n    <AsyncTable\n      headers={headers}\n      tableData={state.didPools}\n      render={(pools: any, { row, cell, uuid, icon }: any) =>\n        pools.map((pool: any) => (\n          <TableRow className={row} key={pool.uuid}>\n            <UnderlineCell\n              className={cell}\n              onClick={() => history.push(`/manage/did-pool/edit/${pool.uuid}`)}\n            >\n              {pool.name}\n            </UnderlineCell>\n            <TableCell className={uuid}>\n              <p>{pool.uuid}</p>\n              <CopyToClipboard\n                text={pool.uuid}\n                onCopy={() => setCopy(true)}\n                onPointerLeave={() => setCopy(false)}\n              >\n                {copy ? (\n                  <LightTooltip title=\"UUID Copied!\" placement=\"top\">\n                    <Icon className={icon} rotate={360} />\n                  </LightTooltip>\n                ) : (\n                  <LightTooltip title=\"Copy UUID\" placement=\"top\">\n                    <Icon className={icon} rotate={360} />\n                  </LightTooltip>\n                )}\n              </CopyToClipboard>\n            </TableCell>\n            <ActiveCell className={cell}>{pool.active}</ActiveCell>\n            <ActiveCell className={cell}>\n              {pool.allow_inbound ? 'yes' : 'no'}\n            </ActiveCell>\n            <TableCell className={cell} style={{ textDecoration: 'underline' }}>\n              {pool.did_count}\n            </TableCell>\n            <TableCell className={cell} align=\"right\">\n              <EditButton\n                text=\"Edit\"\n                onClickFunc={() =>\n                  history.push(`/manage/did-pool/edit/${pool.uuid}`)\n                }\n              />\n            </TableCell>\n          </TableRow>\n        ))\n      }\n    />\n  )\n}\n\nexport default DIDPoolTable\n"]},"metadata":{},"sourceType":"module"}