{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/did/components/EditDIDModal/EditDIDModal.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, Typography, MenuItem, FormControl, InputLabel, Input, InputAdornment, Switch, FormHelperText, Select, Grid, CircularProgress } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Close from \"@material-ui/icons/Close\";\nimport KeyboardArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\nimport { LoadingModal, SuccessModal, DeleteModal } from \"common-components\";\nimport { useStyles, materialTheme } from \"../../styles/EditDIDModal.style\";\n\nconst EditDIDModal = ({\n  open,\n  closeFn,\n  editData,\n  fetchDIDs\n}) => {\n  const classes = useStyles({});\n\n  const _useState = useState(editData),\n        _useState2 = _slicedToArray(_useState, 2),\n        did = _useState2[0],\n        setDID = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        didPools = _useState4[0],\n        setPools = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        didPoolsLoading = _useState6[0],\n        setPoolsLoading = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedDIDPools = _useState8[0],\n        setSelectedPools = _useState8[1];\n\n  const _useState9 = useState({\n    open: false,\n    deleting: false,\n    deleted: false\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        del = _useState10[0],\n        setDel = _useState10[1];\n\n  const _useState11 = useState({\n    open: false,\n    updating: false,\n    updated: false\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        update = _useState12[0],\n        setUpdate = _useState12[1];\n\n  useEffect(() => {\n    fetchDIDPools();\n    setDID(editData);\n\n    if (editData !== null) {\n      setSelectedPools(editData.pool.uuid);\n    }\n  }, [editData]);\n\n  const fetchDIDPools = () => {\n    fetch(`http://5e00169a1fb99500141403ae.mockapi.io/api/v1/pools`).then(response => response.json()).then(response => {\n      console.log(\"pools\", response);\n      setPools(response);\n      setPoolsLoading(false);\n    });\n  };\n\n  const handleChange = (val, label) => {\n    console.log(\"changing\", val, label);\n\n    if (label === \"pool\") {\n      setSelectedPools(val);\n      return;\n    }\n\n    setDID(_objectSpread({}, did, {\n      [label]: val\n    }));\n  };\n\n  const handleUpdateDID = () => {\n    if (did !== null) {\n      closeFn();\n      handleOpenUpdatingModal();\n      const data = {\n        active: did.active,\n        owned: did.owned,\n        pool: didPools.find(pool => pool.uuid === selectedDIDPools) || did.pool\n      };\n      fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/dids/${did.uuid}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log(\"Success:\", data);\n        setUpdate(_objectSpread({}, update, {\n          updating: false,\n          updated: true\n        }));\n      }).catch(error => {\n        console.error(\"Error:\", error);\n      });\n    }\n  };\n\n  const handleDeleteDID = () => {\n    if (did !== null) {\n      setDel(_objectSpread({}, del, {\n        open: false,\n        deleting: true\n      }));\n      fetch(`http://5e0015181fb99500141403a4.mockapi.io/mock/v1/dids/${did.uuid}`, {\n        method: \"DELETE\"\n      }).then(response => response.json()).then(data => {\n        console.log(\"Success:\", data);\n        setDel(_objectSpread({}, del, {\n          open: false,\n          deleting: false,\n          deleted: true\n        }));\n      }).catch(error => {\n        console.error(\"Error:\", error);\n      });\n    }\n  };\n\n  const handleOpenUpdatingModal = () => {\n    setUpdate(_objectSpread({}, update, {\n      updating: true\n    }));\n  };\n\n  const handleCloseUpdatingModal = () => {\n    setUpdate(_objectSpread({}, update, {\n      updating: false\n    }));\n  };\n\n  const handleCloseDeletingModal = () => {\n    setDel(_objectSpread({}, del, {\n      deleting: false\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: materialTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    onClose: closeFn,\n    maxWidth: \"sm\",\n    classes: {\n      paperWidthSm: classes.container\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: 600,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      fontWeight: 600,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Edit DID\"), React.createElement(Close, {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: closeFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }))), React.createElement(DialogContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, did === null ? React.createElement(Typography, {\n    className: classes.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Loading DID...\"), React.createElement(CircularProgress, {\n    classes: {\n      svg: classes.svgColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })) : React.createElement(\"form\", {\n    style: {\n      margin: \"15px 0\",\n      overflow: \"hidden\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"status\",\n    classes: {\n      root: classes.inputLabel,\n      focused: classes.focused\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"DID pool\"), React.createElement(Select, {\n    className: classes.textField,\n    \"data-cy\": \"did-pools\",\n    style: {\n      margin: \"14px 0 26px 0\",\n      width: \"360px\"\n    },\n    inputProps: {\n      IconComponent: () => React.createElement(KeyboardArrowDown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })\n    },\n    value: selectedDIDPools || \"\",\n    onChange: e => handleChange(e.target.value, \"pool\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, !didPoolsLoading ? didPools.map(p => React.createElement(MenuItem, {\n    key: p.uuid,\n    value: p.uuid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, p.name)) : React.createElement(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })))), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"status\",\n    classes: {\n      root: classes.inputLabel,\n      focused: classes.focused\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"DID status\"), React.createElement(Input, {\n    id: \"status\",\n    value: did.active ? \"Active\" : \"Inactive\",\n    readOnly: true,\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      checked: did.active,\n      onChange: e => handleChange(e.target.checked, \"active\"),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"status\",\n    classes: {\n      root: classes.inputLabel,\n      focused: classes.focused\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Owned\"), React.createElement(Input, {\n    id: \"owned\",\n    readOnly: true,\n    value: did.owned ? \"Yes\" : \"No\",\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      checked: did.owned,\n      color: \"primary\",\n      onChange: e => handleChange(e.target.checked, \"owned\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: {\n      root: classes.inputLabel,\n      focused: classes.focused\n    },\n    htmlFor: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"Number\"), React.createElement(Input, {\n    autoComplete: \"off\",\n    classes: {\n      underline: classes.textField\n    },\n    id: \"number\",\n    value: did.number || \"\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    classes: {\n      root: classes.inputLabel,\n      focused: classes.focused\n    },\n    htmlFor: \"timezone\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, \"Timezone\"), React.createElement(Input, {\n    autoComplete: \"off\",\n    classes: {\n      underline: classes.textField\n    },\n    id: \"timezone\",\n    value: did.timezone || \"Field Not Set\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    spacing: 3,\n    style: {\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: classes.delBtn,\n    onClick: () => {\n      closeFn();\n      setDel(_objectSpread({}, del, {\n        open: true\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, \"Delete\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: classes.saveBtn,\n    onClick: () => handleUpdateDID(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, \"SAVE CHANGES\")))))), did !== null && React.createElement(React.Fragment, null, React.createElement(LoadingModal, {\n    open: update.updating,\n    text: \"Updating DID...\",\n    cancelFn: () => handleCloseUpdatingModal(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }), React.createElement(LoadingModal, {\n    open: del.deleting,\n    text: \"Deleting DID...\",\n    cancelFn: () => handleCloseDeletingModal(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }), React.createElement(SuccessModal, {\n    open: update.updated,\n    text: \"DID was updated\",\n    btnText: \"OK\",\n    closeFn: () => {\n      fetchDIDs();\n      setUpdate(_objectSpread({}, update, {\n        updated: false\n      }));\n    },\n    btnFn: () => {\n      fetchDIDs();\n      setUpdate(_objectSpread({}, update, {\n        updated: false\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }), React.createElement(SuccessModal, {\n    open: del.deleted,\n    text: \"DID was deleted\",\n    btnText: \"OK\",\n    closeFn: () => {\n      fetchDIDs();\n      setDel(_objectSpread({}, del, {\n        deleted: false\n      }));\n    },\n    btnFn: () => {\n      fetchDIDs();\n      setDel(_objectSpread({}, del, {\n        deleted: false\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }), React.createElement(DeleteModal, {\n    open: del.open,\n    name: did.number,\n    closeFn: () => setDel(_objectSpread({}, del, {\n      open: false\n    })),\n    delFn: () => handleDeleteDID(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }))));\n};\n\nexport default EditDIDModal;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/did/components/EditDIDModal/EditDIDModal.tsx"],"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","Typography","MenuItem","FormControl","InputLabel","Input","InputAdornment","Switch","FormHelperText","Select","Grid","CircularProgress","ThemeProvider","Close","KeyboardArrowDown","LoadingModal","SuccessModal","DeleteModal","useStyles","materialTheme","EditDIDModal","open","closeFn","editData","fetchDIDs","classes","did","setDID","didPools","setPools","didPoolsLoading","setPoolsLoading","selectedDIDPools","setSelectedPools","deleting","deleted","del","setDel","updating","updated","update","setUpdate","fetchDIDPools","pool","uuid","fetch","then","response","json","console","log","handleChange","val","label","handleUpdateDID","handleOpenUpdatingModal","data","active","owned","find","method","headers","body","JSON","stringify","catch","error","handleDeleteDID","handleCloseUpdatingModal","handleCloseDeletingModal","paperWidthSm","container","title","display","justifyContent","alignItems","textAlign","fontWeight","fontSize","cursor","content","loading","svg","svgColor","margin","overflow","root","inputLabel","focused","textField","width","IconComponent","e","target","value","map","p","name","span","checked","underline","number","timezone","marginTop","delBtn","saveBtn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Typography,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n  Switch,\n  FormHelperText,\n  Select,\n  Grid,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Close from \"@material-ui/icons/Close\";\nimport KeyboardArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\nimport { LoadingModal, SuccessModal, DeleteModal } from \"common-components\";\nimport { useStyles, materialTheme } from \"../../styles/EditDIDModal.style\";\n\ninterface Props {\n  open: boolean;\n  closeFn: () => void;\n  editData: any;\n  fetchDIDs: () => void;\n}\ninterface Obj {\n  [index: string]: any;\n}\n\nconst EditDIDModal = ({ open, closeFn, editData, fetchDIDs }: Props) => {\n  const classes = useStyles({});\n  const [did, setDID] = useState<Obj | null>(editData);\n  const [didPools, setPools] = useState<any>(null);\n  const [didPoolsLoading, setPoolsLoading] = useState<boolean>(true);\n  const [selectedDIDPools, setSelectedPools] = useState<string>(\"\");\n  const [del, setDel] = useState<Obj>({\n    open: false,\n    deleting: false,\n    deleted: false\n  });\n  const [update, setUpdate] = useState<Obj>({\n    open: false,\n    updating: false,\n    updated: false\n  });\n\n  useEffect(() => {\n    fetchDIDPools();\n    setDID(editData);\n    if (editData !== null) {\n      setSelectedPools(editData.pool.uuid);\n    }\n  }, [editData]);\n\n  const fetchDIDPools = () => {\n    fetch(`http://5e00169a1fb99500141403ae.mockapi.io/api/v1/pools`)\n      .then((response: any) => response.json())\n      .then((response: any) => {\n        console.log(\"pools\", response);\n        setPools(response);\n        setPoolsLoading(false);\n      });\n  };\n\n  const handleChange = (val: any, label: string) => {\n    console.log(\"changing\", val, label);\n    if (label === \"pool\") {\n      setSelectedPools(val);\n      return;\n    }\n    setDID({\n      ...did,\n      [label]: val\n    });\n  };\n\n  const handleUpdateDID = () => {\n    if (did !== null) {\n      closeFn();\n      handleOpenUpdatingModal();\n      const data: Obj = {\n        active: did.active,\n        owned: did.owned,\n        pool:\n          didPools.find((pool: Obj) => pool.uuid === selectedDIDPools) ||\n          did.pool\n      };\n      fetch(\n        `http://5e0015181fb99500141403a4.mockapi.io/mock/v1/dids/${did.uuid}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }\n      )\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Success:\", data);\n          setUpdate({\n            ...update,\n            updating: false,\n            updated: true\n          });\n        })\n        .catch(error => {\n          console.error(\"Error:\", error);\n        });\n    }\n  };\n  const handleDeleteDID = () => {\n    if (did !== null) {\n      setDel({\n        ...del,\n        open: false,\n        deleting: true\n      });\n      fetch(\n        `http://5e0015181fb99500141403a4.mockapi.io/mock/v1/dids/${did.uuid}`,\n        {\n          method: \"DELETE\"\n        }\n      )\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Success:\", data);\n          setDel({\n            ...del,\n            open: false,\n            deleting: false,\n            deleted: true\n          });\n        })\n        .catch(error => {\n          console.error(\"Error:\", error);\n        });\n    }\n  };\n\n  const handleOpenUpdatingModal = () => {\n    setUpdate({\n      ...update,\n      updating: true\n    });\n  };\n\n  const handleCloseUpdatingModal = () => {\n    setUpdate({\n      ...update,\n      updating: false\n    });\n  };\n  const handleCloseDeletingModal = () => {\n    setDel({\n      ...del,\n      deleting: false\n    });\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={materialTheme}>\n        <Dialog\n          open={open}\n          onClose={closeFn}\n          maxWidth=\"sm\"\n          classes={{ paperWidthSm: classes.container }}\n        >\n          <DialogTitle className={classes.title}>\n            <Typography\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                textAlign: \"center\"\n              }}\n            >\n              <span style={{ fontWeight: 600, fontSize: 20 }}></span>\n              <span style={{ fontWeight: 600, fontSize: 20 }}>Edit DID</span>\n              <Close style={{ cursor: \"pointer\" }} onClick={closeFn} />\n            </Typography>\n          </DialogTitle>\n          <DialogContent className={classes.content}>\n            {did === null ? (\n              <Typography className={classes.loading}>\n                <span>Loading DID...</span>\n                <CircularProgress classes={{ svg: classes.svgColor }} />\n              </Typography>\n            ) : (\n              <form style={{ margin: \"15px 0\", overflow: \"hidden\" }}>\n                <FormControl fullWidth>\n                  <InputLabel\n                    htmlFor=\"status\"\n                    classes={{\n                      root: classes.inputLabel,\n                      focused: classes.focused\n                    }}\n                  >\n                    DID pool\n                  </InputLabel>\n                  <Select\n                    className={classes.textField}\n                    data-cy=\"did-pools\"\n                    style={{ margin: \"14px 0 26px 0\", width: \"360px\" }}\n                    inputProps={{\n                      IconComponent: () => <KeyboardArrowDown />\n                    }}\n                    value={selectedDIDPools || \"\"}\n                    onChange={e => handleChange(e.target.value, \"pool\")}\n                  >\n                    {!didPoolsLoading ? (\n                      didPools.map((p: any) => (\n                        <MenuItem key={p.uuid} value={p.uuid}>\n                          {p.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span className={classes.span}>\n                        <CircularProgress size={20} />\n                      </span>\n                    )}\n                  </Select>\n                </FormControl>\n                <FormControl fullWidth>\n                  <InputLabel\n                    htmlFor=\"status\"\n                    classes={{\n                      root: classes.inputLabel,\n                      focused: classes.focused\n                    }}\n                  >\n                    DID status\n                  </InputLabel>\n                  <Input\n                    id=\"status\"\n                    value={did.active ? \"Active\" : \"Inactive\"}\n                    readOnly\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <Switch\n                          checked={did.active}\n                          onChange={e =>\n                            handleChange(e.target.checked, \"active\")\n                          }\n                          color=\"primary\"\n                        />\n                      </InputAdornment>\n                    }\n                  />\n                  <FormHelperText id=\"status\"></FormHelperText>\n                </FormControl>\n                <FormControl fullWidth>\n                  <InputLabel\n                    htmlFor=\"status\"\n                    classes={{\n                      root: classes.inputLabel,\n                      focused: classes.focused\n                    }}\n                  >\n                    Owned\n                  </InputLabel>\n                  <Input\n                    id=\"owned\"\n                    readOnly\n                    value={did.owned ? \"Yes\" : \"No\"}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <Switch\n                          checked={did.owned}\n                          color=\"primary\"\n                          onChange={e =>\n                            handleChange(e.target.checked, \"owned\")\n                          }\n                        />\n                      </InputAdornment>\n                    }\n                  />\n                  <FormHelperText id=\"status\"></FormHelperText>\n                </FormControl>\n                <FormControl fullWidth disabled>\n                  <InputLabel\n                    classes={{\n                      root: classes.inputLabel,\n                      focused: classes.focused\n                    }}\n                    htmlFor=\"number\"\n                    required\n                  >\n                    Number\n                  </InputLabel>\n                  <Input\n                    autoComplete=\"off\"\n                    classes={{\n                      underline: classes.textField\n                    }}\n                    id=\"number\"\n                    value={did.number || \"\"}\n                    required\n                  />\n                  <FormHelperText></FormHelperText>\n                </FormControl>\n                <FormControl fullWidth disabled>\n                  <InputLabel\n                    classes={{\n                      root: classes.inputLabel,\n                      focused: classes.focused\n                    }}\n                    htmlFor=\"timezone\"\n                    required\n                  >\n                    Timezone\n                  </InputLabel>\n                  <Input\n                    autoComplete=\"off\"\n                    classes={{\n                      underline: classes.textField\n                    }}\n                    id=\"timezone\"\n                    value={did.timezone || \"Field Not Set\"}\n                    required\n                  />\n                  <FormHelperText></FormHelperText>\n                </FormControl>\n                <Grid\n                  container\n                  justify=\"space-between\"\n                  spacing={3}\n                  style={{ marginTop: 5 }}\n                >\n                  <Grid item>\n                    <button\n                      type=\"button\"\n                      className={classes.delBtn}\n                      onClick={() => {\n                        closeFn();\n                        setDel({ ...del, open: true });\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </Grid>\n                  <Grid item>\n                    <button\n                      type=\"button\"\n                      className={classes.saveBtn}\n                      onClick={() => handleUpdateDID()}\n                    >\n                      SAVE CHANGES\n                    </button>\n                  </Grid>\n                </Grid>\n              </form>\n            )}\n          </DialogContent>\n        </Dialog>\n        {did !== null && (\n          <>\n            <LoadingModal\n              open={update.updating}\n              text={\"Updating DID...\"}\n              cancelFn={() => handleCloseUpdatingModal()}\n            />\n            <LoadingModal\n              open={del.deleting}\n              text={\"Deleting DID...\"}\n              cancelFn={() => handleCloseDeletingModal()}\n            />\n            <SuccessModal\n              open={update.updated}\n              text={\"DID was updated\"}\n              btnText=\"OK\"\n              closeFn={() => {\n                fetchDIDs();\n                setUpdate({\n                  ...update,\n                  updated: false\n                });\n              }}\n              btnFn={() => {\n                fetchDIDs();\n                setUpdate({\n                  ...update,\n                  updated: false\n                });\n              }}\n            />\n            <SuccessModal\n              open={del.deleted}\n              text={\"DID was deleted\"}\n              btnText=\"OK\"\n              closeFn={() => {\n                fetchDIDs();\n                setDel({\n                  ...del,\n                  deleted: false\n                });\n              }}\n              btnFn={() => {\n                fetchDIDs();\n                setDel({\n                  ...del,\n                  deleted: false\n                });\n              }}\n            />\n            <DeleteModal\n              open={del.open}\n              name={did.number}\n              closeFn={() => setDel({ ...del, open: false })}\n              delFn={() => handleDeleteDID()}\n            />\n          </>\n        )}\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default EditDIDModal;\n"]},"metadata":{},"sourceType":"module"}