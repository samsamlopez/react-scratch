{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/upload/index.tsx\";\nimport React, { useState } from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport { Input, Divider, Typography } from '@material-ui/core';\nimport { mdiUpload } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport styled from 'styled-components';\nimport { CustomText } from '../custom-text';\nconst LabelText = styled(Typography)`\n  font-size: 14px !important;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #999999;\n`;\nconst HelperText = styled(Typography)`\n  font-size: 12px !important;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #999999;\n  margin-top: 8px !important;\n`;\nconst theme = createMuiTheme({\n  shape: {\n    borderRadius: 0\n  },\n  palette: {\n    primary: {\n      main: '#1194f6'\n    }\n  },\n  overrides: {\n    MuiListItem: {\n      button: {\n        '&:hover': {\n          backgroundColor: '#ffffff'\n        }\n      },\n      root: {\n        '&$selected': {\n          backgroundColor: '#ffffff',\n          '&&:hover': {\n            backgroundColor: '#ffffff'\n          },\n          '&&:active:after': {\n            backgroundColor: '#ffffff'\n          }\n        }\n      }\n    },\n    MuiSwitch: {\n      track: {\n        backgroundColor: '#f1f1f1 !important'\n      }\n    }\n  }\n});\nconst useStyles = makeStyles({\n  hidden: {\n    display: 'none !important'\n  }\n});\n\nconst Upload = ({\n  accept,\n  getAudio,\n  helperText,\n  labelText,\n  limit,\n  style\n}) => {\n  const _useState = useState('No file chosen'),\n        _useState2 = _slicedToArray(_useState, 2),\n        filename = _useState2[0],\n        setFilename = _useState2[1];\n\n  const upload = e => {\n    try {\n      let extracted = e.target.files[0].name;\n      let name = extracted.length > limit ? extracted.substring(0, limit) : extracted;\n      name = extracted.length > limit ? `${name}...${extracted.split('.')[extracted.split('.').length - 1]}` : extracted;\n      setFilename(name);\n      getAudio && getAudio(e.target.files[0]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderUploadComponent = () => {\n    return React.createElement(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(LabelText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, labelText), React.createElement(Input, {\n      id: \"files\",\n      inputProps: {\n        accept: accept\n      },\n      onChange: e => upload(e),\n      type: \"file\",\n      className: classes.hidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        margin: '5px 0 7px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        cursor: 'pointer',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        textOverflow: 'ellipsis'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(CustomText, {\n      size: \"16px\",\n      color: \"tableDataColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, filename), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-end'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiUpload,\n      title: \"Copy\",\n      size: 0.8,\n      rotate: 360,\n      style: {\n        marginBottom: '3px'\n      },\n      color: \"#1194f6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '3px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(CustomText, {\n      size: \"16px\",\n      color: \"activeInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Choose file\"))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(HelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, helperText));\n  };\n\n  const classes = useStyles({});\n  return React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, renderUploadComponent());\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/upload/index.tsx"],"names":["React","useState","createMuiTheme","MuiThemeProvider","makeStyles","Input","Divider","Typography","mdiUpload","Icon","styled","CustomText","LabelText","HelperText","theme","shape","borderRadius","palette","primary","main","overrides","MuiListItem","button","backgroundColor","root","MuiSwitch","track","useStyles","hidden","display","Upload","accept","getAudio","helperText","labelText","limit","style","filename","setFilename","upload","e","extracted","target","files","name","length","substring","split","console","log","renderUploadComponent","classes","margin","flexDirection","cursor","alignItems","justifyContent","textOverflow","marginBottom","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\nimport { makeStyles } from '@material-ui/styles'\nimport { Input, Divider, Typography } from '@material-ui/core'\nimport { mdiUpload } from '@mdi/js'\nimport Icon from '@mdi/react'\nimport styled from 'styled-components'\n\nimport { CustomText } from '../custom-text'\n\nconst LabelText = styled(Typography)`\n  font-size: 14px !important;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #999999;\n`\n\nconst HelperText = styled(Typography)`\n  font-size: 12px !important;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #999999;\n  margin-top: 8px !important;\n`\n\nconst theme = createMuiTheme({\n  shape: {\n    borderRadius: 0\n  },\n  palette: {\n    primary: { main: '#1194f6' }\n  },\n  overrides: {\n    MuiListItem: {\n      button: {\n        '&:hover': {\n          backgroundColor: '#ffffff'\n        }\n      },\n      root: {\n        '&$selected': {\n          backgroundColor: '#ffffff',\n          '&&:hover': {\n            backgroundColor: '#ffffff'\n          },\n          '&&:active:after': {\n            backgroundColor: '#ffffff'\n          }\n        }\n      }\n    },\n    MuiSwitch: {\n      track: {\n        backgroundColor: '#f1f1f1 !important'\n      }\n    }\n  }\n})\n\nconst useStyles = makeStyles({\n  hidden: {\n    display: 'none !important'\n  }\n})\n\ninterface UploadProps {\n  accept: string\n  getAudio: Function\n  helperText?: string\n  labelText?: string\n  limit?: number | any\n  style?: object\n}\n\nconst Upload: React.SFC<UploadProps> = ({\n  accept,\n  getAudio,\n  helperText,\n  labelText,\n  limit,\n  style\n}) => {\n  const [filename, setFilename] = useState('No file chosen')\n\n  const upload: Function = (e: any) => {\n    try {\n      let extracted = e.target.files[0].name\n      let name =\n        extracted.length > limit ? extracted.substring(0, limit) : extracted\n      name =\n        extracted.length > limit\n          ? `${name}...${extracted.split('.')[extracted.split('.').length - 1]}`\n          : extracted\n\n      setFilename(name)\n      getAudio && getAudio(e.target.files[0])\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const renderUploadComponent: Function = () => {\n    return (\n      <div style={style}>\n        <LabelText>{labelText}</LabelText>\n        <Input\n          id=\"files\"\n          inputProps={{\n            accept: accept\n          }}\n          onChange={e => upload(e)}\n          type=\"file\"\n          className={classes.hidden}\n        />\n        <label\n          style={{\n            margin: '5px 0 7px 0',\n            display: 'flex',\n            flexDirection: 'row',\n            cursor: 'pointer',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            textOverflow: 'ellipsis'\n          }}\n        >\n          <CustomText size=\"16px\" color=\"tableDataColor\">\n            {filename}\n          </CustomText>\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'flex-end'\n            }}\n          >\n            <Icon\n              path={mdiUpload}\n              title=\"Copy\"\n              size={0.8}\n              rotate={360}\n              style={{\n                marginBottom: '3px'\n              }}\n              color=\"#1194f6\"\n            />\n            <div style={{ width: '3px' }} />\n            <CustomText size=\"16px\" color=\"activeInput\">\n              Choose file\n            </CustomText>\n          </div>\n        </label>\n        <Divider />\n        <HelperText>{helperText}</HelperText>\n      </div>\n    )\n  }\n  const classes: any = useStyles({})\n  return (\n    <MuiThemeProvider theme={theme}>{renderUploadComponent()}</MuiThemeProvider>\n  )\n}\n\nexport default Upload\n"]},"metadata":{},"sourceType":"module"}