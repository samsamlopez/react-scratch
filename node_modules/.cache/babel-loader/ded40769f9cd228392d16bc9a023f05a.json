{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/table-cells/active-cell/index.tsx\";\nimport * as React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { styleDetails, activeCell as styles } from \"../styles\";\n\nconst Component = ({\n  classes,\n  className,\n  children,\n  native,\n  style\n}) => {\n  const styled = children === true ? \"active\" : children === false ? \"inactive\" : children.toLowerCase().includes(\"no\") ? \"No\" : \"Yes\";\n  return React.createElement(React.Fragment, null, native ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"active\",\n    style: styleDetails.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, styled)) : React.createElement(TableCell, {\n    className: `${className} ${classes.root}`,\n    style: _objectSpread({}, style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: styled === \"No\" ? \"inactive\" : styled === \"Yes\" ? \"active\" : styled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, styled)));\n};\n\nconst ActiveCell = withStyles(styles)(Component);\nexport { ActiveCell };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/table-cells/active-cell/index.tsx"],"names":["React","withStyles","TableCell","styleDetails","activeCell","styles","Component","classes","className","children","native","style","styled","toLowerCase","includes","span","root","ActiveCell"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,YAAT,EAAuBC,UAAU,IAAIC,MAArC,QAAmD,WAAnD;;AASA,MAAMC,SAAqC,GAAG,CAAC;AAC7CC,EAAAA,OAD6C;AAE7CC,EAAAA,SAF6C;AAG7CC,EAAAA,QAH6C;AAI7CC,EAAAA,MAJ6C;AAK7CC,EAAAA;AAL6C,CAAD,KAMxC;AACJ,QAAMC,MAAM,GACVH,QAAQ,KAAK,IAAb,GACI,QADJ,GAEIA,QAAQ,KAAK,KAAb,GACA,UADA,GAEAA,QAAQ,CAACI,WAAT,GAAuBC,QAAvB,CAAgC,IAAhC,IACA,IADA,GAEA,KAPN;AAQA,SACE,0CACGJ,MAAM,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAEP,YAAY,CAACY,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MADH,CADF,CADK,GAOL,oBAAC,SAAD;AACE,IAAA,SAAS,EAAG,GAAEJ,SAAU,IAAGD,OAAO,CAACS,IAAK,EAD1C;AAEE,IAAA,KAAK,oBAAOL,KAAP,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,SAAS,EACPC,MAAM,KAAK,IAAX,GACI,UADJ,GAEIA,MAAM,KAAK,KAAX,GACA,QADA,GAEAA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGA,MATH,CAJF,CARJ,CADF;AA4BD,CA3CD;;AA6CA,MAAMK,UAAU,GAAGhB,UAAU,CAACI,MAAD,CAAV,CAAmBC,SAAnB,CAAnB;AAEA,SAASW,UAAT","sourcesContent":["import * as React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { styleDetails, activeCell as styles } from \"../styles\";\ninterface ActiveCellProps {\n  children: any;\n  className?: string;\n  classes: any;\n  native?: any;\n  style?: object;\n}\n\nconst Component: React.SFC<ActiveCellProps> = ({\n  classes,\n  className,\n  children,\n  native,\n  style\n}) => {\n  const styled =\n    children === true\n      ? \"active\"\n      : children === false\n      ? \"inactive\"\n      : children.toLowerCase().includes(\"no\")\n      ? \"No\"\n      : \"Yes\";\n  return (\n    <>\n      {native ? (\n        <span>\n          <span className=\"active\" style={styleDetails.span}>\n            {styled}\n          </span>\n        </span>\n      ) : (\n        <TableCell\n          className={`${className} ${classes.root}`}\n          style={{ ...style }}\n        >\n          <span\n            className={\n              styled === \"No\"\n                ? \"inactive\"\n                : styled === \"Yes\"\n                ? \"active\"\n                : styled\n            }\n          >\n            {styled}\n          </span>\n        </TableCell>\n      )}\n    </>\n  );\n};\n\nconst ActiveCell = withStyles(styles)(Component);\n\nexport { ActiveCell };\n"]},"metadata":{},"sourceType":"module"}