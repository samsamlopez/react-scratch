{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/manage-realms/settings/realmSettings.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Paper, TextField, InputAdornment, Typography, Tabs, Tab, Box, Tooltip, Switch, CircularProgress } from \"@material-ui/core\";\nimport { TableLoader } from \"common-components\";\nimport { GroupOutlined, Delete as DeleteIcon, FileCopyOutlined as CopyIcon } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme, withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport Campaigns from \"./campaigns\";\nconst useStyles = makeStyles(theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  MuiSwitch: {\n    MuiSwitchTrack: {\n      backgroundColor: \"transparent\"\n    }\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n    background: \"white\",\n    color: \"#444851\"\n  },\n  container: {},\n  text: {\n    fontFamily: \"Roboto, Helvetica, sans-serif\",\n    fontSize: \"14px\",\n    fontWeight: 900,\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"normal\",\n    textAlign: \"center\",\n    color: \"#7b8a96\"\n  },\n  paperCont: {\n    height: \"auto\",\n    minHeight: 530,\n    padding: \"26px 30px\",\n    color: \"#444851\"\n  },\n  title: {\n    fontWeight: \"900\",\n    fontSize: \"18px\"\n  },\n  indicator: {\n    backgroundColor: \"#F89523\",\n    height: \"4px\"\n  }\n}));\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\nconst SelectField = styled(TextField)`\n  .MuiInputLabel-root {\n    font-weight: bold;\n    font-size: 17px !important;\n    color: #999999 !important;\n  }\n  .MuiFormLabel-root.Mui-focused {\n    color: #1194f6 !important;\n    font-size: 17px !important;\n  }\n  .Mui-error {\n    color: #f44336 !important;\n  }\n  .MuiInput-underline {\n    &::before {\n      border-bottom: solid 1px rgba(238, 238, 238, 0.99);\n    }\n    &::after {\n      border-bottom: 2px solid #1194f6;\n    }\n  }\n`;\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 35px;\n  width: 510px;\n  margin: 0 auto;\n`;\nconst DisBtn = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #eeeeee;\n  outline: none;\n  border: none;\n  margin: 0 auto;\n`;\nconst DisText = styled.strong`\n  font-size: 14px;\n  color: #bbbbbb;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewUserBtn = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #b6d36b;\n  cursor: pointer;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  margin: 0 auto;\n`;\nconst NewUserText = styled.strong`\n  font-size: 14px;\n  color: #ffffff;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst SaveLoader = styled(CircularProgress)`\n  font-size: 20;\n  opacity: 0.9;\n  margin-top: 2px;\n  color: #959a95;\n`;\n\nfunction TabPanel(props) {\n  const children = props.children,\n        value = props.value,\n        index = props.index,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nexport default function RealmSettings(props) {\n  const realm = props.realm,\n        active = props.active,\n        handleActive = props.handleActive,\n        handleName = props.handleName,\n        edit = props.edit,\n        updateRealm = props.updateRealm,\n        saveLoader = props.saveLoader,\n        campaigns = props.campaigns,\n        removeCampaign = props.removeCampaign,\n        paginateList = props.paginateList,\n        addCampaign = props.addCampaign,\n        paginateFn = props.paginateFn,\n        campaignsOrig = props.campaignsOrig;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tab = _useState4[0],\n        setTab = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        copy = _useState6[0],\n        setCopy = _useState6[1];\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  const portalTheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#1194f6\"\n      },\n      secondary: {\n        main: \"#1194f6\"\n      }\n    }\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: portalTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paperCont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, loading ? React.createElement(TableLoader, {\n    headerText: \"Management\",\n    message: \"Loading campaigns...\",\n    Icon: GroupOutlined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Realm Settings\"), React.createElement(Tabs, {\n    value: tab,\n    classes: {\n      indicator: classes.indicator\n    },\n    fullwidth: \"true\",\n    onChange: handleChange,\n    style: {\n      borderBottom: \"solid 1px #F1F1F1\",\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(Tab, Object.assign({\n    label: \"General\",\n    className: classes.text\n  }, a11yProps(0), {\n    style: {\n      color: \"#444851\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    label: \"Associated Campaigns\",\n    className: classes.text\n  }, a11yProps(1), {\n    style: {\n      color: \"#444851\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  })))), React.createElement(TabPanel, {\n    value: tab,\n    index: 0,\n    dir: theme.direction,\n    style: {\n      padding: \"35px 30px\",\n      minHeight: 626\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(SelectField, {\n    onChange: e => handleName(e.target.value),\n    className: classes.margin,\n    id: \"custom-css-standard-input\",\n    defaultValue: realm.name,\n    value: realm.name,\n    label: \"Realm name\",\n    required: true,\n    InputProps: {\n      classes: {\n        underline: classes.inputField,\n        root: classes.inputField\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }), React.createElement(SelectField, {\n    value: active ? \"Active\" : \"Inactive\",\n    label: \"Campaign Status\",\n    InputProps: {\n      readOnly: true,\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        color: \"primary\",\n        checked: active,\n        onChange: handleActive,\n        inputProps: {\n          \"aria-label\": \"secondary checkbox\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }), React.createElement(SelectField, {\n    disabled: true,\n    value: realm.uuid,\n    label: \"UUID\",\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(CopyToClipboard, {\n        text: realm.uuid,\n        onCopy: () => setCopy(true),\n        onPointerLeave: () => setCopy(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, copy ? React.createElement(LightTooltip, {\n        title: \"UUID Copied!\",\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(CopyIcon, {\n        fontSize: \"small\",\n        style: {\n          float: \"right\",\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      })) : React.createElement(LightTooltip, {\n        title: \"Copy UUID\",\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(CopyIcon, {\n        fontSize: \"small\",\n        style: {\n          float: \"right\",\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }))))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }), !edit ? React.createElement(DisBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, React.createElement(DisText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, \"save changes\")) : React.createElement(NewUserBtn, {\n    onClick: updateRealm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, React.createElement(NewUserText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, saveLoader ? React.createElement(SaveLoader, {\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }) : \"save changes\")))), React.createElement(TabPanel, {\n    value: tab,\n    index: 1,\n    dir: theme.direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/manage-realms/settings/realmSettings.js"],"names":["React","useState","makeStyles","useTheme","Paper","TextField","InputAdornment","Typography","Tabs","Tab","Box","Tooltip","Switch","CircularProgress","TableLoader","GroupOutlined","Delete","DeleteIcon","FileCopyOutlined","CopyIcon","PropTypes","CopyToClipboard","ThemeProvider","createMuiTheme","withStyles","styled","Campaigns","useStyles","theme","appBarSpacer","mixins","toolbar","MuiSwitch","MuiSwitchTrack","backgroundColor","content","flexGrow","height","overflow","background","color","container","text","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","lineHeight","letterSpacing","textAlign","paperCont","minHeight","padding","title","indicator","LightTooltip","tooltip","palette","common","white","boxShadow","shadows","SelectField","Grid","div","DisBtn","button","DisText","strong","NewUserBtn","NewUserText","SaveLoader","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","RealmSettings","realm","active","handleActive","handleName","edit","updateRealm","saveLoader","campaigns","removeCampaign","paginateList","addCampaign","paginateFn","campaignsOrig","loading","setLoading","tab","setTab","copy","setCopy","classes","handleChange","event","newValue","portalTheme","primary","main","secondary","borderBottom","paddingTop","direction","e","target","margin","name","underline","inputField","root","readOnly","endAdornment","uuid","float","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  TextField,\n  InputAdornment,\n  Typography,\n  Tabs,\n  Tab,\n  Box,\n  Tooltip,\n  Switch,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { TableLoader } from \"common-components\";\nimport {\n  GroupOutlined,\n  Delete as DeleteIcon,\n  FileCopyOutlined as CopyIcon\n} from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme, withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport Campaigns from \"./campaigns\";\n\nconst useStyles = makeStyles(theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  MuiSwitch: {\n    MuiSwitchTrack: {\n      backgroundColor: \"transparent\"\n    }\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n    background: \"white\",\n    color: \"#444851\"\n  },\n  container: {},\n  text: {\n    fontFamily: \"Roboto, Helvetica, sans-serif\",\n    fontSize: \"14px\",\n    fontWeight: 900,\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"normal\",\n    textAlign: \"center\",\n    color: \"#7b8a96\"\n  },\n  paperCont: {\n    height: \"auto\",\n    minHeight: 530,\n    padding: \"26px 30px\",\n    color: \"#444851\"\n  },\n  title: {\n    fontWeight: \"900\",\n    fontSize: \"18px\"\n  },\n  indicator: {\n    backgroundColor: \"#F89523\",\n    height: \"4px\"\n  }\n}));\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\n\nconst SelectField = styled(TextField)`\n  .MuiInputLabel-root {\n    font-weight: bold;\n    font-size: 17px !important;\n    color: #999999 !important;\n  }\n  .MuiFormLabel-root.Mui-focused {\n    color: #1194f6 !important;\n    font-size: 17px !important;\n  }\n  .Mui-error {\n    color: #f44336 !important;\n  }\n  .MuiInput-underline {\n    &::before {\n      border-bottom: solid 1px rgba(238, 238, 238, 0.99);\n    }\n    &::after {\n      border-bottom: 2px solid #1194f6;\n    }\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 35px;\n  width: 510px;\n  margin: 0 auto;\n`;\n\nconst DisBtn = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #eeeeee;\n  outline: none;\n  border: none;\n  margin: 0 auto;\n`;\n\nconst DisText = styled.strong`\n  font-size: 14px;\n  color: #bbbbbb;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NewUserBtn = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #b6d36b;\n  cursor: pointer;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  margin: 0 auto;\n`;\nconst NewUserText = styled.strong`\n  font-size: 14px;\n  color: #ffffff;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SaveLoader = styled(CircularProgress)`\n  font-size: 20;\n  opacity: 0.9;\n  margin-top: 2px;\n  color: #959a95;\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      <Box>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nexport default function RealmSettings(props) {\n  const {\n    realm,\n    active,\n    handleActive,\n    handleName,\n    edit,\n    updateRealm,\n    saveLoader,\n    campaigns,\n    removeCampaign,\n    paginateList,\n    addCampaign,\n    paginateFn,\n    campaignsOrig\n  } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useState(0);\n  const [copy, setCopy] = useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  const portalTheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#1194f6\"\n      },\n      secondary: {\n        main: \"#1194f6\"\n      }\n    }\n  });\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={portalTheme}>\n        <Paper className={classes.paperCont}>\n          {loading ? (\n            <TableLoader\n              headerText=\"Management\"\n              message=\"Loading campaigns...\"\n              Icon={GroupOutlined}\n            />\n          ) : (\n              <React.Fragment>\n                <div>\n                  <Typography className={classes.title}>\n                    Realm Settings\n                </Typography>\n                  <Tabs\n                    value={tab}\n                    classes={{\n                      indicator: classes.indicator\n                    }}\n                    fullwidth=\"true\"\n                    onChange={handleChange}\n                    style={{\n                      borderBottom: \"solid 1px #F1F1F1\",\n                      paddingTop: 10\n                    }}\n                  >\n                    <Tab\n                      label=\"General\"\n                      className={classes.text}\n                      {...a11yProps(0)}\n                      style={{ color: \"#444851\" }}\n                    />\n                    <Tab\n                      label=\"Associated Campaigns\"\n                      className={classes.text}\n                      {...a11yProps(1)}\n                      style={{ color: \"#444851\" }}\n                    />\n                  </Tabs>\n                </div>\n                <TabPanel\n                  value={tab}\n                  index={0}\n                  dir={theme.direction}\n                  style={{ padding: \"35px 30px\", minHeight: 626 }}\n                >\n                  <Grid>\n                    <SelectField\n                      onChange={e => handleName(e.target.value)}\n                      className={classes.margin}\n                      id=\"custom-css-standard-input\"\n                      defaultValue={realm.name}\n                      value={realm.name}\n                      label=\"Realm name\"\n                      required\n                      InputProps={{\n                        classes: {\n                          underline: classes.inputField,\n                          root: classes.inputField\n                        }\n                      }}\n                    />\n\n                    <SelectField\n                      value={active ? \"Active\" : \"Inactive\"}\n                      label=\"Campaign Status\"\n                      InputProps={{\n                        readOnly: true,\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Switch\n                              color=\"primary\"\n                              checked={active}\n                              onChange={handleActive}\n                              inputProps={{\n                                \"aria-label\": \"secondary checkbox\"\n                              }}\n                            />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n\n                    <SelectField\n                      disabled\n                      value={realm.uuid}\n                      label=\"UUID\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <CopyToClipboard\n                              text={realm.uuid}\n                              onCopy={() => setCopy(true)}\n                              onPointerLeave={() => setCopy(false)}\n                            >\n                              {copy ? (\n                                <LightTooltip\n                                  title=\"UUID Copied!\"\n                                  placement=\"top\"\n                                >\n                                  <CopyIcon\n                                    fontSize=\"small\"\n                                    style={{\n                                      float: \"right\",\n                                      cursor: \"pointer\"\n                                    }}\n                                  />\n                                </LightTooltip>\n                              ) : (\n                                  <LightTooltip title=\"Copy UUID\" placement=\"top\">\n                                    <CopyIcon\n                                      fontSize=\"small\"\n                                      style={{\n                                        float: \"right\",\n                                        cursor: \"pointer\"\n                                      }}\n                                    />\n                                  </LightTooltip>\n                                )}\n                            </CopyToClipboard>\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n\n                    {!edit ? (\n                      <DisBtn>\n                        <DisText>save changes</DisText>\n                      </DisBtn>\n                    ) : (\n                        <NewUserBtn onClick={updateRealm}>\n                          <NewUserText>\n                            {saveLoader ? <SaveLoader size={20} /> : \"save changes\"}\n                          </NewUserText>\n                        </NewUserBtn>\n                      )}\n                  </Grid>\n                </TabPanel>\n                <TabPanel value={tab} index={1} dir={theme.direction}>\n                  {/* <Campaigns\n                    data={campaigns}\n                    removeCampaign={removeCampaign}\n                    realm={realm}\n                    paginateList={paginateList}\n                    paginateFn={paginateFn}\n                    addCampaign={addCampaign}\n                    campaignsOrig={campaignsOrig}\n                  /> */}\n                </TabPanel>\n              </React.Fragment>\n            )}\n        </Paper>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}