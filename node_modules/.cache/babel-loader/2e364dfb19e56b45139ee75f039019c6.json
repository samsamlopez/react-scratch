{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/header-link/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Popover, MenuList, MenuItem } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst HeaderLink = ({\n  menu,\n  pathSensitive,\n  style,\n  title\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        popper = _useState2[0],\n        setPopper = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        anchorRef = _useState4[0],\n        setAnchorRef = _useState4[1];\n\n  useEffect(() => {\n    if (pathSensitive) {\n      checkLinks();\n    }\n  }, []);\n\n  const checkLinks = () => {\n    if (typeof window != \"undefined\") {\n      menu.map(item => {\n        if (window.location.pathname == item.path) {}\n      });\n    }\n  };\n\n  const handlePopper = event => {\n    setPopper(true);\n    setAnchorRef(event);\n  };\n\n  const handlePopperClose = () => {\n    setPopper(false);\n  };\n\n  return React.createElement(\"div\", {\n    style: _objectSpread({}, style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      fontSize: \"24px\",\n      textTransform: \"none\",\n      textDecoration: \"underline\",\n      color: \"#444851\"\n    },\n    onClick: event => {\n      handlePopper(event.currentTarget);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, title, React.createElement(ExpandMoreIcon, {\n    style: {\n      marginLeft: \"3px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Popover, {\n    open: popper,\n    anchorEl: anchorRef,\n    onClose: () => {\n      handlePopperClose();\n    },\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    PaperProps: {\n      square: true,\n      style: {\n        borderRadius: 1,\n        marginTop: -3\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(MenuList, {\n    style: {\n      width: \"240px\",\n      color: \" #777777\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, menu.map((item, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: item.path,\n    style: {\n      textDecoration: \"none\",\n      color: \" #777777\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    style: {\n      fontSize: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, item.title, \" \")))))));\n};\n\nHeaderLink.defaultProps = {\n  title: \"Test Header\",\n  menu: [{\n    title: \"Test1\",\n    path: \"/manage/1\"\n  }, {\n    title: \"Test2\",\n    path: \"/manage/2\"\n  }, {\n    title: \"Test3\",\n    path: \"/manage/3\"\n  }, {\n    title: \"Test4\",\n    path: \"/manage/4\"\n  }, {\n    title: \"Test5\",\n    path: \"/manage/5\"\n  }, {\n    title: \"Test6\",\n    path: \"/manage/6\"\n  }]\n};\nexport { HeaderLink };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/header-link/index.tsx"],"names":["React","useState","useEffect","Button","Popover","MenuList","MenuItem","Link","ExpandMoreIcon","HeaderLink","menu","pathSensitive","style","title","popper","setPopper","anchorRef","setAnchorRef","checkLinks","window","map","item","location","pathname","path","handlePopper","event","handlePopperClose","fontSize","textTransform","textDecoration","color","currentTarget","marginLeft","vertical","horizontal","square","borderRadius","marginTop","width","i","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Popover, MenuList, MenuItem } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\ninterface HeaderLinkProps {\n  menu: Array<{ title: string; path: string }>;\n  pathSensitive: boolean;\n  style?: Obj;\n  title: string;\n}\ninterface Obj {\n  [index: string]: any;\n}\n\nconst HeaderLink: React.FC<HeaderLinkProps> = ({\n  menu,\n  pathSensitive,\n  style,\n  title\n}) => {\n  const [popper, setPopper] = useState<boolean>(false);\n  const [anchorRef, setAnchorRef] = useState<any>(null);\n\n  useEffect(() => {\n    if (pathSensitive) {\n      checkLinks();\n    }\n  }, []);\n\n  const checkLinks = () => {\n    if (typeof window != \"undefined\") {\n      menu.map(item => {\n        if (window.location.pathname == item.path) {\n        }\n      });\n    }\n  };\n\n  const handlePopper = (event: any) => {\n    setPopper(true);\n    setAnchorRef(event);\n  };\n  const handlePopperClose = () => {\n    setPopper(false);\n  };\n\n  return (\n    <div\n      style={{\n        ...style\n      }}\n    >\n      <Button\n        style={{\n          fontSize: \"24px\",\n          textTransform: \"none\",\n          textDecoration: \"underline\",\n          color: \"#444851\"\n        }}\n        onClick={event => {\n          handlePopper(event.currentTarget);\n        }}\n      >\n        {title}\n\n        <ExpandMoreIcon style={{ marginLeft: \"3px\" }}></ExpandMoreIcon>\n      </Button>\n\n      <Popover\n        open={popper}\n        anchorEl={anchorRef}\n        onClose={() => {\n          handlePopperClose();\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        PaperProps={{\n          square: true,\n          style: {\n            borderRadius: 1,\n            marginTop: -3\n          }\n        }}\n      >\n        <MenuList style={{ width: \"240px\", color: \" #777777\" }}>\n          {menu.map((item, i) => (\n            <div key={i}>\n              <Link\n                to={item.path}\n                style={{\n                  textDecoration: \"none\",\n                  color: \" #777777\"\n                }}\n              >\n                <MenuItem\n                  style={{\n                    fontSize: 15\n                  }}\n                >\n                  {item.title}{\" \"}\n                </MenuItem>\n              </Link>\n            </div>\n          ))}\n        </MenuList>\n      </Popover>\n    </div>\n  );\n};\n\nHeaderLink.defaultProps = {\n  title: \"Test Header\",\n  menu: [\n    {\n      title: \"Test1\",\n      path: \"/manage/1\"\n    },\n    {\n      title: \"Test2\",\n      path: \"/manage/2\"\n    },\n    {\n      title: \"Test3\",\n      path: \"/manage/3\"\n    },\n    {\n      title: \"Test4\",\n      path: \"/manage/4\"\n    },\n    {\n      title: \"Test5\",\n      path: \"/manage/5\"\n    },\n    {\n      title: \"Test6\",\n      path: \"/manage/6\"\n    }\n  ]\n} as Partial<HeaderLinkProps>;\n\nexport { HeaderLink };\n"]},"metadata":{},"sourceType":"module"}