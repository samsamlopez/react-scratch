{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/did/components/DIDTable/DIDTable.tsx\";\nimport React, { useState } from \"react\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport { AsyncTable, TruthCell, ActiveCell, EditButton } from \"../../../../../common-components\";\nimport EditDIDModal from \"../EditDIDModal/EditDIDModal\";\n\nconst DIDTable = ({\n  headers,\n  didData,\n  fetchDIDs\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        editData = _useState2[0],\n        setEditData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(AsyncTable, {\n    headers: headers,\n    tableData: didData,\n    render: (dids, {\n      row,\n      userCell\n    }) => dids.map(did => React.createElement(TableRow, {\n      className: row,\n      key: did.uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      style: {\n        textDecoration: \"underline\"\n      },\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, did.number || \"Field not set\"), React.createElement(TableCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, did.timezone || \"Field not set\")), React.createElement(TruthCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, did.owned), React.createElement(TableCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, did.pool ? did.pool.name : \"Field not set\")), React.createElement(TableCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, did.cname_string ? did.cname_string : \"Field not set\")), React.createElement(TruthCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, did.cname_valid), React.createElement(ActiveCell, {\n      className: userCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, did.active), React.createElement(TableCell, {\n      className: userCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(EditButton, {\n      text: \"Edit\",\n      onClickFunc: () => {\n        setEditData(did);\n        handleOpenModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(EditDIDModal, {\n    open: open,\n    closeFn: handleCloseModal,\n    editData: editData,\n    fetchDIDs: fetchDIDs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nexport default DIDTable;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/did/components/DIDTable/DIDTable.tsx"],"names":["React","useState","TableRow","TableCell","AsyncTable","TruthCell","ActiveCell","EditButton","EditDIDModal","DIDTable","headers","didData","fetchDIDs","editData","setEditData","open","setOpen","handleCloseModal","handleOpenModal","dids","row","userCell","map","did","uuid","textDecoration","number","timezone","owned","pool","name","cname_string","cname_valid","active"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport {\n  AsyncTable,\n  TruthCell,\n  ActiveCell,\n  EditButton\n} from \"../../../../../common-components\";\nimport EditDIDModal from \"../EditDIDModal/EditDIDModal\";\n\ninterface Obj {\n  [index: string]: any;\n}\n\nconst DIDTable = ({ headers, didData, fetchDIDs }: any) => {\n  const [editData, setEditData] = useState<Obj | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <AsyncTable\n        headers={headers}\n        tableData={didData}\n        render={(dids: Obj, { row, userCell }: Obj) =>\n          dids.map((did: Obj) => (\n            <TableRow className={row} key={did.uuid}>\n              <TableCell\n                style={{ textDecoration: \"underline\" }}\n                className={userCell}\n              >\n                {did.number || \"Field not set\"}\n              </TableCell>\n              <TableCell className={userCell}>\n                <p>{did.timezone || \"Field not set\"}</p>\n              </TableCell>\n              <TruthCell className={userCell}>{did.owned}</TruthCell>\n              <TableCell className={userCell}>\n                <p>{did.pool ? did.pool.name : \"Field not set\"}</p>\n              </TableCell>\n              <TableCell className={userCell}>\n                <p>{did.cname_string ? did.cname_string : \"Field not set\"}</p>\n              </TableCell>\n              <TruthCell className={userCell}>{did.cname_valid}</TruthCell>\n              <ActiveCell className={userCell}>{did.active}</ActiveCell>\n              <TableCell className={userCell} align=\"right\">\n                <EditButton\n                  text=\"Edit\"\n                  onClickFunc={() => {\n                    setEditData(did);\n                    handleOpenModal();\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n      <EditDIDModal\n        open={open}\n        closeFn={handleCloseModal}\n        editData={editData}\n        fetchDIDs={fetchDIDs}\n      />\n    </div>\n  );\n};\n\nexport default DIDTable;\n"]},"metadata":{},"sourceType":"module"}