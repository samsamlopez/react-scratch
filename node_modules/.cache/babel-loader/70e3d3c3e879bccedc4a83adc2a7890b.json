{"ast":null,"code":"import _objectSpread from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/buttons/custom-button/index.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n/**\n * ==============================================================================\n * <CustomButton />\n * ------------------------------------------------------------------------------\n * @param {boolean}  disabled        Button Disabled (true/false)\n * @param {function} handleClick         OnClick Event\n * @param {any}      children        Children of the button\n * @param {string}   type            Type of button\n * @param {object}   style           Style object\n * @param {object}   textStyle       Text style object\n * @return {ReactElement}\n * ==============================================================================\n */\n\nconst defaultProps = {\n  children: null,\n  handleClick: () => console.log(\"Custom Button Clicked!\"),\n  type: \"button\",\n  style: {},\n  textStyle: {}\n};\n\nconst CustomButton = ({\n  disabled,\n  children,\n  type,\n  handleClick,\n  style,\n  textStyle\n}) => {\n  const renderDisabled = () => {\n    return React.createElement(React.Fragment, null, React.createElement(DisSave, {\n      disabled: true,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(DisText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, children)));\n  };\n\n  const renderSave = () => {\n    return React.createElement(React.Fragment, null, React.createElement(Save, {\n      type: type ? type : \"button\",\n      onClick: handleClick,\n      style: _objectSpread({\n        textTransform: \"none\"\n      }, style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(SaveText, {\n      style: _objectSpread({\n        textTransform: \"none\"\n      }, textStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, children)));\n  };\n\n  return disabled ? renderDisabled() : renderSave();\n};\n\nCustomButton.defaultProps = defaultProps;\nconst Save = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #b6d36b;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\nconst SaveText = styled.strong`\n  font-size: 14px;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n`;\nconst DisSave = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #eeeeee;\n  border: none;\n  outline: none;\n`;\nconst DisText = styled.strong`\n  font-size: 14px;\n  color: #bbbbbb;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport default CustomButton;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/buttons/custom-button/index.tsx"],"names":["React","styled","defaultProps","children","handleClick","console","log","type","style","textStyle","CustomButton","disabled","renderDisabled","renderSave","textTransform","Save","button","SaveText","strong","DisSave","DisText"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;;;;;;;;;;;;;AAuBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,WAAW,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAFA;AAGnBC,EAAAA,IAAI,EAAE,QAHa;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;;AAQA,MAAMC,YAA6B,GAAG,CAAC;AACrCC,EAAAA,QADqC;AAErCR,EAAAA,QAFqC;AAGrCI,EAAAA,IAHqC;AAIrCH,EAAAA,WAJqC;AAKrCI,EAAAA,KALqC;AAMrCC,EAAAA;AANqC,CAAD,KAOhC;AACJ,QAAMG,cAAwB,GAAG,MAAM;AACrC,WACE,0CACE,oBAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAkB,MAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUT,QAAV,CADF,CADF,CADF;AAOD,GARD;;AAUA,QAAMU,UAAoB,GAAG,MAAM;AACjC,WACE,0CACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEN,IAAI,GAAGA,IAAH,GAAU,QADtB;AAEE,MAAA,OAAO,EAAEH,WAFX;AAGE,MAAA,KAAK;AAAIU,QAAAA,aAAa,EAAE;AAAnB,SAA8BN,KAA9B,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,QAAD;AAAU,MAAA,KAAK;AAAIM,QAAAA,aAAa,EAAE;AAAnB,SAA8BL,SAA9B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,QADH,CALF,CADF,CADF;AAaD,GAdD;;AAgBA,SAAOQ,QAAQ,GAAGC,cAAc,EAAjB,GAAsBC,UAAU,EAA/C;AACD,CAnCD;;AAqCAH,YAAY,CAACR,YAAb,GAA4BA,YAA5B;AAEA,MAAMa,IAAI,GAAGd,MAAM,CAACe,MAAO;;;;;;;;CAA3B;AASA,MAAMC,QAAQ,GAAGhB,MAAM,CAACiB,MAAO;;;;;;;CAA/B;AAQA,MAAMC,OAAO,GAAGlB,MAAM,CAACe,MAAO;;;;;;;CAA9B;AAQA,MAAMI,OAAO,GAAGnB,MAAM,CAACiB,MAAO;;;;;;CAA9B;AAQA,eAAeR,YAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * ==============================================================================\n * <CustomButton />\n * ------------------------------------------------------------------------------\n * @param {boolean}  disabled        Button Disabled (true/false)\n * @param {function} handleClick         OnClick Event\n * @param {any}      children        Children of the button\n * @param {string}   type            Type of button\n * @param {object}   style           Style object\n * @param {object}   textStyle       Text style object\n * @return {ReactElement}\n * ==============================================================================\n */\n\ninterface Props {\n  children: React.ReactNode;\n  handleClick: (e: React.SyntheticEvent<HTMLButtonElement>) => void;\n  disabled?: boolean;\n  type?: any;\n  style?: React.CSSProperties;\n  textStyle?: React.CSSProperties;\n}\n\nconst defaultProps = {\n  children: null,\n  handleClick: () => console.log(\"Custom Button Clicked!\"),\n  type: \"button\",\n  style: {},\n  textStyle: {}\n};\n\nconst CustomButton: React.FC<Props> = ({\n  disabled,\n  children,\n  type,\n  handleClick,\n  style,\n  textStyle\n}) => {\n  const renderDisabled: Function = () => {\n    return (\n      <>\n        <DisSave disabled type=\"button\">\n          <DisText>{children}</DisText>\n        </DisSave>\n      </>\n    );\n  };\n\n  const renderSave: Function = () => {\n    return (\n      <>\n        <Save\n          type={type ? type : \"button\"}\n          onClick={handleClick}\n          style={{ textTransform: \"none\", ...style }}\n        >\n          <SaveText style={{ textTransform: \"none\", ...textStyle }}>\n            {children}\n          </SaveText>\n        </Save>\n      </>\n    );\n  };\n\n  return disabled ? renderDisabled() : renderSave();\n};\n\nCustomButton.defaultProps = defaultProps as Partial<Props>;\n\nconst Save = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #b6d36b;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\nconst SaveText = styled.strong`\n  font-size: 14px;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n`;\nconst DisSave = styled.button`\n  width: 165px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #eeeeee;\n  border: none;\n  outline: none;\n`;\nconst DisText = styled.strong`\n  font-size: 14px;\n  color: #bbbbbb;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}