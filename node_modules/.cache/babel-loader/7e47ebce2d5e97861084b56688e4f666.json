{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/search-bar/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Search as SearchIcon, Settings as GearIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { Paper, Grid, Collapse, List, ListItem, ListItemText, InputAdornment, TextField, TableRow, Table, TableBody, Menu, MuiThemeProvider } from \"@material-ui/core\";\nimport { ActiveCell, LiveCell } from \"../table-cells\";\nimport { theme, useStyles } from \"./styles\";\n\nconst SearchBar = ({\n  title,\n  userData,\n  headers,\n  pathnameData,\n  link,\n  settings,\n  setActiveDataMethod,\n  loading,\n  active,\n  live,\n  modalFunc,\n  classicSearch,\n  customTitle,\n  typed\n}) => {\n  const classes = useStyles({});\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        results = _useState2[0],\n        setResults = _useState2[1];\n\n  const _useState3 = useState(userData),\n        _useState4 = _slicedToArray(_useState3, 2),\n        DummyResults = _useState4[0],\n        setDummyResults = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        anchorEl = _useState6[0],\n        setAnchorEl = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        textSearch = _useState8[0],\n        setTextSearch = _useState8[1];\n\n  const handleClick = (event, data) => {\n    setAnchorEl(event.currentTarget);\n    setActiveDataMethod(data);\n  };\n\n  const handClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      setTextSearch(\"\");\n      setResults(null);\n      setAnchorEl(null);\n    }\n  }, [setTextSearch, loading, setResults, setAnchorEl]);\n  let filtered = [];\n\n  const handleSearch = e => {\n    setTextSearch(e.target.value);\n    const regex = /[*()?+[\\\\]/gi;\n\n    if (typed) {\n      typed(e.target.value);\n    }\n\n    let event = e.target.value.replace(regex, \"\");\n\n    if (event.length !== 0) {\n      const arr = JSON.stringify(userData, function (key, value) {\n        return value || false;\n      });\n      const campaigns = JSON.parse(arr);\n      let filteredData = [];\n      campaigns.forEach(data => {\n        headers.forEach(head => {\n          if (typeof data[head] !== \"boolean\") {\n            if (data[head].toLowerCase().includes(event.toLowerCase())) {\n              filteredData.push(data);\n            }\n          }\n        });\n      });\n      filtered.push([...filteredData]);\n\n      if (classicSearch) {\n        classicSearch(filtered[0]);\n      } else {\n        setDummyResults(filtered[0]);\n        setResults(filtered[0]);\n      }\n    } else {\n      if (classicSearch) {\n        classicSearch(filtered[0]);\n      } else {\n        filtered = [];\n        setResults(null);\n      }\n    }\n  };\n\n  const handlePathname = result => {\n    return `${pathnameData.firstLink}${pathnameData.fetchData.length > 1 ? pathnameData.fetchData[0] === \"uuid\" ? pathnameData.fetchData[1] === \"slug\" ? result.uuid + \"/\" + result.slug : null : pathnameData.fetchData[0] === \"slug\" ? pathnameData.fetchData[1] === \"uuid\" ? result.slug + \"/\" + result.uuid : null : null : pathnameData.fetchData[0] === \"uuid\" ? result.uuid : pathnameData.fetchData[0] === \"slug\" ? result.slug : null}${pathnameData.lastLink}`;\n  };\n\n  return React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    disabled: loading !== undefined ? loading : false,\n    onChange: e => handleSearch(e),\n    \"data-cy\": \"search-bar\",\n    id: \"standard-full-width\",\n    value: textSearch,\n    placeholder: customTitle ? customTitle : `Search for ${title}`,\n    fullWidth: true,\n    margin: \"normal\",\n    autoComplete: \"off\",\n    style: {\n      fontSize: 50,\n      padding: \"5px 15px 15px 15px\",\n      width: \"100%\"\n    },\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        style: {\n          color: \"#bbb\"\n        },\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })),\n      classes: {\n        underline: classes.inputField,\n        root: classes.inputField\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), results !== null ? results.length !== 0 ? null : React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 12,\n    style: {\n      paddingLeft: 10,\n      paddingRight: 10,\n      marginTop: -15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }) : null, React.createElement(Collapse, {\n    in: results !== null ? results.length !== 0 ? false : true : false,\n    timeout: 1000,\n    unmountOnExit: true,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \" \", React.createElement(Paper, {\n    style: {\n      width: \"100%\",\n      fontSize: \"18px\",\n      color: \"#7c8a97\",\n      padding: 20,\n      backgroundColor: \"white\",\n      zIndex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"No results - Try searching for\", \" \", headers === undefined ? \"other fields\" : `${headers}`)), React.createElement(Collapse, {\n    in: results !== null ? results.length === 0 ? false : true : false,\n    timeout: 1000,\n    unmountOnExit: true,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(List, {\n    component: \"nav\",\n    \"aria-label\": \"search results\",\n    style: {\n      maxHeight: 300,\n      height: 300,\n      overflow: \"auto\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, results === null || results.length === 0 ? DummyResults.map((result, i) => {\n    return React.createElement(ListItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: title === \"User\" || title === \"Prospect\" ? `${result.first_name} ${result.last_name}` : `${result.name === undefined ? result[Object.keys(result)[0]] : result.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      style: {\n        marginLeft: \"auto\",\n        paddingRight: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, active !== undefined && active === true && React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(ActiveCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, title === \"User\" ? result.is_active : result.active))))), settings !== undefined && React.createElement(Grid, {\n      item: true,\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(GearIcon, {\n      style: {\n        color: \"#777777\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }))))));\n  }) : results.map((result, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, link !== undefined ? React.createElement(Link, {\n      key: result.uuid,\n      style: {\n        textDecoration: \"none\",\n        color: \"#000\"\n      },\n      to: {\n        pathname: handlePathname(result),\n        state: {\n          company: result\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      onClick: () => {\n        localStorage.setItem(`companyslug`, result.slug);\n        localStorage.setItem(`campaignuuid`, result.uuid);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: title === \"User\" || title === \"Prospect\" ? `${result.first_name} ${result.last_name}` : `${result.name === undefined ? result[Object.keys(result)[0]] : result.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      style: {\n        marginLeft: \"auto\",\n        paddingRight: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, live !== undefined && live === true && React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(LiveCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, result.live))))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, active !== undefined && active === true && React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(ActiveCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, title === \"User\" ? result.is_active : result.active))))), settings !== undefined && React.createElement(Grid, {\n      item: true,\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(GearIcon, {\n      style: {\n        color: \"#777777\"\n      },\n      onClick: e => handleClick(e, result),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      onClose: handClose,\n      style: {\n        marginTop: 40\n      },\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, settings))))))) : React.createElement(React.Fragment, null, React.createElement(ListItem, {\n      button: true,\n      onClick: modalFunc !== undefined ? () => modalFunc(result) : () => null,\n      key: result.uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: title === \"User\" || title === \"Prospect\" ? `${result.first_name} ${result.last_name}` : `${result.name === undefined ? result[Object.keys(result)[0]] : result.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      style: {\n        marginLeft: \"auto\",\n        paddingRight: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, active !== undefined && active === true && React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(ActiveCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, title === \"User\" ? result.is_active : result.active))))), settings !== undefined && React.createElement(Grid, {\n      item: true,\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(GearIcon, {\n      style: {\n        color: \"#777777\"\n      },\n      onClick: e => handleClick(e, result),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }))))))));\n  }), React.createElement(Menu, {\n    onClose: handClose,\n    style: {\n      marginTop: 40\n    },\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    open: Boolean(anchorEl),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, settings))))));\n};\n\nSearchBar.defaultProps = {\n  title: \"Search Data\",\n  userData: [{\n    name: \"sample\"\n  }, {\n    name: \"samples1\"\n  }],\n  headers: [\"name\"],\n  pathnameData: \"\",\n  loading: false\n};\nexport { SearchBar };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/search-bar/index.tsx"],"names":["React","useState","useEffect","Search","SearchIcon","Settings","GearIcon","Link","Paper","Grid","Collapse","List","ListItem","ListItemText","InputAdornment","TextField","TableRow","Table","TableBody","Menu","MuiThemeProvider","ActiveCell","LiveCell","theme","useStyles","SearchBar","title","userData","headers","pathnameData","link","settings","setActiveDataMethod","loading","active","live","modalFunc","classicSearch","customTitle","typed","classes","results","setResults","DummyResults","setDummyResults","anchorEl","setAnchorEl","textSearch","setTextSearch","handleClick","event","data","currentTarget","handClose","filtered","handleSearch","e","target","value","regex","replace","length","arr","JSON","stringify","key","campaigns","parse","filteredData","forEach","head","toLowerCase","includes","push","handlePathname","result","firstLink","fetchData","uuid","slug","lastLink","root","width","undefined","fontSize","padding","endAdornment","color","underline","inputField","paddingLeft","paddingRight","marginTop","backgroundColor","zIndex","maxHeight","height","overflow","map","i","first_name","last_name","name","Object","keys","marginLeft","is_active","textDecoration","pathname","state","company","localStorage","setItem","Boolean","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Search as SearchIcon, Settings as GearIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Paper,\n  Grid,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  InputAdornment,\n  TextField,\n  TableRow,\n  Table,\n  TableBody,\n  Menu,\n  MuiThemeProvider\n} from \"@material-ui/core\";\nimport { ActiveCell, LiveCell } from \"../table-cells\";\nimport { theme, useStyles } from \"./styles\";\n\ninterface Props {\n  title: string;\n  userData: any[];\n  headers: string[];\n  pathnameData?: any;\n  link?: boolean;\n  settings?: any;\n  setActiveDataMethod?: any;\n  loading?: boolean;\n  active?: any;\n  live?: any;\n  modalFunc?: any;\n  classicSearch?: any;\n  customTitle?: any;\n  typed?: any;\n}\n\nconst SearchBar: React.FC<Props> = ({\n  title,\n  userData,\n  headers,\n  pathnameData,\n  link,\n  settings,\n  setActiveDataMethod,\n  loading,\n  active,\n  live,\n  modalFunc,\n  classicSearch,\n  customTitle,\n  typed\n}) => {\n  const classes = useStyles({});\n  const [results, setResults] = useState<object[][] | null | any>(null);\n  const [DummyResults, setDummyResults] = useState<any[]>(userData);\n  const [anchorEl, setAnchorEl] = useState<Element | null>(null);\n  const [textSearch, setTextSearch] = useState<string>(\"\");\n\n  const handleClick = (event: any, data: any) => {\n    setAnchorEl(event.currentTarget);\n    setActiveDataMethod(data);\n  };\n\n  const handClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      setTextSearch(\"\");\n      setResults(null);\n      setAnchorEl(null);\n    }\n  }, [setTextSearch, loading, setResults, setAnchorEl]);\n\n  let filtered: any[] = [];\n\n  const handleSearch = (e: any) => {\n    setTextSearch(e.target.value);\n    const regex = /[*()?+[\\\\]/gi;\n    if (typed) {\n      typed(e.target.value);\n    }\n    let event = e.target.value.replace(regex, \"\");\n    if (event.length !== 0) {\n      const arr = JSON.stringify(userData, function(key, value) {\n        return value || false;\n      });\n      const campaigns = JSON.parse(arr);\n      let filteredData: any[] = [];\n\n      campaigns.forEach((data: any) => {\n        headers.forEach((head) => {\n          if (typeof data[head] !== \"boolean\") {\n            if (data[head].toLowerCase().includes(event.toLowerCase())) {\n              filteredData.push(data);\n            }\n          }\n        });\n      });\n\n      filtered.push([...filteredData]);\n\n      if (classicSearch) {\n        classicSearch(filtered[0]);\n      } else {\n        setDummyResults(filtered[0]);\n        setResults(filtered[0]);\n      }\n    } else {\n      if (classicSearch) {\n        classicSearch(filtered[0]);\n      } else {\n        filtered = [];\n        setResults(null);\n      }\n    }\n  };\n\n  const handlePathname = (result: any) => {\n    return `${pathnameData.firstLink}${\n      pathnameData.fetchData.length > 1\n        ? pathnameData.fetchData[0] === \"uuid\"\n          ? pathnameData.fetchData[1] === \"slug\"\n            ? result.uuid + \"/\" + result.slug\n            : null\n          : pathnameData.fetchData[0] === \"slug\"\n          ? pathnameData.fetchData[1] === \"uuid\"\n            ? result.slug + \"/\" + result.uuid\n            : null\n          : null\n        : pathnameData.fetchData[0] === \"uuid\"\n        ? result.uuid\n        : pathnameData.fetchData[0] === \"slug\"\n        ? result.slug\n        : null\n    }${pathnameData.lastLink}`;\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <Grid container style={{ width: \"100%\" }}>\n          <Grid item xs={12} lg={12}>\n            <TextField\n              disabled={loading !== undefined ? loading : false}\n              onChange={(e) => handleSearch(e)}\n              data-cy=\"search-bar\"\n              id=\"standard-full-width\"\n              value={textSearch}\n              placeholder={customTitle ? customTitle : `Search for ${title}`}\n              fullWidth\n              margin=\"normal\"\n              autoComplete=\"off\"\n              style={{\n                fontSize: 50,\n                padding: \"5px 15px 15px 15px\",\n                width: \"100%\"\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <SearchIcon style={{ color: \"#bbb\" }} fontSize=\"small\" />\n                  </InputAdornment>\n                ),\n                classes: {\n                  underline: classes.inputField,\n                  root: classes.inputField\n                }\n              }}\n            />\n          </Grid>\n          {results !== null ? (\n            results.length !== 0 ? null : (\n              <Grid\n                item\n                xs={12}\n                lg={12}\n                style={{ paddingLeft: 10, paddingRight: 10, marginTop: -15 }}\n              ></Grid>\n            )\n          ) : null}\n          <Collapse\n            in={\n              results !== null ? (results.length !== 0 ? false : true) : false\n            }\n            timeout={1000}\n            unmountOnExit\n            style={{ width: \"100%\" }}\n          >\n            {\" \"}\n            <Paper\n              style={{\n                width: \"100%\",\n                fontSize: \"18px\",\n                color: \"#7c8a97\",\n                padding: 20,\n                backgroundColor: \"white\",\n                zIndex: 1\n              }}\n            >\n              No results - Try searching for{\" \"}\n              {headers === undefined ? \"other fields\" : `${headers}`}\n            </Paper>\n          </Collapse>\n\n          <Collapse\n            in={\n              results !== null ? (results.length === 0 ? false : true) : false\n            }\n            timeout={1000}\n            unmountOnExit\n            style={{ width: \"100%\" }}\n          >\n            <List\n              component=\"nav\"\n              aria-label=\"search results\"\n              style={{\n                maxHeight: 300,\n                height: 300,\n                overflow: \"auto\",\n                width: \"100%\"\n              }}\n            >\n              {results === null || results.length === 0\n                ? DummyResults.map((result: any, i: number) => {\n                    return (\n                      <ListItem key={i}>\n                        <Grid container>\n                          <Grid item>\n                            <ListItemText\n                              primary={\n                                title === \"User\" || title === \"Prospect\"\n                                  ? `${result.first_name} ${result.last_name}`\n                                  : `${\n                                      result.name === undefined\n                                        ? result[Object.keys(result)[0]]\n                                        : result.name\n                                    }`\n                              }\n                            />\n                          </Grid>\n                          <Grid\n                            item\n                            style={{ marginLeft: \"auto\", paddingRight: 20 }}\n                          >\n                            <Grid container spacing={5}>\n                              <Grid item>\n                                {active !== undefined && active === true && (\n                                  <Table>\n                                    <TableBody>\n                                      <TableRow>\n                                        <ActiveCell>\n                                          {title === \"User\"\n                                            ? result.is_active\n                                            : result.active}\n                                        </ActiveCell>\n                                      </TableRow>\n                                    </TableBody>\n                                  </Table>\n                                )}\n                              </Grid>\n                              {settings !== undefined && (\n                                <Grid item style={{ marginTop: 10 }}>\n                                  <GearIcon style={{ color: \"#777777\" }} />\n                                </Grid>\n                              )}\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </ListItem>\n                    );\n                  })\n                : results.map((result: any, i: number) => {\n                    return (\n                      <div key={i}>\n                        {link !== undefined ? (\n                          <Link\n                            key={result.uuid}\n                            style={{\n                              textDecoration: \"none\",\n                              color: \"#000\"\n                            }}\n                            to={{\n                              pathname: handlePathname(result),\n                              state: {\n                                company: result\n                              }\n                            }}\n                          >\n                            <ListItem\n                              button\n                              onClick={() => {\n                                localStorage.setItem(\n                                  `companyslug`,\n                                  result.slug\n                                );\n                                localStorage.setItem(\n                                  `campaignuuid`,\n                                  result.uuid\n                                );\n                              }}\n                            >\n                              <Grid container>\n                                <Grid item>\n                                  <ListItemText\n                                    primary={\n                                      title === \"User\" || title === \"Prospect\"\n                                        ? `${result.first_name} ${result.last_name}`\n                                        : `${\n                                            result.name === undefined\n                                              ? result[Object.keys(result)[0]]\n                                              : result.name\n                                          }`\n                                    }\n                                  />\n                                </Grid>\n                                <Grid\n                                  item\n                                  style={{\n                                    marginLeft: \"auto\",\n                                    paddingRight: 20\n                                  }}\n                                >\n                                  <Grid container spacing={5}>\n                                    <Grid item>\n                                      {live !== undefined && live === true && (\n                                        <Table>\n                                          <TableBody>\n                                            <TableRow>\n                                              <LiveCell>{result.live}</LiveCell>\n                                            </TableRow>\n                                          </TableBody>\n                                        </Table>\n                                      )}\n                                    </Grid>\n                                    <Grid item>\n                                      {active !== undefined && active === true && (\n                                        <Table>\n                                          <TableBody>\n                                            <TableRow>\n                                              <ActiveCell>\n                                                {title === \"User\"\n                                                  ? result.is_active\n                                                  : result.active}\n                                              </ActiveCell>\n                                            </TableRow>\n                                          </TableBody>\n                                        </Table>\n                                      )}\n                                    </Grid>\n                                    {settings !== undefined && (\n                                      <Grid item style={{ marginTop: 10 }}>\n                                        <GearIcon\n                                          style={{ color: \"#777777\" }}\n                                          onClick={(e) =>\n                                            handleClick(e, result)\n                                          }\n                                        />\n                                        <Menu\n                                          onClose={handClose}\n                                          style={{ marginTop: 40 }}\n                                          id=\"simple-menu\"\n                                          anchorEl={anchorEl}\n                                          open={Boolean(anchorEl)}\n                                        >\n                                          {settings}\n                                        </Menu>\n                                      </Grid>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                            </ListItem>\n                          </Link>\n                        ) : (\n                          <>\n                            <ListItem\n                              button\n                              onClick={\n                                modalFunc !== undefined\n                                  ? () => modalFunc(result)\n                                  : () => null\n                              }\n                              key={result.uuid}\n                            >\n                              <Grid container>\n                                <Grid item>\n                                  <ListItemText\n                                    primary={\n                                      title === \"User\" || title === \"Prospect\"\n                                        ? `${result.first_name} ${result.last_name}`\n                                        : `${\n                                            result.name === undefined\n                                              ? result[Object.keys(result)[0]]\n                                              : result.name\n                                          }`\n                                    }\n                                  />\n                                </Grid>\n                                <Grid\n                                  item\n                                  style={{\n                                    marginLeft: \"auto\",\n                                    paddingRight: 20\n                                  }}\n                                >\n                                  <Grid container spacing={5}>\n                                    <Grid item>\n                                      {active !== undefined && active === true && (\n                                        <Table>\n                                          <TableBody>\n                                            <TableRow>\n                                              <ActiveCell>\n                                                {title === \"User\"\n                                                  ? result.is_active\n                                                  : result.active}\n                                              </ActiveCell>\n                                            </TableRow>\n                                          </TableBody>\n                                        </Table>\n                                      )}\n                                    </Grid>\n                                    {settings !== undefined && (\n                                      <Grid item style={{ marginTop: 10 }}>\n                                        <GearIcon\n                                          style={{ color: \"#777777\" }}\n                                          onClick={(e) =>\n                                            handleClick(e, result)\n                                          }\n                                        />\n                                      </Grid>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                            </ListItem>\n                          </>\n                        )}\n                      </div>\n                    );\n                  })}\n              <Menu\n                onClose={handClose}\n                style={{ marginTop: 40 }}\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n              >\n                {settings}\n              </Menu>\n            </List>\n          </Collapse>\n        </Grid>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nSearchBar.defaultProps = {\n  title: \"Search Data\",\n  userData: [{ name: \"sample\" }, { name: \"samples1\" }],\n  headers: [\"name\"],\n  pathnameData: \"\",\n  loading: false\n};\n\nexport { SearchBar };\n"]},"metadata":{},"sourceType":"module"}