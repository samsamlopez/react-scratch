{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/call-menu/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { Grid, Avatar, Typography, Box, IconButton } from \"@material-ui/core\";\nimport { PhoneInTalk, VolumeOff, MicOff, Close, VolumeUp, Mic } from \"@material-ui/icons\";\nimport Timer from \"react-timer-wrapper\";\nimport Timecode from \"react-timecode\";\nimport { useStyles, CallMenuPaper } from \"./styles\";\n\nconst AgentName = props => {\n  const classes = props.classes,\n        agentName = props.agentName,\n        agentImage = props.agentImage;\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginLeft: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: agentName //src={`${agentImage}`}\n    ,\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      fontSize: \"18px\",\n      color: \"#444851\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, agentName), React.createElement(Typography, {\n    style: {\n      fontSize: \"14px\",\n      color: \"#777777\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"On Call\\u2026\")));\n};\n\nconst ButtonsAgent = props => {\n  const classes = props.classes,\n        callInfo = props.callInfo,\n        ToggleCallButton = props.ToggleCallButton,\n        OpenMonitorFunc = props.OpenMonitorFunc;\n  const listening = callInfo.listening,\n        whisper = callInfo.whisper;\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => ToggleCallButton(\"listening\"),\n    size: \"small\",\n    className: listening ? classes.active : classes.inactive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, listening ? React.createElement(VolumeUp, {\n    className: classes.activeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : React.createElement(VolumeOff, {\n    className: classes.inactiveIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    style: {\n      fontSize: \"12px\",\n      color: \"#777777\"\n    },\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Listen\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => ToggleCallButton(\"whisper\"),\n    size: \"small\",\n    className: whisper ? classes.active : classes.inactive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, whisper ? React.createElement(Mic, {\n    className: classes.activeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }) : React.createElement(MicOff, {\n    className: classes.inactiveIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    style: {\n      fontSize: \"12px\",\n      color: \"#777777\"\n    },\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Whisper\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => OpenMonitorFunc(\"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Close, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))));\n};\n\nconst CallTimer = props => {\n  const classes = props.classes,\n        children = props.children;\n  return React.createElement(Box, {\n    className: classes.calltimer,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, children);\n};\n\nconst CallMenu = props => {\n  const classes = useStyles();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        time = _useState2[0],\n        setTime = _useState2[1];\n\n  const callInfo = props.callInfo,\n        ToggleCallButton = props.ToggleCallButton,\n        OpenMonitorFunc = props.OpenMonitorFunc;\n  const agentName = callInfo.agentName,\n        agentImage = callInfo.agentImage;\n  useEffect(() => {\n    setTime(0);\n  }, [time]);\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Draggable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(CallMenuPaper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    md: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(PhoneInTalk, {\n    className: classes.phoneintalk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(AgentName, {\n    classes: classes,\n    agentName: agentName,\n    agentImage: agentImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    md: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(CallTimer, {\n    classes: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    active: true,\n    duration: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Timecode, {\n    format: \"H:mm:ss\",\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(ButtonsAgent, {\n    classes: classes,\n    callInfo: callInfo,\n    ToggleCallButton: ToggleCallButton,\n    OpenMonitorFunc: OpenMonitorFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }))))));\n};\n\nexport { CallMenu };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/call-menu/index.tsx"],"names":["React","useState","useEffect","Draggable","Grid","Avatar","Typography","Box","IconButton","PhoneInTalk","VolumeOff","MicOff","Close","VolumeUp","Mic","Timer","Timecode","useStyles","CallMenuPaper","AgentName","props","classes","agentName","agentImage","marginLeft","avatar","fontSize","color","ButtonsAgent","callInfo","ToggleCallButton","OpenMonitorFunc","listening","whisper","active","inactive","activeIcon","inactiveIcon","CallTimer","children","calltimer","CallMenu","time","setTime","width","display","justifyContent","paper","phoneintalk"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { Grid, Avatar, Typography, Box, IconButton } from \"@material-ui/core\";\nimport {\n  PhoneInTalk,\n  VolumeOff,\n  MicOff,\n  Close,\n  VolumeUp,\n  Mic\n} from \"@material-ui/icons\";\nimport Timer from \"react-timer-wrapper\";\nimport Timecode from \"react-timecode\";\n\nimport { useStyles, CallMenuPaper } from \"./styles\";\n\ninterface Props {\n  agentName?: string;\n  agentImage?: any;\n  classes?: any;\n  callInfo?: any;\n  ToggleCallButton?: any;\n  OpenMonitorFunc?: any;\n  children?: React.ReactNode;\n}\n\nconst AgentName: Function = (props: Props) => {\n  const { classes, agentName, agentImage } = props;\n  return (\n    <Grid container spacing={2} style={{ marginLeft: 5 }}>\n      <Grid item>\n        <Avatar\n          alt={agentName}\n          //src={`${agentImage}`}\n          className={classes.avatar}\n        />\n      </Grid>\n      <Grid item>\n        <Typography style={{ fontSize: \"18px\", color: \"#444851\" }}>\n          {agentName}\n        </Typography>\n        <Typography style={{ fontSize: \"14px\", color: \"#777777\" }}>\n          On Call…\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst ButtonsAgent: Function = (props: Props) => {\n  const { classes, callInfo, ToggleCallButton, OpenMonitorFunc } = props;\n  const { listening, whisper } = callInfo;\n  return (\n    <Grid container spacing={2} style={{ marginLeft: 10 }}>\n      <Grid item>\n        <IconButton\n          onClick={() => ToggleCallButton(\"listening\")}\n          size=\"small\"\n          className={listening ? classes.active : classes.inactive}\n        >\n          {listening ? (\n            <VolumeUp className={classes.activeIcon} />\n          ) : (\n            <VolumeOff className={classes.inactiveIcon} />\n          )}\n        </IconButton>\n        <Typography\n          style={{ fontSize: \"12px\", color: \"#777777\" }}\n          align=\"center\"\n        >\n          Listen\n        </Typography>\n      </Grid>\n      <Grid item>\n        <IconButton\n          onClick={() => ToggleCallButton(\"whisper\")}\n          size=\"small\"\n          className={whisper ? classes.active : classes.inactive}\n        >\n          {whisper ? (\n            <Mic className={classes.activeIcon} />\n          ) : (\n            <MicOff className={classes.inactiveIcon} />\n          )}\n        </IconButton>\n        <Typography\n          style={{ fontSize: \"12px\", color: \"#777777\" }}\n          align=\"center\"\n        >\n          Whisper\n        </Typography>\n      </Grid>\n      <Grid item>\n        <IconButton onClick={() => OpenMonitorFunc(\"\")}>\n          <Close />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst CallTimer: Function = (props: Props) => {\n  const { classes, children } = props;\n  return (\n    <Box\n      className={classes.calltimer}\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst CallMenu: Function = (props: Props) => {\n  const classes = useStyles();\n  const [time, setTime] = useState();\n  const { callInfo, ToggleCallButton, OpenMonitorFunc } = props;\n  const { agentName, agentImage } = callInfo;\n\n  useEffect(() => {\n    setTime(0);\n  }, [time]);\n  return (\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n      <Draggable>\n        <CallMenuPaper className={classes.paper}>\n          <Grid container alignItems=\"center\" spacing={3}>\n            <Grid item xs={1} md={1}>\n              <PhoneInTalk className={classes.phoneintalk} />\n            </Grid>\n            <Grid item xs={5} md={5}>\n              <AgentName\n                classes={classes}\n                agentName={agentName}\n                agentImage={agentImage}\n              />\n            </Grid>\n\n            <Grid item xs={2} md={2}>\n              <CallTimer classes={classes}>\n                <Timer active duration={null}>\n                  <Timecode format=\"H:mm:ss\" time={time} />\n                </Timer>\n              </CallTimer>\n            </Grid>\n            <Grid item xs={4} md={4}>\n              <ButtonsAgent\n                classes={classes}\n                callInfo={callInfo}\n                ToggleCallButton={ToggleCallButton}\n                OpenMonitorFunc={OpenMonitorFunc}\n              />\n            </Grid>\n          </Grid>\n        </CallMenuPaper>\n      </Draggable>\n    </div>\n  );\n};\n\nexport { CallMenu };\n"]},"metadata":{},"sourceType":"module"}