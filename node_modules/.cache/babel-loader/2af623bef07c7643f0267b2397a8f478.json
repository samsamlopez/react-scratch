{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Documents/react-portal/src/common-components/async-table/index.tsx\";\nimport React from \"react\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, Checkbox, withStyles, MuiThemeProvider } from \"@material-ui/core\";\nimport { styles, theme } from \"./styles\";\n\nconst MainContainer = ({\n  headers,\n  tableData,\n  render,\n  classes,\n  customHeight,\n  withBorder\n}) => {\n  const CheckBoxLabel = ({\n    clickFn,\n    state,\n    label\n  }) => {\n    return React.createElement(React.Fragment, null, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"0fr 1fr\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onClick: () => clickFn(),\n      color: \"primary\",\n      checked: state,\n      style: {\n        padding: \"0 20px 0 7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      onClick: () => clickFn(),\n      className: classes.overflowClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, label))));\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.rootClass,\n    style: {\n      minHeight: customHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    style: withBorder ? {\n      border: \".5px solid #eeeeee\"\n    } : {\n      border: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"colgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].map(e => React.createElement(\"col\", {\n    key: e,\n    style: {\n      width: \"7.69230769231%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), headers ? React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.headerRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, headers.map((header, idx) => header.check ? React.createElement(TableCell, {\n    className: classes.header,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(CheckBoxLabel, {\n    key: idx,\n    label: header.title,\n    state: header.state,\n    clickFn: header.clickFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })) : React.createElement(TableCell, {\n    className: classes.header,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.overflowClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, header))))) : null, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, render(tableData, {\n    row: classes.row,\n    cell: classes.cell,\n    userCell: classes.userCell,\n    emailCell: classes.emailCell,\n    uuid: classes.uuid,\n    icon: classes.icon,\n    fixedCell: classes.fixedCell,\n    overflow: classes.overflowClass\n  }))));\n};\n\nMainContainer.defaultProps = {\n  headers: [],\n  tableData: [],\n  render: () => null,\n  classes: [],\n  customHeight: \"initial\",\n  withBorder: false\n};\nconst AsyncTable = withStyles(styles)(MainContainer);\nexport { AsyncTable };","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/common-components/async-table/index.tsx"],"names":["React","Table","TableHead","TableBody","TableRow","TableCell","Checkbox","withStyles","MuiThemeProvider","styles","theme","MainContainer","headers","tableData","render","classes","customHeight","withBorder","CheckBoxLabel","clickFn","state","label","display","gridTemplateColumns","padding","overflowClass","rootClass","minHeight","table","border","map","e","width","headerRow","header","idx","check","title","row","cell","userCell","emailCell","uuid","icon","fixedCell","overflow","defaultProps","AsyncTable"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Checkbox,\n  withStyles,\n  MuiThemeProvider\n} from \"@material-ui/core\";\n\nimport { styles, theme } from \"./styles\";\n\ninterface Props {\n  headers: any;\n  tableData: any;\n  render: Function;\n  classes: any;\n  customHeight: number | string;\n  withBorder: boolean;\n}\ninterface CheckProps {\n  clickFn: Function;\n  state: boolean;\n  label: string;\n}\ninterface HeaderProps {\n  clickFn: Function;\n  state: boolean;\n  title: string;\n  check: boolean;\n}\n\nconst MainContainer: React.FC<Props> = ({\n  headers,\n  tableData,\n  render,\n  classes,\n  customHeight,\n  withBorder\n}) => {\n  const CheckBoxLabel = ({ clickFn, state, label }: CheckProps) => {\n    return (\n      <>\n        <MuiThemeProvider theme={theme}>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"0fr 1fr\"\n            }}\n          >\n            <Checkbox\n              onClick={() => clickFn()}\n              color=\"primary\"\n              checked={state}\n              style={{\n                padding: \"0 20px 0 7px\"\n              }}\n            />\n            <p onClick={() => clickFn()} className={classes.overflowClass}>\n              {label}\n            </p>\n          </div>\n        </MuiThemeProvider>\n      </>\n    );\n  };\n\n  return (\n    <div className={classes.rootClass} style={{ minHeight: customHeight }}>\n      <Table\n        className={classes.table}\n        style={\n          withBorder ? { border: \".5px solid #eeeeee\" } : { border: \"none\" }\n        }\n      >\n        <colgroup>\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].map(e => (\n            <col key={e} style={{ width: \"7.69230769231%\" }} />\n          ))}\n        </colgroup>\n        {headers ? (\n          <TableHead>\n            <TableRow className={classes.headerRow}>\n              {headers.map((header: HeaderProps, idx: number) =>\n                header.check ? (\n                  <TableCell className={classes.header} key={idx}>\n                    <CheckBoxLabel\n                      key={idx}\n                      label={header.title}\n                      state={header.state}\n                      clickFn={header.clickFn}\n                    />\n                  </TableCell>\n                ) : (\n                  <TableCell className={classes.header} key={idx}>\n                    <span className={classes.overflowClass}>{header}</span>\n                  </TableCell>\n                )\n              )}\n            </TableRow>\n          </TableHead>\n        ) : null}\n\n        <TableBody>\n          {render(tableData, {\n            row: classes.row,\n            cell: classes.cell,\n            userCell: classes.userCell,\n            emailCell: classes.emailCell,\n            uuid: classes.uuid,\n            icon: classes.icon,\n            fixedCell: classes.fixedCell,\n            overflow: classes.overflowClass\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nMainContainer.defaultProps = {\n  headers: [],\n  tableData: [],\n  render: () => null,\n  classes: [],\n  customHeight: \"initial\",\n  withBorder: false\n} as Partial<Props>;\n\nconst AsyncTable = withStyles(styles)(MainContainer);\n\nexport { AsyncTable };\n"]},"metadata":{},"sourceType":"module"}