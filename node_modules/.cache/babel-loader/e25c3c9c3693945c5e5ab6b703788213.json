{"ast":null,"code":"import _slicedToArray from \"/home/webdev/Documents/react-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/webdev/Documents/react-portal/src/components/manage/manage-realms/realms-landing/RealmTable.js\";\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { FileCopyOutlined as Icon } from '@material-ui/icons';\nimport { mdiContentCopy } from '@mdi/js';\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { AsyncTable } from 'common-components/async-table/AsyncTable';\nimport { EditButton } from 'common-components/EditButton/EditButton';\nimport { ActiveCell, UnderlineCell } from 'common-components/table-cells/TableCells';\nimport { headers, LightTooltip } from './contsVar';\n\nconst RealmTable = ({\n  realms,\n  history\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        copy = _useState2[0],\n        setCopy = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(AsyncTable, {\n    headers: headers,\n    tableData: realms,\n    render: (realms, {\n      row,\n      cell,\n      uuid,\n      icon\n    }) => realms.map(realm => React.createElement(TableRow, {\n      key: realm.uuid,\n      className: row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(UnderlineCell, {\n      className: cell,\n      onClick: () => history.push(`/manage/realms/edit/${realm.uuid}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, realm.name), React.createElement(TableCell, {\n      className: uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, realm.uuid), React.createElement(CopyToClipboard, {\n      text: realm.uuid,\n      onCopy: () => setCopy(true),\n      onPointerLeave: () => setCopy(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, copy ? React.createElement(LightTooltip, {\n      title: \"UUID Copied!\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiContentCopy,\n      className: icon,\n      size: 1,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })) : React.createElement(LightTooltip, {\n      title: \"Copy UUID\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiContentCopy,\n      className: icon,\n      size: 1,\n      rotate: 360,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })))), React.createElement(ActiveCell, {\n      className: cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, realm.active), React.createElement(TableCell, {\n      className: cell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(EditButton, {\n      text: \"Edit\",\n      onClickFunc: () => history.push(`/manage/realms/edit/${realm.uuid}`),\n      style: {\n        color: '#444851'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nexport default RealmTable;","map":{"version":3,"sources":["/home/webdev/Documents/react-portal/src/components/manage/manage-realms/realms-landing/RealmTable.js"],"names":["TableCell","TableRow","FileCopyOutlined","Icon","mdiContentCopy","React","useState","CopyToClipboard","AsyncTable","EditButton","ActiveCell","UnderlineCell","headers","LightTooltip","RealmTable","realms","history","copy","setCopy","row","cell","uuid","icon","map","realm","push","name","active","color"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,SAASC,gBAAgB,IAAIC,IAA7B,QAAyC,oBAAzC;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,SACEC,UADF,EAEEC,aAFF,QAGO,0CAHP;AAIA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,YAAtC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAAA,oBAClBV,QAAQ,CAAC,KAAD,CADU;AAAA;AAAA,QACnCW,IADmC;AAAA,QAC7BC,OAD6B;;AAG1C,SACE,0CACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,SAAS,EAAEG,MAFb;AAGE,IAAA,MAAM,EAAE,CAACA,MAAD,EAAS;AAAEI,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA;AAAnB,KAAT,KACNP,MAAM,CAACQ,GAAP,CAAWC,KAAK,IACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAK,CAACH,IAArB;AAA2B,MAAA,SAAS,EAAEF,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,SAAS,EAAEC,IADb;AAEE,MAAA,OAAO,EAAE,MACPJ,OAAO,CAACS,IAAR,CAAc,uBAAsBD,KAAK,CAACH,IAAK,EAA/C,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGG,KAAK,CAACE,IANT,CADF,EASE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEL,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,KAAK,CAACH,IAAV,CADF,EAEE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAEG,KAAK,CAACH,IADd;AAEE,MAAA,MAAM,EAAE,MAAMH,OAAO,CAAC,IAAD,CAFvB;AAGE,MAAA,cAAc,EAAE,MAAMA,OAAO,CAAC,KAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,IAAI,GACH,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,cAApB;AAAmC,MAAA,SAAS,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEb,cADR;AAEE,MAAA,SAAS,EAAEkB,IAFb;AAGE,MAAA,IAAI,EAAE,CAHR;AAIE,MAAA,MAAM,EAAE,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADG,GAUD,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,WAApB;AAAgC,MAAA,SAAS,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAElB,cADR;AAEE,MAAA,SAAS,EAAEkB,IAFb;AAGE,MAAA,IAAI,EAAE,CAHR;AAIE,MAAA,MAAM,EAAE,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfN,CAFF,CATF,EAqCE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEF,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BI,KAAK,CAACG,MAApC,CArCF,EAsCE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEP,IAAtB;AAA4B,MAAA,KAAK,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAE,MACXJ,OAAO,CAACS,IAAR,CAAc,uBAAsBD,KAAK,CAACH,IAAK,EAA/C,CAHJ;AAKE,MAAA,KAAK,EAAE;AACLO,QAAAA,KAAK,EAAE;AADF,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtCF,CADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA8DD,CAjED;;AAmEA,eAAed,UAAf","sourcesContent":["import { TableCell, TableRow } from '@material-ui/core'\nimport { FileCopyOutlined as Icon } from '@material-ui/icons'\nimport { mdiContentCopy } from '@mdi/js'\nimport React, { useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { AsyncTable } from 'common-components/async-table/AsyncTable'\nimport { EditButton } from 'common-components/EditButton/EditButton'\nimport {\n  ActiveCell,\n  UnderlineCell\n} from 'common-components/table-cells/TableCells'\nimport { headers, LightTooltip } from './contsVar'\n\nconst RealmTable = ({ realms, history }) => {\n  const [copy, setCopy] = useState(false)\n\n  return (\n    <>\n      <AsyncTable\n        headers={headers}\n        tableData={realms}\n        render={(realms, { row, cell, uuid, icon }) =>\n          realms.map(realm => (\n            <TableRow key={realm.uuid} className={row}>\n              <UnderlineCell\n                className={cell}\n                onClick={() =>\n                  history.push(`/manage/realms/edit/${realm.uuid}`)\n                }\n              >\n                {realm.name}\n              </UnderlineCell>\n              <TableCell className={uuid}>\n                <p>{realm.uuid}</p>\n                <CopyToClipboard\n                  text={realm.uuid}\n                  onCopy={() => setCopy(true)}\n                  onPointerLeave={() => setCopy(false)}\n                >\n                  {copy ? (\n                    <LightTooltip title=\"UUID Copied!\" placement=\"top\">\n                      <Icon\n                        path={mdiContentCopy}\n                        className={icon}\n                        size={1}\n                        rotate={360}\n                      />\n                    </LightTooltip>\n                  ) : (\n                      <LightTooltip title=\"Copy UUID\" placement=\"top\">\n                        <Icon\n                          path={mdiContentCopy}\n                          className={icon}\n                          size={1}\n                          rotate={360}\n                        />\n                      </LightTooltip>\n                    )}\n                </CopyToClipboard>\n              </TableCell>\n              <ActiveCell className={cell}>{realm.active}</ActiveCell>\n              <TableCell className={cell} align=\"right\">\n                <EditButton\n                  text=\"Edit\"\n                  onClickFunc={() =>\n                    history.push(`/manage/realms/edit/${realm.uuid}`)\n                  }\n                  style={{\n                    color: '#444851'\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </>\n  )\n}\n\nexport default RealmTable\n"]},"metadata":{},"sourceType":"module"}